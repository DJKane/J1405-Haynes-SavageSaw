(*********************************************

  Import-Export
  Version   := RSLogix 5000 v37.01
  Owner     := , 
  Exported  := Thu Oct 30 17:07:35 2025

  Note:  File encoded in UTF-8.  Only edit file in a program 
         which supports UTF-8 (like Notepad, not Wordpad).

**********************************************)
IE_VER := 2.28;

CONTROLLER Savage_Saw (ProcessorType := "1769-L18ER-BB1B",
                       Major := 37,
                       TimeSlice := 20,
                       ShareUnusedTimeSlice := 1,
                       CommPath := "AB_ETHIP-1\192.168.3.10",
                       RedundancyEnabled := 0,
                       KeepTestEditsOnSwitchOver := 0,
                       DataTablePadPercentage := 50,
                       SecurityCode := 0,
                       ChangesToDetect := 16#ffff_ffff_ffff_ffff,
                       SFCExecutionControl := "CurrentActive",
                       SFCRestartPosition := "MostRecent",
                       SFCLastScan := "DontScan",
                       SerialNumber := 16#706c_3586,
                       MatchProjectToController := No,
                       CanUseRPIFromProducer := No,
                       InhibitAutomaticFirmwareUpdate := 0,
                       PassThroughConfiguration := EnabledWithAppend,
                       DownloadProjectDocumentationAndExtendedProperties := Yes,
                       ReportMinorOverflow := 0,
                       DataExchangeId := {A25F4E3F-DFA8-4AF6-9FD5-88C1404291ED})
	DATATYPE AxisData (FamilyType := NoFamily)
		REAL PositionActual;
		REAL FinalOutput;
		REAL VelocityActual;
		REAL PositionTarget;
		REAL VelocityTarget;
		SINT ZZZZZZZZZZAxisData5 (Hidden := 1);
		BIT InPosition ZZZZZZZZZZAxisData5 : 0;
		BIT AtVelocity ZZZZZZZZZZAxisData5 : 1;
		BIT OpenLoop ZZZZZZZZZZAxisData5 : 2;
		BIT FaultInput ZZZZZZZZZZAxisData5 : 3;
		BIT LimitPos ZZZZZZZZZZAxisData5 : 4;
		BIT LimitNeg ZZZZZZZZZZAxisData5 : 5;
		BIT Stopped ZZZZZZZZZZAxisData5 : 6;
		BIT InputEstimated ZZZZZZZZZZAxisData5 : 7;
		SINT ZZZZZZZZZZAxisData14 (Hidden := 1);
		BIT OutputEnabled ZZZZZZZZZZAxisData14 : 0;
		BIT TargetGeneratorDone ZZZZZZZZZZAxisData14 : 1;
		BIT TargetGeneratorStateA ZZZZZZZZZZAxisData14 : 2;
		BIT TargetGeneratorStateB ZZZZZZZZZZAxisData14 : 3;
		BIT DirectOutput ZZZZZZZZZZAxisData14 : 4;
		BIT Enabled ZZZZZZZZZZAxisData14 : 5;
		BIT ExternalHalt ZZZZZZZZZZAxisData14 : 6;
		BIT Halted ZZZZZZZZZZAxisData14 : 7;
		SINT ZZZZZZZZZZAxisData23 (Hidden := 1);
		BIT ForceControlled ZZZZZZZZZZAxisData23 : 0;
		BIT ForceLimitEnabled ZZZZZZZZZZAxisData23 : 1;
		BIT ForceLimited ZZZZZZZZZZAxisData23 : 2;
		BIT AtForce ZZZZZZZZZZAxisData23 : 3;
		BIT ForceInputEstimated ZZZZZZZZZZAxisData23 : 4;
		BIT ForceTargetGeneratorDone ZZZZZZZZZZAxisData23 : 5;
		BIT ForceTargetGeneratorStateA ZZZZZZZZZZAxisData23 : 6;
		BIT ForceTargetGeneratorStateB ZZZZZZZZZZAxisData23 : 7;
		SINT ZZZZZZZZZZAxisData32 (Hidden := 1);
		BIT TargetGeneratorBusy ZZZZZZZZZZAxisData32 : 0;
		BIT ForceTargetGeneratorBusy ZZZZZZZZZZAxisData32 : 1;
		BIT FeedbackOK ZZZZZZZZZZAxisData32 : 2;
		BIT FeedbackOkSecondary ZZZZZZZZZZAxisData32 : 3;
		BIT StateMachineEnabled ZZZZZZZZZZAxisData32 : 4;
		BIT zs29 ZZZZZZZZZZAxisData32 : 5;
		BIT zs30 ZZZZZZZZZZAxisData32 : 6;
		BIT CommandAcknowledged ZZZZZZZZZZAxisData32 : 7;
		SINT ZZZZZZZZZZAxisData41 (Hidden := 1);
		BIT Encoder_A_In ZZZZZZZZZZAxisData41 : 0;
		BIT Encoder_A_WireBreak ZZZZZZZZZZAxisData41 : 1;
		BIT Encoder_A_Fault ZZZZZZZZZZAxisData41 : 2;
		BIT Encoder_B_In ZZZZZZZZZZAxisData41 : 3;
		BIT Encoder_B_WireBreak ZZZZZZZZZZAxisData41 : 4;
		BIT Encoder_B_Fault ZZZZZZZZZZAxisData41 : 5;
		BIT Encoder_Z_In ZZZZZZZZZZAxisData41 : 6;
		BIT Encoder_Z_WireBreak ZZZZZZZZZZAxisData41 : 7;
		SINT ZZZZZZZZZZAxisData50 (Hidden := 1);
		BIT Encoder_Z_Fault ZZZZZZZZZZAxisData50 : 0;
		BIT Encoder_Z_Learning ZZZZZZZZZZAxisData50 : 1;
		BIT HomeIn ZZZZZZZZZZAxisData50 : 2;
		BIT HomeFault ZZZZZZZZZZAxisData50 : 3;
		BIT HomeArmed ZZZZZZZZZZAxisData50 : 4;
		BIT HomeLatched ZZZZZZZZZZAxisData50 : 5;
		BIT RegistrationIn ZZZZZZZZZZAxisData50 : 6;
		BIT Registration0_Armed ZZZZZZZZZZAxisData50 : 7;
		SINT ZZZZZZZZZZAxisData59 (Hidden := 1);
		BIT Registration0_Latched ZZZZZZZZZZAxisData59 : 0;
		BIT Registration1_Armed ZZZZZZZZZZAxisData59 : 1;
		BIT Registration1_Latched ZZZZZZZZZZAxisData59 : 2;
		BIT CommandMove ZZZZZZZZZZAxisData59 : 3;
		BIT CommandJog ZZZZZZZZZZAxisData59 : 4;
		BIT CommandStop ZZZZZZZZZZAxisData59 : 5;
		BIT CommandHome ZZZZZZZZZZAxisData59 : 6;
		BIT CommandZero ZZZZZZZZZZAxisData59 : 7;
		SINT ZZZZZZZZZZAxisData68 (Hidden := 1);
		BIT CommandMoveRelative ZZZZZZZZZZAxisData68 : 0;
		BIT CommandClearZero ZZZZZZZZZZAxisData68 : 1;
		BIT z07 ZZZZZZZZZZAxisData68 : 2;
		BIT z08 ZZZZZZZZZZAxisData68 : 3;
		BIT z09 ZZZZZZZZZZAxisData68 : 4;
		BIT z10 ZZZZZZZZZZAxisData68 : 5;
		BIT z11 ZZZZZZZZZZAxisData68 : 6;
		BIT z12 ZZZZZZZZZZAxisData68 : 7;
		SINT ZZZZZZZZZZAxisData77 (Hidden := 1);
		BIT z13 ZZZZZZZZZZAxisData77 : 0;
		BIT z14 ZZZZZZZZZZAxisData77 : 1;
		BIT z15 ZZZZZZZZZZAxisData77 : 2;
		BIT z16 ZZZZZZZZZZAxisData77 : 3;
		BIT z17 ZZZZZZZZZZAxisData77 : 4;
		BIT z18 ZZZZZZZZZZAxisData77 : 5;
		BIT z19 ZZZZZZZZZZAxisData77 : 6;
		BIT z20 ZZZZZZZZZZAxisData77 : 7;
		SINT ZZZZZZZZZZAxisData86 (Hidden := 1);
		BIT z21 ZZZZZZZZZZAxisData86 : 0;
		BIT z22 ZZZZZZZZZZAxisData86 : 1;
		BIT z23 ZZZZZZZZZZAxisData86 : 2;
		BIT z24 ZZZZZZZZZZAxisData86 : 3;
		BIT z25 ZZZZZZZZZZAxisData86 : 4;
		BIT z26 ZZZZZZZZZZAxisData86 : 5;
		BIT z27 ZZZZZZZZZZAxisData86 : 6;
		BIT z28 ZZZZZZZZZZAxisData86 : 7;
		SINT ZZZZZZZZZZAxisData95 (Hidden := 1);
		BIT z29 ZZZZZZZZZZAxisData95 : 0;
		BIT z30 ZZZZZZZZZZAxisData95 : 1;
		BIT z31 ZZZZZZZZZZAxisData95 : 2;
		REAL PositionDisplay;
		SINT ZZZZZZZZZZAxisData100 (Hidden := 1);
		BIT MoveComplete ZZZZZZZZZZAxisData100 : 0;
		BIT FollowingError ZZZZZZZZZZAxisData100 : 1;
		BIT ServoFault ZZZZZZZZZZAxisData100 : 2;
		BIT CommandAny ZZZZZZZZZZAxisData100 : 3;
	END_DATATYPE

	DATATYPE Pass (FamilyType := NoFamily)
		SINT ZZZZZZZZZZPass0 (Hidden := 1);
		BIT WetPass ZZZZZZZZZZPass0 : 0;
		BIT Measure ZZZZZZZZZZPass0 : 1;
		REAL FeedRate;
		REAL Depth;
		REAL RemainDepth;
		REAL EstimatedDiameter;
		REAL MeasuredDiameter;
		REAL FeedRateActual;
	END_DATATYPE

	MODULE Local (Parent := "Local",
	              ParentModPortId := 1,
	              CatalogNumber := "1769-L18ER-BB1B",
	              Vendor := 1,
	              ProductType := 14,
	              ProductCode := 154,
	              Major := 37,
	              Minor := 11,
	              ChassisSize := 6,
	              Slot := 0,
	              Mode := 2#0000_0000_0000_0001,
	              CompatibleModule := 0,
	              KeyMask := 2#0000_0000_0001_1111)
	END_MODULE

	MODULE Discrete_IO (Parent := "Local",
	                    ParentModPortId := 1,
	                    CatalogNumber := "Embedded",
	                    Vendor := 1,
	                    ProductType := 7,
	                    ProductCode := 1140,
	                    Major := 37,
	                    Minor := 11,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 1,
	                    Mode := 2#0000_0000_0000_0001,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111,
	                    DataExchangeId := {CF7C4065-E2A1-427D-BCF9-D7C207528A94})
			ExtendedProp := [[[___<public><ConfigID>100</ConfigID><CatNum>Embedded</CatNum></public>___]]]
			ConfigData  := [84,113,1,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000
		,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,0,0,0,0,0,0];
			CONNECTION Data (Rate := 20000,
			                 EventID := 0,
			                 Unicast := No)
					InputData  := [0,1];
					OutputData  := [511];
			END_CONNECTION

	END_MODULE

	MODULE Analog0_1 (Parent := "Local",
	                  ParentModPortId := 1,
	                  CatalogNumber := "1734-IE2V/C",
	                  Vendor := 1,
	                  ProductType := 115,
	                  ProductCode := 55,
	                  Major := 3,
	                  Minor := 5,
	                  PortLabel := "RxBACKPLANE",
	                  Slot := 2,
	                  CommMethod := 536870913,
	                  ConfigMethod := 8388609,
	                  Mode := 2#0000_0000_0000_0000,
	                  CompatibleModule := 1,
	                  KeyMask := 2#0000_0000_0001_1111,
	                  DataExchangeId := {2C27A8FF-B2DF-4E28-994D-E539E896B1BD})
			ExtendedProp := [[[___<public><ConfigID>102</ConfigID><CatNum>1734-IE2V</CatNum></public>___]]]
			ConfigData  := [46,123,1,0,10000,0,500,9500,200,9800,2,0,0,0,0,10000,0,500,9500,200,9800,2,0,0,2,100];
			CONNECTION InputData (Rate := 80000,
			                      EventID := 0,
			                      Unicast := No)
					InputData  := [0,5070,5071,0,0];
			END_CONNECTION

	END_MODULE

	MODULE Analog2_3 (Parent := "Local",
	                  ParentModPortId := 1,
	                  CatalogNumber := "1734-IE2V/C",
	                  Vendor := 1,
	                  ProductType := 115,
	                  ProductCode := 55,
	                  Major := 3,
	                  Minor := 4,
	                  PortLabel := "RxBACKPLANE",
	                  Slot := 3,
	                  CommMethod := 536870913,
	                  ConfigMethod := 8388609,
	                  Mode := 2#0000_0000_0000_0000,
	                  CompatibleModule := 1,
	                  KeyMask := 2#0000_0000_0001_1111,
	                  DataExchangeId := {9F26FB98-27F3-4567-8DB5-91F497A6F565})
			ExtendedProp := [[[___<public><ConfigID>102</ConfigID><CatNum>1734-IE2V</CatNum></public>___]]]
			ConfigData  := [46,123,1,0,10000,0,500,9500,200,9800,2,0,0,0,0,10000,0,500,9500,200,9800,2,0,0,2,100];
			CONNECTION InputData (Rate := 80000,
			                      EventID := 0,
			                      Unicast := No)
					InputData  := [0,5071,5071,0,0];
			END_CONNECTION

	END_MODULE

	MODULE Analog4_5 (Parent := "Local",
	                  ParentModPortId := 1,
	                  CatalogNumber := "1734-IE2V/C",
	                  Vendor := 1,
	                  ProductType := 115,
	                  ProductCode := 55,
	                  Major := 3,
	                  Minor := 1,
	                  PortLabel := "RxBACKPLANE",
	                  Slot := 4,
	                  CommMethod := 536870913,
	                  ConfigMethod := 8388609,
	                  Mode := 2#0000_0000_0000_0000,
	                  CompatibleModule := 1,
	                  KeyMask := 2#0000_0000_0001_1111,
	                  DataExchangeId := {E1E9289A-316B-4060-B299-2F043344D2A0})
			ExtendedProp := [[[___<public><ConfigID>102</ConfigID><CatNum>1734-IE2V</CatNum></public>___]]]
			ConfigData  := [46,123,1,0,10000,0,500,9500,200,9800,2,0,0,0,0,10000,0,500,9500,200,9800,2,0,0,2,100];
			CONNECTION InputData (Rate := 80000,
			                      EventID := 0,
			                      Unicast := No)
					InputData  := [0,5070,5071,0,0];
			END_CONNECTION

	END_MODULE

	MODULE SpindleSpeed (Parent := "Local",
	                     ParentModPortId := 1,
	                     CatalogNumber := "1734-OE2V/C",
	                     Vendor := 1,
	                     ProductType := 115,
	                     ProductCode := 56,
	                     Major := 3,
	                     Minor := 5,
	                     PortLabel := "RxBACKPLANE",
	                     Slot := 5,
	                     CommMethod := 536870913,
	                     ConfigMethod := 8388609,
	                     Mode := 2#0000_0000_0000_0000,
	                     CompatibleModule := 1,
	                     KeyMask := 2#0000_0000_0001_1111,
	                     DataExchangeId := {1163C1D6-52A3-40D4-B44A-EE8058645F4F})
			ExtendedProp := [[[___<public><ConfigID>402</ConfigID><CatNum>1734-OE2V</CatNum></public>___]]]
			ConfigData  := [44,123,1,0,0,0,10000,-32768,32767,1,1,1,0,0,0,0,0,0,10000,-32768,32767,1,1,1,0,0,0];
			CONNECTION OutputData (Rate := 50000,
			                       EventID := 0,
			                       Unicast := No)
					InputData  := [0,0,0];
					OutputData  := [0,0];
			END_CONNECTION

	END_MODULE

	MODULE Remote110V (Parent := "Local",
	                   ParentModPortId := 2,
	                   CatalogNumber := "1734-AENT/B",
	                   Vendor := 1,
	                   ProductType := 12,
	                   ProductCode := 108,
	                   Major := 5,
	                   Minor := 13,
	                   PortLabel := "ENet",
	                   ChassisSize := 9,
	                   Slot := 0,
	                   NodeAddress := "192.168.3.11",
	                   CommMethod := 805306369,
	                   Mode := 2#0000_0000_0000_0000,
	                   CompatibleModule := 1,
	                   KeyMask := 2#0000_0000_0001_1111,
	                   TrackingGroups := 16#0000_0002,
	                   DataExchangeId := {22278128-2E9C-4FBB-A903-CFC9BA45CEBE})
			ExtendedProp := [[[___<public><ConfigID>262145</ConfigID><CatNum>1734-AENT</CatNum></public>___]]]
			CONNECTION Output (Rate := 20000,
			                   EventID := 0,
			                   Unicast := Yes)
					InputData  := [-63,-1,[0,15,15,15,15,3,0,0,0]];
					OutputData  := [-63,-1,[0,0,0,0,0,0,0,0,0]];
			END_CONNECTION

	END_MODULE

	MODULE InputAC0_4 (Parent := "Remote110V",
	                   ParentModPortId := 1,
	                   CatalogNumber := "1734-IA4/C",
	                   Vendor := 1,
	                   ProductType := 7,
	                   ProductCode := 288,
	                   Major := 3,
	                   Minor := 22,
	                   PortLabel := "RxBACKPLANE",
	                   Slot := 1,
	                   CommMethod := 1073741824,
	                   Mode := 2#0000_0000_0000_0000,
	                   CompatibleModule := 1,
	                   KeyMask := 2#0000_0000_0001_1111,
	                   DataExchangeId := {51127A61-6B4C-448D-91E0-9DD5A2EF02B2})
			ExtendedProp := [[[___<public><ConfigID>262146</ConfigID><CatNum>1734-IA4</CatNum></public>___]]]
			ConfigData  := [24,103,1,1000,1000,1000,1000,1000,1000,1000,1000];
			InputAliasComments (RADIX := Binary,
			            DataExchangeId := {789DF36B-2F8A-450B-88CF-EF9C702010E3});
	END_MODULE

	MODULE InputAC5_8 (Parent := "Remote110V",
	                   ParentModPortId := 1,
	                   CatalogNumber := "1734-IA4/C",
	                   Vendor := 1,
	                   ProductType := 7,
	                   ProductCode := 288,
	                   Major := 3,
	                   Minor := 22,
	                   PortLabel := "RxBACKPLANE",
	                   Slot := 2,
	                   CommMethod := 1073741824,
	                   Mode := 2#0000_0000_0000_0000,
	                   CompatibleModule := 1,
	                   KeyMask := 2#0000_0000_0001_1111,
	                   DataExchangeId := {0CC5DB87-71B3-406E-A6A9-0735CFC95747})
			ExtendedProp := [[[___<public><ConfigID>262146</ConfigID><CatNum>1734-IA4</CatNum></public>___]]]
			ConfigData  := [24,103,1,1000,1000,1000,1000,1000,1000,1000,1000];
			InputAliasComments (RADIX := Binary,
			            DataExchangeId := {95A6EBFB-095A-4027-AA32-2563344D54E3});
	END_MODULE

	MODULE InputAC9_12 (Parent := "Remote110V",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1734-IA4/C",
	                    Vendor := 1,
	                    ProductType := 7,
	                    ProductCode := 288,
	                    Major := 3,
	                    Minor := 22,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 3,
	                    CommMethod := 1073741824,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111,
	                    DataExchangeId := {00835402-8DEF-4074-AB4B-93E9193D927A})
			ExtendedProp := [[[___<public><ConfigID>262146</ConfigID><CatNum>1734-IA4</CatNum></public>___]]]
			ConfigData  := [24,103,1,1000,1000,1000,1000,1000,1000,1000,1000];
			InputAliasComments (RADIX := Binary,
			            DataExchangeId := {78763B0A-D2B9-4EF8-82B7-1723EB7721E7});
	END_MODULE

	MODULE InputAC13_16 (Parent := "Remote110V",
	                     ParentModPortId := 1,
	                     CatalogNumber := "1734-IA4/C",
	                     Vendor := 1,
	                     ProductType := 7,
	                     ProductCode := 288,
	                     Major := 3,
	                     Minor := 22,
	                     PortLabel := "RxBACKPLANE",
	                     Slot := 4,
	                     CommMethod := 1073741824,
	                     Mode := 2#0000_0000_0000_0000,
	                     CompatibleModule := 1,
	                     KeyMask := 2#0000_0000_0001_1111,
	                     DataExchangeId := {BABA9F7A-E5A6-4C93-B7A7-2D449A413EBE})
			ExtendedProp := [[[___<public><ConfigID>262146</ConfigID><CatNum>1734-IA4</CatNum></public>___]]]
			ConfigData  := [24,103,1,1000,1000,1000,1000,1000,1000,1000,1000];
			InputAliasComments (RADIX := Binary,
			            DataExchangeId := {3664B028-BF34-42CC-AEAB-87B8E890A06D});
	END_MODULE

	MODULE InputAC17_20 (Parent := "Remote110V",
	                     ParentModPortId := 1,
	                     CatalogNumber := "1734-IA4/C",
	                     Vendor := 1,
	                     ProductType := 7,
	                     ProductCode := 288,
	                     Major := 3,
	                     Minor := 22,
	                     PortLabel := "RxBACKPLANE",
	                     Slot := 5,
	                     CommMethod := 1073741824,
	                     Mode := 2#0000_0000_0000_0000,
	                     CompatibleModule := 1,
	                     KeyMask := 2#0000_0000_0001_1111,
	                     DataExchangeId := {2A804983-25DE-4DFF-AD7A-33C21C2F1435})
			ExtendedProp := [[[___<public><ConfigID>262146</ConfigID><CatNum>1734-IA4</CatNum></public>___]]]
			ConfigData  := [24,103,1,1000,1000,1000,1000,1000,1000,1000,1000];
			InputAliasComments (RADIX := Binary,
			            DataExchangeId := {96CE4CC3-DB65-41B4-BDDB-BD3D56F54307});
	END_MODULE

	MODULE Light_Outputs (Parent := "Remote110V",
	                      ParentModPortId := 1,
	                      CatalogNumber := "1734-OA4/C",
	                      Vendor := 1,
	                      ProductType := 7,
	                      ProductCode := 290,
	                      Major := 3,
	                      Minor := 22,
	                      PortLabel := "RxBACKPLANE",
	                      Slot := 6,
	                      CommMethod := 536870913,
	                      Mode := 2#0000_0000_0000_0000,
	                      CompatibleModule := 1,
	                      KeyMask := 2#0000_0000_0001_1111,
	                      DataExchangeId := {40159BF4-C436-45D1-AD4C-64B43C522A6D})
			ExtendedProp := [[[___<public><ConfigID>500</ConfigID><CatNum>1734-OA4</CatNum></public>___]]]
			ConfigData  := [12,103,1,0,0,0,0];
			CONNECTION OutputData (Rate := 20000,
			                       EventID := 0,
			                       Unicast := No)
					InputData  := [0];
					OutputData  := [3];
			END_CONNECTION

	END_MODULE

	MODULE Swarf_Outputs (Parent := "Remote110V",
	                      ParentModPortId := 1,
	                      CatalogNumber := "1734-OA4/C",
	                      Vendor := 1,
	                      ProductType := 7,
	                      ProductCode := 290,
	                      Major := 3,
	                      Minor := 22,
	                      PortLabel := "RxBACKPLANE",
	                      Slot := 7,
	                      CommMethod := 536870913,
	                      Mode := 2#0000_0000_0000_0000,
	                      CompatibleModule := 1,
	                      KeyMask := 2#0000_0000_0001_1111,
	                      DataExchangeId := {1EDAE284-B275-4519-9033-BC240DE8D7E8})
			ExtendedProp := [[[___<public><ConfigID>500</ConfigID><CatNum>1734-OA4</CatNum></public>___]]]
			ConfigData  := [12,103,1,0,0,0,0];
			CONNECTION OutputData (Rate := 20000,
			                       EventID := 0,
			                       Unicast := No)
					InputData  := [0];
					OutputData  := [3];
			END_CONNECTION

	END_MODULE

	MODULE HPU_Outputs (Parent := "Remote110V",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1734-OA4/C",
	                    Vendor := 1,
	                    ProductType := 7,
	                    ProductCode := 290,
	                    Major := 3,
	                    Minor := 22,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 8,
	                    CommMethod := 536870913,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111,
	                    DataExchangeId := {F37C6314-8739-4C24-8AF1-7BE5610A7234})
			ExtendedProp := [[[___<public><ConfigID>500</ConfigID><CatNum>1734-OA4</CatNum></public>___]]]
			ConfigData  := [12,103,1,0,0,0,0];
			CONNECTION OutputData (Rate := 20000,
			                       EventID := 0,
			                       Unicast := No)
					InputData  := [0];
					OutputData  := [12];
			END_CONNECTION

	END_MODULE

	MODULE RemoteHPU (Parent := "Local",
	                  ParentModPortId := 2,
	                  CatalogNumber := "1734-AENTR/C",
	                  Vendor := 1,
	                  ProductType := 12,
	                  ProductCode := 196,
	                  Major := 7,
	                  Minor := 13,
	                  PortLabel := "ENet",
	                  ChassisSize := 6,
	                  Slot := 0,
	                  NodeAddress := "192.168.3.12",
	                  CommMethod := 805306369,
	                  Mode := 2#0000_0000_0000_0000,
	                  CompatibleModule := 1,
	                  KeyMask := 2#0000_0000_0001_1111,
	                  DataExchangeId := {4B119CA4-9A7E-4214-91AD-D48FD9F09E4A})
			ExtendedProp := [[[___<public><ConfigID>262145</ConfigID><CatNum>1734-AENTR</CatNum></public>___]]]
			CONNECTION Output (Rate := 20000,
			                   EventID := 0,
			                   Unicast := Yes)
					InputData  := [-61,-1,[0,0,-1,15,8,0]];
					OutputData  := [-61,-1,[0,0,0,0,0,0]];
			END_CONNECTION

	END_MODULE

	MODULE AnalogIn5_6 (Parent := "RemoteHPU",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1734-IE2V/C",
	                    Vendor := 1,
	                    ProductType := 115,
	                    ProductCode := 55,
	                    Major := 3,
	                    Minor := 4,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 1,
	                    CommMethod := 536870913,
	                    ConfigMethod := 8388609,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111,
	                    DataExchangeId := {E4CD1004-C626-4742-8423-90797921D565})
			ExtendedProp := [[[___<public><ConfigID>102</ConfigID><CatNum>1734-IE2V</CatNum></public>___]]]
			ConfigData  := [46,123,1,0,10000,0,500,9500,200,9800,2,0,0,0,0,10000,0,500,9500,200,9800,2,0,0,2,100];
			CONNECTION InputData (Rate := 80000,
			                      EventID := 0,
			                      Unicast := Yes)
					InputData  := [0,5046,5046,0,0];
			END_CONNECTION

	END_MODULE

	MODULE InputDC0_8 (Parent := "RemoteHPU",
	                   ParentModPortId := 1,
	                   CatalogNumber := "1734-IB8/C",
	                   Vendor := 1,
	                   ProductType := 7,
	                   ProductCode := 216,
	                   Major := 3,
	                   Minor := 22,
	                   PortLabel := "RxBACKPLANE",
	                   Slot := 2,
	                   CommMethod := 1073741824,
	                   Mode := 2#0000_0000_0000_0000,
	                   CompatibleModule := 1,
	                   KeyMask := 2#0000_0000_0001_1111,
	                   DataExchangeId := {AA5323F8-D4E5-4570-91D8-7B83125B5CCC})
			ExtendedProp := [[[___<public><ConfigID>262147</ConfigID><CatNum>1734-IB8</CatNum></public>___]]]
			ConfigData  := [40,103,1,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000];
			InputAliasComments (RADIX := Binary,
			            DataExchangeId := {38A5D103-83BD-4C64-99D5-FC03F8B82C23});
	END_MODULE

	MODULE InputDC9_15 (Parent := "RemoteHPU",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1734-IB8/C",
	                    Vendor := 1,
	                    ProductType := 7,
	                    ProductCode := 216,
	                    Major := 3,
	                    Minor := 22,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 3,
	                    CommMethod := 1073741824,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111,
	                    DataExchangeId := {EA9B29C5-9551-43F7-817E-55B5B4887432})
			ExtendedProp := [[[___<public><ConfigID>262147</ConfigID><CatNum>1734-IB8</CatNum></public>___]]]
			ConfigData  := [40,103,1,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000];
			InputAliasComments (RADIX := Binary,
			            DataExchangeId := {BE06067D-789E-48A3-AA80-A6C931062639});
	END_MODULE

	MODULE OutputDC0_3 (Parent := "RemoteHPU",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1734-OB4E/C",
	                    Vendor := 1,
	                    ProductType := 7,
	                    ProductCode := 134,
	                    Major := 3,
	                    Minor := 2,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 4,
	                    CommMethod := 1073741824,
	                    ConfigMethod := 8388611,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111,
	                    DataExchangeId := {8F99B989-18A9-4430-99A5-BD8A62FE2AE8})
			ExtendedProp := [[[___<public><ConfigID>262156</ConfigID><CatNum>1734-OB4E</CatNum></public>___]]]
			ConfigData  := [16,123,1,0,0,0,0,15,0,0,0];
			InputAliasComments (RADIX := Binary,
			            DataExchangeId := {81983F69-E514-4BAC-9A9B-795FAEFE1734});
			OutputAliasComments (RADIX := Binary,
			            DataExchangeId := {4EE456A0-64B6-487D-ABF4-3F0C5113AAE6});
	END_MODULE

	MODULE OutputDC4_7 (Parent := "RemoteHPU",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1734-OB4E/C",
	                    Vendor := 1,
	                    ProductType := 7,
	                    ProductCode := 134,
	                    Major := 3,
	                    Minor := 2,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 5,
	                    CommMethod := 1073741824,
	                    ConfigMethod := 8388611,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111,
	                    DataExchangeId := {32FD6558-7441-4C63-9EE8-60F50D927A2F})
			ExtendedProp := [[[___<public><ConfigID>262156</ConfigID><CatNum>1734-OB4E</CatNum></public>___]]]
			ConfigData  := [16,123,1,0,0,0,0,15,0,0,0];
			InputAliasComments (RADIX := Binary,
			            DataExchangeId := {D6939142-04C0-4D56-A564-2FA9066436B4});
			OutputAliasComments (RADIX := Binary,
			            DataExchangeId := {DB11E4A4-AA75-4F14-AA77-A276678CEB35});
	END_MODULE

	MODULE RMC (Parent := "Local",
	            ParentModPortId := 2,
	            CatalogNumber := "R200-CPU20L",
	            Vendor := 590,
	            ProductType := 43,
	            ProductCode := 5,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "ENet",
	            NodeAddress := "192.168.3.13",
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyEnabled := 0,
	            DataExchangeId := {93105D03-E833-4416-87C2-29B876ABE3D4})
			ExtendedProp := [[[___<public><PL>01<Version Name=$Q1.1$Q/><Connection Name=$Q_200424042C022C01$Q Format=$Q4$Q/><Connection Name=$Q_200424042C062C05$Q Format=$Q2$Q/></PL><CatNum>R200-CPU20L</CatNum><DataTypeFormats><DataTypeFormat InstanceApplicationPath=$Q20 04 2C 01 30 03$Q Format=$Q1$Q Type=$QInput$Q/><DataTypeFormat InstanceApplicationPath=$Q20 04 2C 02 30 03$Q Format=$Q1$Q Type=$QOutput$Q/><DataTypeFormat InstanceApplicationPath=$Q20 04 2C 05 30 03$Q Format=$Q1$Q Type=$QInput$Q/><DataTypeFormat InstanceApplicationPath=$Q20 04 2C 06 30 03$Q Format=$Q1$Q Type=$QOutput$Q/></DataTypeFormats></public>___]]]
			CONNECTION _200424042C022C01 (Rate := 20000,
			                              InputSize := 40,
			                              OutputSize := 24,
			                              EventID := 0,
			                              Priority := Scheduled,
			                              InputConnectionType := Unicast,
			                              InputProductionTrigger := Cyclic,
			                              ConnectionPath := "20 04 24 04 2c 02 2c 01",
			                              InputTagSuffix := "I1",
			                              OutputTagSuffix := "O1")
					InputData  := [0,[3.78560028e+001,1.30000007e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,-2.98149255e-003
		,0.00000000e+000,0.00000000e+000,0.00000000e+000]];
					OutputData  := [[0.00000000e+000,1.29999995e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
		]];
			END_CONNECTION

			CONNECTION _200424042C062C05 (Rate := 20000,
			                              InputSize := 28,
			                              OutputSize := 16,
			                              EventID := 0,
			                              Priority := Scheduled,
			                              InputConnectionType := Unicast,
			                              InputProductionTrigger := Cyclic,
			                              ConnectionPath := "20 04 24 04 2c 06 2c 05",
			                              InputTagSuffix := "I2",
			                              OutputTagSuffix := "O2")
					InputData  := [0,[67117632,67117633,67117633,0,0,17537]];
					OutputData  := [[1116418816,1116418816,1116418816,1116418864]];
			END_CONNECTION

	END_MODULE

	TAG
		Auto : BOOL (RADIX := Decimal) := 0;
		AutoCutCancel : BOOL (RADIX := Decimal) := 0;
		AutoCutCancelFall : BOOL (RADIX := Decimal) := 0;
		AutoCutCancelOSF : BOOL (RADIX := Decimal) := 0;
		AutoCutReq : BOOL (RADIX := Decimal) := 0;
		AutoCutStartONS : BOOL (RADIX := Decimal) := 0;
		AutoCutStateChange : BOOL (RADIX := Decimal) := 0;
		AutoSpinCCW : BOOL (RADIX := Decimal) := 0;
		AutoSpinCW : BOOL (RADIX := Decimal) := 0;
		Axis : AxisData[3]  := [[3.78560028e+001,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,112,34,0
				,4,0,0,0,0,0,0,0,0.00000000e+000,0],[1.30000007e+000,0.00000000e+000,0.00000000e+000,1.29999995e+000
				,0.00000000e+000,113,34,0,4,0,0,0,0,0,0,0,0.00000000e+000,1],[-5.00000000e-004,7.29691144e-003,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,113,34,0,4,-128,68,0,0,0,0,0,0.00000000e+000,1]];
		AxisX_Gauge OF Axis[0] ;
		AxisY_Traverse OF Axis[1] ;
		AxisZ_RaiseLower OF Axis[2] ;
		BladeChange10 : BOOL (RADIX := Decimal) := 0;
		BladeChange10ONS : BOOL (RADIX := Decimal) := 0;
		BladeChange20 : BOOL (RADIX := Decimal) := 0;
		BladeChange20ONS : BOOL (RADIX := Decimal) := 1;
		BladeChangeDone : BOOL (RADIX := Decimal) := 0;
		BladeChangeStartONS : BOOL (RADIX := Decimal) := 0;
		BladeChangeStateChange : BOOL (RADIX := Decimal) := 0;
		BladeMeasure10ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure10StopAll : BOOL (RADIX := Decimal) := 0;
		BladeMeasure15ClearZero : BOOL (RADIX := Decimal) := 0;
		BladeMeasure20ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure20Retract : BOOL (RADIX := Decimal) := 0;
		BladeMeasure30ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure30Traverse : BOOL (RADIX := Decimal) := 0;
		BladeMeasure40Lower : BOOL (RADIX := Decimal) := 0;
		BladeMeasure40ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure50ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure50Stop : BOOL (RADIX := Decimal) := 0;
		BladeMeasure55ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure55Raise : BOOL (RADIX := Decimal) := 0;
		BladeMeasure60ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure60Stop : BOOL (RADIX := Decimal) := 0;
		BladeMeasure65Measure : BOOL (RADIX := Decimal) := 0;
		BladeMeasure65ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure70Calc : BOOL (RADIX := Decimal) := 0;
		BladeMeasure70ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure75ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure75PartRef : BOOL (RADIX := Decimal) := 0;
		BladeMeasure80ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure80Return : BOOL (RADIX := Decimal) := 0;
		BladeMeasureAbort : BOOL (RADIX := Decimal) := 0;
		BladeMeasureAbortONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasureStartONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasureStateChange : BOOL (RADIX := Decimal) := 0;
		BladeRadius : REAL (RADIX := Float) := 0.00000000e+000;
		BladeRadiusKnown : BOOL (RADIX := Decimal) := 0;
		BuildCount : DINT (RADIX := Decimal) := 0;
		BuildDone : BOOL (RADIX := Decimal) := 0;
		BumpDistance : REAL (RADIX := Float) := 0.00000000e+000;
		BumpDistanceDry : REAL (RADIX := Float) := 0.00000000e+000;
		BumpDistanceWet : REAL (RADIX := Float) := 0.00000000e+000;
		ClampPressure : REAL (RADIX := Float) := 3.78450012e+002;
		CutEndPosition : REAL (RADIX := Float) := 0.00000000e+000;
		CutForward : BOOL (RADIX := Decimal) := 0;
		CutOnReturn : BOOL (RADIX := Decimal) := 0;
		CutStartPosition : REAL (RADIX := Float) := 0.00000000e+000;
		DryCutDepth : REAL (RADIX := Float) := 2.99999993e-002;
		DryCutSpeed : REAL (RADIX := Float) := 2.00000000e+002;
		DryPasses : DINT (RADIX := Decimal) := 0;
		Fault : BOOL (RADIX := Decimal) := 0;
		FaultOSR : BOOL (RADIX := Decimal) := 0;
		FaultRise : BOOL (RADIX := Decimal) := 0;
		GaugeGripping : BOOL (RADIX := Decimal) := 0;
		GaugeJogIn : BOOL (RADIX := Decimal) := 0;
		GaugeJogOut : BOOL (RADIX := Decimal) := 0;
		GaugePotScale : REAL (RADIX := Float) := 2.44200259e-004;
		GaugeVelocityHome : REAL (RADIX := Float) := 1.66700006e+000;
		GaugeVelocityJog : REAL (RADIX := Float) := 1.03190832e+001;
		GaugeVelocityJogMax : REAL (RADIX := Float) := 8.33300018e+000;
		GaugeVelocityMax : REAL (RADIX := Float) := 1.66669998e+001;
		hmiFaultMessageNumber : DINT (RADIX := Decimal) := 30;
		HorsepowerActual : REAL (RADIX := Float) := 5.97247295e-002;
		HorsepowerScale : REAL (RADIX := Float) := 6.63680136e-002;
		HorsepowerTarget : REAL (RADIX := Float) := 0.00000000e+000;
		HPUReadyToRun : BOOL (RADIX := Decimal) := 1;
		HydReady : BOOL (RADIX := Decimal) := 1;
		HydRun : BOOL (RADIX := Decimal) := 1;
		HydRunning : BOOL (RADIX := Decimal) := 1;
		HydStart : BOOL (RADIX := Decimal) := 0;
		HydStop : BOOL (RADIX := Decimal) := 0;
		inAnClampPressure OF RemoteHPU:1:I.Ch0Data (RADIX := Decimal,
		            DataExchangeId := {003C239D-FB89-4659-947A-C4F082A6B254});
		InAnPotGauge OF Local:3:I.Ch1Data (RADIX := Decimal,
		            DataExchangeId := {6483E1D4-B5F7-4793-9AC9-A8D6B481AC99});
		inAnPotRaiseLower OF Local:2:I.Ch1Data (RADIX := Decimal,
		            DataExchangeId := {D2C70B29-7D70-4834-BDCD-499B5E8B2B3B});
		inAnPotTraverse OF Local:3:I.Ch0Data (RADIX := Decimal,
		            DataExchangeId := {0ED68D47-1F63-40A5-A1CA-B9DEA14FA815});
		inAnServoPressure OF RemoteHPU:1:I.Ch1Data (RADIX := Decimal,
		            DataExchangeId := {B453AD23-D99C-4863-9341-037902C2D0F9});
		inAnSpindleSideA OF Local:4:I.Ch0Data (RADIX := Decimal,
		            DataExchangeId := {940C8831-7972-4A50-92AA-F2C60168B413});
		inAnSpindlesideB OF Local:4:I.Ch1Data (RADIX := Decimal,
		            DataExchangeId := {F1646682-5521-4D4D-964A-7D9F351AAD51});
		inAnSpindleSpeed OF Local:2:I.Ch0Data (RADIX := Decimal,
		            DataExchangeId := {8E33B023-33CA-48B6-A82E-C4F1E161756C});
		inEstopButton OF Local:1:I.Data.1 (RADIX := Decimal,
		            DataExchangeId := {2D19E0E7-862F-4268-9543-78D286E39D07});
		inFl01OilLevelWarning OF RemoteHPU:3:I.0 (RADIX := Decimal,
		            DataExchangeId := {D119FB35-0A9F-4FC6-8D38-F3BBEE64CD23});
		inFl02OilLevelShutdownAlarm OF RemoteHPU:3:I.2 (RADIX := Decimal,
		            DataExchangeId := {8AED894B-25A5-41C0-BDF7-88F9A90A57DF});
		inGaugeHomeSwitch OF Remote110V:2:I.2 (RADIX := Decimal,
		            DataExchangeId := {21DAA5B7-ABCD-449D-BBB9-C195B07977CA});
		inLs01OvertravelMnsGauge OF Remote110V:3:I.1 (RADIX := Decimal,
		            DataExchangeId := {F7DD7AA5-7DD2-4667-8150-A3E338C1AF93});
		inLs02OvertravelPlsGauge OF Remote110V:3:I.2 (RADIX := Decimal,
		            DataExchangeId := {C2FDDFCE-9558-4FC3-87AF-DDBFE5FA7120});
		inLs03OvertravelMnsTraverse OF Remote110V:3:I.3 (RADIX := Decimal,
		            DataExchangeId := {D42004F4-D3F1-414E-963A-29259A78A9AD});
		inLs04OvertravelPlsTraverse OF Remote110V:4:I.0 (RADIX := Decimal,
		            DataExchangeId := {792A7A73-86AC-4534-B54F-DE2C17772158});
		inLs05OvertravelMnsRaiseLower OF Remote110V:4:I.1 (RADIX := Decimal,
		            DataExchangeId := {B6ABB0CE-2446-4165-B6DC-2D476A37A79F});
		inLs06OvertravelPlsRaiseLower OF Remote110V:4:I.2 (RADIX := Decimal,
		            DataExchangeId := {0484F243-3B18-402F-A136-3762981589E1});
		inLs07BladeGuard OF Remote110V:4:I.3 (RADIX := Decimal,
		            DataExchangeId := {893FE70C-E1CE-416A-B258-7CB7DB5D6485});
		inMS1HydraulicPump OF Remote110V:1:I.0 (RADIX := Decimal,
		            DataExchangeId := {88E1C03A-0361-449D-8C04-A18147C71F66});
		inMS2HydraulicLoopPump OF Remote110V:1:I.1 (RADIX := Decimal,
		            DataExchangeId := {D0C810D9-0BC5-407C-A969-EDAB3BB60514});
		inMS3HydCoolingFan OF Remote110V:1:I.2 (RADIX := Decimal,
		            DataExchangeId := {E3BC8EC6-F25A-4A79-B34D-D4F6F3B4B5C5});
		inMS4CoolantPump OF Remote110V:1:I.3 (RADIX := Decimal,
		            DataExchangeId := {86E2A350-F40D-476E-ABE9-702A14D99ACE});
		inMS5SwarfPump OF Remote110V:2:I.0 (RADIX := Decimal,
		            DataExchangeId := {9CD39DB4-863D-4E75-80C1-FDA77F606CE5});
		inMS6SwarfConveyor OF Remote110V:2:I.1 (RADIX := Decimal,
		            DataExchangeId := {4DDF13AB-5040-4D02-837C-446E84FE0600});
		inPe01BladeDetect OF Remote110V:5:I.0 (RADIX := Decimal,
		            DataExchangeId := {95F74AF0-99E1-4813-993D-EAD979CA2FDF});
		inPs01LoopFilterDirty OF RemoteHPU:2:I.5 (RADIX := Decimal,
		            DataExchangeId := {CFD7002E-253B-4E6F-B64B-0340319CED41});
		inPs02PressureFilterDirty OF RemoteHPU:2:I.6 (RADIX := Decimal,
		            DataExchangeId := {4D6DA4B0-7727-40A3-A6BE-EDB1EA84E601});
		inPs03MotorCaseDrain OF RemoteHPU:2:I.7 (RADIX := Decimal,
		            DataExchangeId := {8F6924E2-F441-4510-B763-1967247CB8DE});
		inPs04SwarfFilterDirty OF Remote110V:5:I.1 (RADIX := Decimal,
		            DataExchangeId := {2A7772B6-4E4F-4AB0-BB78-9C50F2D08BE9});
		inPx01Pump1Inlet OF RemoteHPU:2:I.0 (RADIX := Decimal,
		            DataExchangeId := {1883E068-E3EC-4E9E-A781-416F524A6211});
		inPx02Pump2Inlet OF RemoteHPU:2:I.1 (RADIX := Decimal,
		            DataExchangeId := {B16F5428-5144-426C-96CE-9660B1E67441});
		InPx03PumpAA4Inlet OF RemoteHPU:2:I.2 (RADIX := Decimal,
		            DataExchangeId := {7122D2A6-37B2-4F4E-B889-96EBC2BA52FC});
		inPx04LoopInlet OF RemoteHPU:2:I.3 (RADIX := Decimal,
		            DataExchangeId := {78E2A389-010A-4782-B58F-9B91C8B35177});
		inPx05DrainValve OF RemoteHPU:2:I.4 (RADIX := Decimal,
		            DataExchangeId := {8D82C4AF-945F-49B4-91FD-520427DFA1EA});
		inRaiseLowerHomeSwitch OF Remote110V:3:I.0 (RADIX := Decimal,
		            DataExchangeId := {8512D400-72CC-4AB0-9FE3-FCAF35F1BDB5});
		inSpare234 OF RemoteHPU:3:I.4 (RADIX := Decimal,
		            DataExchangeId := {058BAC4A-B391-4D87-933D-6CBA7311FD83});
		inSpare235 OF RemoteHPU:3:I.5 (RADIX := Decimal,
		            DataExchangeId := {4CAF891C-DF48-45BF-8E21-74A5A5315BF6});
		inSpare236 OF RemoteHPU:3:I.6 (RADIX := Decimal,
		            DataExchangeId := {2EA15C21-7292-48AB-881E-07D45E1D711A});
		inSpare237 OF RemoteHPU:3:I.7 (RADIX := Decimal,
		            DataExchangeId := {14A4A216-85B7-4FCA-8EA0-5273338596A2});
		inSR1SafetyRelay OF Local:1:I.Data.0 (RADIX := Decimal,
		            DataExchangeId := {366AB894-C128-431F-852B-63397D83BF32});
		inTraverseHomeSwitch OF Remote110V:2:I.3 (RADIX := Decimal,
		            DataExchangeId := {E597DD69-6596-4322-8EA5-1BCF7167F821});
		inTs01OilTempWarning OF RemoteHPU:3:I.1 (RADIX := Decimal,
		            DataExchangeId := {B6D1767F-39E7-44B6-9ABB-A618F4C4FD12});
		inTs02OilTempShutdownAlarm OF RemoteHPU:3:I.3 (RADIX := Decimal,
		            DataExchangeId := {75474803-0AE0-4D3F-917E-2EFDCC08AD1B});
		LastCutDepth : REAL (RADIX := Float) := 0.00000000e+000;
		LastCutSpeed : REAL (RADIX := Float) := 0.00000000e+000;
		MC_Reset OF RMC:O2.Data[3].0 (RADIX := Decimal,
		            DataExchangeId := {6C3631B2-0311-409B-B2AE-FC3773E3B5F5});
		OilWarm : BOOL (RADIX := Decimal) := 0;
		outAnSpindleMotor OF Local:5:O.Ch1Data (RADIX := Decimal,
		            DataExchangeId := {2845F938-5F59-4D05-8D91-5DADBDA4E89B});
		outAnSpindlePump OF Local:5:O.Ch0Data (RADIX := Decimal,
		            DataExchangeId := {207287F1-9CCB-4AF0-A890-574CFB0AAAE9});
		outCr01BrakeTraverse OF RemoteHPU:4:O.0 (RADIX := Decimal,
		            DataExchangeId := {954ACF84-7630-486C-B48A-07B4F1A0F9CC});
		outCr02BrakeGauge OF RemoteHPU:4:O.1 (RADIX := Decimal,
		            DataExchangeId := {9EBD6815-9069-456C-91B3-36D2D4E0879F});
		outCr03BrakeRaiseLower OF RemoteHPU:4:O.2 (RADIX := Decimal,
		            DataExchangeId := {0B4838BA-DDDB-4401-A9CF-17FA78FE5A9F});
		outCr04ClampAdvance OF RemoteHPU:5:O.0 (RADIX := Decimal,
		            DataExchangeId := {7CE4C5F9-6D0F-46AD-AF54-6791AC7E9FD9});
		outCr05ClampRetract OF RemoteHPU:5:O.1 (RADIX := Decimal,
		            DataExchangeId := {FEF8EE23-6EB6-4153-9D4E-8F57D1F5E072});
		outCr06GaugeGripperAdvance OF RemoteHPU:5:O.2 (RADIX := Decimal,
		            DataExchangeId := {93B80833-BC00-4B4D-8A95-171FE9DD01FF});
		outCr07GaugeGripperRetract OF RemoteHPU:5:O.3 (RADIX := Decimal,
		            DataExchangeId := {28F1C8AB-49A7-4B2B-A89C-7E913EC12602});
		outCrlLaserLight OF Remote110V:8:O.Data.0 (RADIX := Decimal,
		            DataExchangeId := {836B7F3A-8094-4C4D-8E07-A672876198C4});
		outGaugeHomeSwitch OF Local:1:O.Data.0 (RADIX := Decimal,
		            DataExchangeId := {746199DD-9FFE-439F-AD04-9C80D1755059});
		outGaugeOvertravelMinus OF Local:1:O.Data.3 (RADIX := Decimal,
		            DataExchangeId := {8A4F62B4-B16F-4431-AEE0-E4164D7EED10});
		outGaugeOvertravelPlus OF Local:1:O.Data.4 (RADIX := Decimal,
		            DataExchangeId := {7B312FF6-55E4-4D97-97C8-A66C208B396D});
		outLtaStackLtAmber OF Remote110V:8:O.Data.2 (RADIX := Decimal,
		            DataExchangeId := {4E3C8008-F145-49B5-8F7C-8AF5470AB7BD});
		outLtgStackLtGreen OF Remote110V:8:O.Data.1 (RADIX := Decimal,
		            DataExchangeId := {FDD8D23E-C156-4761-A7C4-FCB4A132E1A8});
		outLtrStackLtRed OF Remote110V:8:O.Data.3 (RADIX := Decimal,
		            DataExchangeId := {97A2B868-6787-45B7-8E4D-7D63E9DD586D});
		outMs1HydrulicPump OF Remote110V:6:O.Data.0 (RADIX := Decimal,
		            DataExchangeId := {389BB758-651E-40F7-BFE1-90C5E15A4D67});
		outMs2LoopPump OF Remote110V:6:O.Data.1 (RADIX := Decimal,
		            DataExchangeId := {BD01109A-743F-4423-8AD9-4A366DFF4942});
		outMs3HydraulicCoolFan OF Remote110V:6:O.Data.2 (RADIX := Decimal,
		            DataExchangeId := {AB7487F5-B5F5-4B4E-A6CE-693FDD616E39});
		outMs4Coolant OF Remote110V:6:O.Data.3 (RADIX := Decimal,
		            DataExchangeId := {2CE85D8F-6DC8-4377-B655-0EDF1C1F60D5});
		outMs5SwarfPump OF Remote110V:7:O.Data.0 (RADIX := Decimal,
		            DataExchangeId := {781EF96C-D772-4B87-978F-3C86A2DBB2FC});
		outMs6SwarfConveyor OF Remote110V:7:O.Data.1 (RADIX := Decimal,
		            DataExchangeId := {CA886397-7DC5-4490-BBC6-21FBE2CBDF5E});
		outRaiseLowerHomeSwitch OF Local:1:O.Data.2 (RADIX := Decimal,
		            DataExchangeId := {2F4A45AB-BA96-42DC-870E-DF388848E7C6});
		outRaiseLowerOvertravelMinus OF Local:1:O.Data.7 (RADIX := Decimal,
		            DataExchangeId := {29D322F5-F61C-4C16-9FDE-6688EAB68B41});
		outRaiseLowerOvertravelPlus OF Local:1:O.Data.8 (RADIX := Decimal,
		            DataExchangeId := {E9C7ED1E-3D5D-47B9-A061-E420DF2CEBD7});
		outSpare162 OF Remote110V:7:O.Data.2 (RADIX := Decimal,
		            DataExchangeId := {C4F4624A-9F0A-462E-97FF-6BEDFF4153F4});
		outSpare163 OF Remote110V:7:O.Data.3 (RADIX := Decimal,
		            DataExchangeId := {5BF2A00F-863E-47ED-A43A-99BAE3D78072});
		outSpare243 OF RemoteHPU:4:O.3 (RADIX := Decimal,
		            DataExchangeId := {66EF03AC-9884-43DA-8224-63043E054007});
		outTraverseHomeSwitch OF Local:1:O.Data.1 (RADIX := Decimal,
		            DataExchangeId := {D111B862-FD95-4FAA-B821-8991E393B62C});
		outTraverseOvertravelMinus OF Local:1:O.Data.5 (RADIX := Decimal,
		            DataExchangeId := {D451EDAB-AFED-423A-8BBE-F14E01F68C13});
		outTraverseOvertravelPlus OF Local:1:O.Data.6 (RADIX := Decimal,
		            DataExchangeId := {236EB3D7-8000-460C-B851-4D7C7696BE70});
		OutZero : BOOL (RADIX := Decimal) := 0;
		Pass : Pass[21]  := [[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				]];
		PastPart : REAL (RADIX := Float) := 6.00000000e+000;
		Pi : REAL (RADIX := Float,
		            Constant := Yes) := 3.14159274e+000;
		RaiseLowerJogLower : BOOL (RADIX := Decimal) := 0;
		RaiseLowerJogRaise : BOOL (RADIX := Decimal) := 0;
		RaiseLowerPotScale : REAL (RADIX := Float) := 2.44200259e-004;
		RaiseLowerVelocityHome : REAL (RADIX := Float) := 3.33000000e-001;
		RaiseLowerVelocityJog : REAL (RADIX := Float) := 6.19169772e-001;
		RaiseLowerVelocityJogMax : REAL (RADIX := Float) := 5.00000000e-001;
		RaiseLowerVelocityMax : REAL (RADIX := Float) := 1.00000000e+000;
		RemainDepth : REAL (RADIX := Float) := 0.00000000e+000;
		RpmTarget : REAL (RADIX := Float) := 0.00000000e+000;
		RpmTarget105Pct : REAL (RADIX := Float) := 8.75000000e+002;
		SafetyRelayAutoReset : BOOL (RADIX := Decimal) := 0;
		ServoPressure : REAL (RADIX := Float) := 1.00920000e+003;
		SFPM : REAL (RADIX := Float) := 0.00000000e+000;
		SpinCCWActive : BOOL (RADIX := Decimal) := 0;
		SpinCCWDemand : BOOL (RADIX := Decimal) := 0;
		SpinCWActive : BOOL (RADIX := Decimal) := 0;
		SpinCWDemand : BOOL (RADIX := Decimal) := 0;
		SpinDemandFall : BOOL (RADIX := Decimal) := 0;
		SpindleMotorOutputScale : REAL (RADIX := Float) := 0.00000000e+000;
		SpindlePressure : REAL (RADIX := Float) := 0.00000000e+000;
		SpindlePressureCCW : REAL (RADIX := Float) := 4.56389990e+003;
		SpindlePressureCW : REAL (RADIX := Float) := 4.56300000e+003;
		SpindlePressureDisplay : REAL (RADIX := Float) := 0.00000000e+000;
		SpindlePressureScale : REAL (RADIX := Float) := 7.34999990e+000;
		SpindlePressureTarget : REAL (RADIX := Float) := 3.23399994e+002;
		SpindleRPM : REAL (RADIX := Float) := 2.59936523e+003;
		SpindleRPMAtTarget : BOOL (RADIX := Decimal) := 0;
		SpindleRPMError : REAL (RADIX := Float) := 2.59936523e+003;
		SpindleRPMGate : REAL (RADIX := Float) := 1.00000000e+002;
		SpindleStall : BOOL (RADIX := Decimal) := 0;
		SpindleStallPressure : REAL (RADIX := Float) := 1.36054420e+001;
		SpindleStallRPM : REAL (RADIX := Float) := 1.00000000e+002;
		State : DINT (RADIX := Decimal) := 380;
		State200Build : BOOL (RADIX := Decimal) := 0;
		State200ONS : BOOL (RADIX := Decimal) := 0;
		State205 : BOOL (RADIX := Decimal) := 0;
		State205ONS : BOOL (RADIX := Decimal) := 1;
		State207ONS : BOOL (RADIX := Decimal) := 1;
		State207TraverseInitial : BOOL (RADIX := Decimal) := 0;
		State210Direction : BOOL (RADIX := Decimal) := 0;
		State210ONS : BOOL (RADIX := Decimal) := 1;
		State220ONS : BOOL (RADIX := Decimal) := 1;
		State220TraverseToStart : BOOL (RADIX := Decimal) := 0;
		State230StartSaw : BOOL (RADIX := Decimal) := 0;
		State240 : BOOL (RADIX := Decimal) := 0;
		State240ONS : BOOL (RADIX := Decimal) := 1;
		State250CheckRPM : BOOL (RADIX := Decimal) := 0;
		State250ONS : BOOL (RADIX := Decimal) := 1;
		State260Cut : BOOL (RADIX := Decimal) := 0;
		State260ONS : BOOL (RADIX := Decimal) := 1;
		State280 : BOOL (RADIX := Decimal) := 0;
		State280ONS : BOOL (RADIX := Decimal) := 1;
		State285BladeMeasure : BOOL (RADIX := Decimal) := 0;
		State290ONS : BOOL (RADIX := Decimal) := 1;
		State290RaiseBlade : BOOL (RADIX := Decimal) := 0;
		State299 : BOOL (RADIX := Decimal) := 0;
		StepCount : DINT (RADIX := Decimal) := 0;
		tbA1JogIn : BOOL (RADIX := Decimal) := 0;
		tbA1JogOut : BOOL (RADIX := Decimal) := 0;
		tbA2JogMinus : BOOL (RADIX := Decimal) := 0;
		tbA2JogPlus : BOOL (RADIX := Decimal) := 0;
		tbA3JogMinus : BOOL (RADIX := Decimal) := 0;
		tbA3JogPlus : BOOL (RADIX := Decimal) := 0;
		tbAutoCut : BOOL (RADIX := Decimal) := 0;
		tbAutoCutONS : BOOL (RADIX := Decimal) := 0;
		tbAutoGauge : BOOL (RADIX := Decimal) := 0;
		tbAutoWet : BOOL (RADIX := Decimal) := 0;
		tbBladeChange : BOOL (RADIX := Decimal) := 0;
		tbBladeCompensation : BOOL (RADIX := Decimal) := 0;
		tbBladeMeasure : BOOL (RADIX := Decimal) := 0;
		tbBladeMeasureONS : BOOL (RADIX := Decimal) := 0;
		tbCCW : BOOL (RADIX := Decimal) := 0;
		tbCoolant : BOOL (RADIX := Decimal) := 0;
		tbCW : BOOL (RADIX := Decimal) := 0;
		tbDryBump : BOOL (RADIX := Decimal) := 0;
		tbGaugeClamp : BOOL (RADIX := Decimal) := 0;
		tbGaugeUnclamp : BOOL (RADIX := Decimal) := 0;
		tbHome : BOOL (RADIX := Decimal) := 0;
		tbInRef : BOOL (RADIX := Decimal) := 0;
		tbLaser : BOOL (RADIX := Decimal) := 0;
		tbMS1HydPump : BOOL (RADIX := Decimal) := 0;
		tbMS2LoopPump : BOOL (RADIX := Decimal) := 0;
		tbMS3HydCoolingFan : BOOL (RADIX := Decimal) := 0;
		tbMS4CoolantPump : BOOL (RADIX := Decimal) := 0;
		tbMS5SwarfPump : BOOL (RADIX := Decimal) := 0;
		tbMS6SwarfConveyor : BOOL (RADIX := Decimal) := 0;
		tbOnOff : BOOL (RADIX := Decimal) := 0;
		tbOutRef : BOOL (RADIX := Decimal) := 0;
		tbPlateMeasure : BOOL (RADIX := Decimal) := 0;
		tbWetBump : BOOL (RADIX := Decimal) := 0;
		tbWorkClamp : BOOL (RADIX := Decimal) := 0;
		tbWorkUnclamp : BOOL (RADIX := Decimal) := 0;
		tbZeroGauge : BOOL (RADIX := Decimal) := 0;
		Thickness : REAL (RADIX := Float) := 0.00000000e+000;
		timerBladeMeasure15 : TIMER  := [1690503,1000,0];
		timerGaugeBrakeDelay : TIMER  := [1970346,2000,2000];
		timerRaiseLowerBrakeDelay : TIMER  := [1970372,2000,2001];
		timerSpindleStall : TIMER  := [0,3000,0];
		timerState250CheckRPM : TIMER  := [0,0,0];
		timerTraverseBrakeDelay : TIMER  := [1970356,2000,2000];
		TraverseJogIn : BOOL (RADIX := Decimal) := 0;
		TraverseJogOut : BOOL (RADIX := Decimal) := 0;
		TraversePotScale : REAL (RADIX := Float) := 2.44200259e-004;
		TraverseRange : REAL (RADIX := Float) := 1.28000000e+002;
		TraverseVelocityHome : REAL (RADIX := Float) := 8.33299994e-001;
		TraverseVelocityJog : REAL (RADIX := Float) := 1.03190832e+001;
		TraverseVelocityJogMax : REAL (RADIX := Float) := 8.33300018e+000;
		TraverseVelocityMax : REAL (RADIX := Float) := 1.66669998e+001;
		ValidData : BOOL (RADIX := Decimal) := 0;
		Warning : BOOL (RADIX := Decimal) := 1;
		WetCutDepth : REAL (RADIX := Float) := 0.00000000e+000;
		WetCutSpeed : REAL (RADIX := Float) := 0.00000000e+000;
		WetPasses : DINT (RADIX := Decimal) := 0;
		Width : REAL (RADIX := Float) := 0.00000000e+000;
		WorkClamping : BOOL (RADIX := Decimal) := 0;
		X_AutoCut : BOOL (RADIX := Decimal) := 0;
		X_BladeChange : BOOL (RADIX := Decimal) := 0;
		X_BladeMeasure : BOOL (RADIX := Decimal) := 0;
		X_Fault : BOOL (RADIX := Decimal) := 0;
		X_Homing : BOOL (RADIX := Decimal) := 0;
		X_Manual : BOOL (RADIX := Decimal) := 1;
		X_Off : BOOL (RADIX := Decimal) := 0;
		X_State : DINT (RADIX := Decimal) := 2;
	END_TAG

	PROGRAM Init (MAIN := "Init",
	              MODE := 0,
	              DisableFlag := 0,
	              UseAsFolder := 0)
		TAG
			Initialized : BOOL (RADIX := Decimal) := 1;
		END_TAG

		ROUTINE Init 
				N: XIO(Initialized)[MOVE(128.0,TraverseRange) MOVE(6.0,PastPart) ,DIV(14.7,2,SpindlePressureScale) CPT(HorsepowerScale,2*(160.0/328.0)/14.7) ,CPT(SpindleStallPressure,200.0/14.7) CPT(SpindleStallRPM,100.0) MOVE(100.0,SpindleRPMGate) ,MOVE(16.667,GaugeVelocityMax) MOVE(16.667,TraverseVelocityMax) MOVE(1.0,RaiseLowerVelocityMax) ,MOVE(1.667,GaugeVelocityHome) MOVE(0.8333,TraverseVelocityHome) MOVE(0.333,RaiseLowerVelocityHome) ,MOVE(8.333,GaugeVelocityJogMax) MOVE(8.333,TraverseVelocityJogMax) MOVE(0.5,RaiseLowerVelocityJogMax) ,CPT(GaugePotScale,1.0/4095.0) CPT(TraversePotScale,1.0/4095.0) CPT(RaiseLowerPotScale,1.0/4095.0) ,MOVE(200.0,DryCutSpeed) MOVE(0.03,DryCutDepth) ]OTL(Initialized);
		END_ROUTINE

		CHILD_PROGRAMS
		END_CHILD_PROGRAMS

	END_PROGRAM

	PROGRAM Inputs (MAIN := "Inputs",
	                MODE := 0,
	                DisableFlag := 0,
	                UseAsFolder := 0)
		TAG
			iAxis : DINT (RADIX := Decimal) := 3;
		END_TAG

		ROUTINE Inputs 
				N: JSR(Spindle,0);
				N: JSR(RMC,0);
				N: CPT(ServoPressure,inAnServoPressure*2000.0/10000.0)LT(ServoPressure,0.0)MOVE(0,ServoPressure);
				N: CPT(ClampPressure,inAnClampPressure*750.0/10000.0)LT(ClampPressure,0.0)MOVE(0,ClampPressure);
		END_ROUTINE

		ROUTINE RMC 
				RC: "AC inputs from the PLC are passed to the Delta Motion Controller";
				N: FOR(S_RMC_Axis,iAxis,0,2,1);
				N: XIC(inLs01OvertravelMnsGauge)OTE(AxisX_Gauge.LimitNeg);
				N: XIC(inLs02OvertravelPlsGauge)OTE(AxisX_Gauge.LimitPos);
				N: XIC(inLs03OvertravelMnsTraverse)OTE(AxisY_Traverse.LimitNeg);
				N: XIC(inLs04OvertravelPlsTraverse)OTE(AxisY_Traverse.LimitPos);
				N: XIC(inLs05OvertravelMnsRaiseLower)OTE(AxisZ_RaiseLower.LimitNeg);
				N: XIC(inLs06OvertravelPlsRaiseLower)OTE(AxisZ_RaiseLower.LimitPos);
		END_ROUTINE

		ROUTINE Spindle 
				N: CPT(SpindlePressureCW,inAnSpindleSideA*9000.0/10000.0)LT(SpindlePressureCW,0.0)MOVE(0,SpindlePressureCW);
				N: CPT(SpindlePressureCCW,inAnSpindlesideB*9000.0/10000.0)LT(SpindlePressureCCW,0.0)MOVE(0,SpindlePressureCCW);
				N: [XIC(SpinCWActive) MOVE(SpindlePressureCW,SpindlePressure) ,XIC(SpinCCWActive) MOVE(SpindlePressureCCW,SpindlePressure) ,XIO(SpinCWActive) XIO(SpinCCWActive) MOVE(0,SpindlePressure) ];
				N: MUL(SpindlePressure,SpindlePressureScale,SpindlePressureDisplay);
				RC: "Shouldn$'t Horsepower calculation need to take RPM into account?";
				N: CPT(HorsepowerActual,(SpindlePressureCW-SpindlePressureCCW)*HorsepowerScale)ABS(HorsepowerActual,HorsepowerActual);
				N: CPT(SpindleRPM,inAnSpindleSpeed*2100.0/4096.0)LT(SpindleRPM,SpindleRPMGate)MOVE(0,SpindleRPM);
		END_ROUTINE

		ROUTINE S_RMC_Axis 
				N: MOVE(RMC:I1.Data[iAxis],Axis[iAxis].PositionActual);
				N: MOVE(RMC:I1.Data[3+iAxis],Axis[iAxis].FinalOutput);
				N: MOVE(RMC:I1.Data[6+iAxis],Axis[iAxis].VelocityActual);
				N: XIC(RMC:I2.Data[iAxis].0)OTE(Axis[iAxis].InPosition);
				N: XIC(RMC:I2.Data[iAxis].1)OTE(Axis[iAxis].AtVelocity);
				N: XIC(RMC:I2.Data[iAxis].2)OTE(Axis[iAxis].OpenLoop);
				N: XIC(RMC:I2.Data[iAxis].3)OTE(Axis[iAxis].FaultInput);
				N: XIC(RMC:I2.Data[iAxis].6)OTE(Axis[iAxis].Stopped);
				N: XIC(RMC:I2.Data[iAxis].7)OTE(Axis[iAxis].InputEstimated);
				N: XIC(RMC:I2.Data[iAxis].8)OTE(Axis[iAxis].OutputEnabled);
				N: XIC(RMC:I2.Data[iAxis].9)OTE(Axis[iAxis].TargetGeneratorDone);
				N: XIC(RMC:I2.Data[iAxis].10)OTE(Axis[iAxis].TargetGeneratorStateA);
				N: XIC(RMC:I2.Data[iAxis].11)OTE(Axis[iAxis].TargetGeneratorStateB);
				N: XIC(RMC:I2.Data[iAxis].12)OTE(Axis[iAxis].DirectOutput);
				N: XIC(RMC:I2.Data[iAxis].13)OTE(Axis[iAxis].Enabled);
				N: XIC(RMC:I2.Data[iAxis].14)OTE(Axis[iAxis].ExternalHalt);
				N: XIC(RMC:I2.Data[iAxis].15)OTE(Axis[iAxis].Halted);
				N: XIC(RMC:I2.Data[iAxis].16)OTE(Axis[iAxis].ForceControlled);
				N: XIC(RMC:I2.Data[iAxis].17)OTE(Axis[iAxis].ForceLimitEnabled);
				N: XIC(RMC:I2.Data[iAxis].18)OTE(Axis[iAxis].ForceLimited);
				N: XIC(RMC:I2.Data[iAxis].19)OTE(Axis[iAxis].AtForce);
				N: XIC(RMC:I2.Data[iAxis].20)OTE(Axis[iAxis].ForceInputEstimated);
				N: XIC(RMC:I2.Data[iAxis].21)OTE(Axis[iAxis].ForceTargetGeneratorDone);
				N: XIC(RMC:I2.Data[iAxis].22)OTE(Axis[iAxis].ForceTargetGeneratorStateA);
				N: XIC(RMC:I2.Data[iAxis].23)OTE(Axis[iAxis].ForceTargetGeneratorStateB);
				N: XIC(RMC:I2.Data[iAxis].24)OTE(Axis[iAxis].TargetGeneratorBusy);
				N: XIC(RMC:I2.Data[iAxis].25)OTE(Axis[iAxis].ForceTargetGeneratorBusy);
				N: XIC(RMC:I2.Data[iAxis].26)OTE(Axis[iAxis].FeedbackOK);
				N: XIC(RMC:I2.Data[iAxis].27)OTE(Axis[iAxis].FeedbackOkSecondary);
				N: XIC(RMC:I2.Data[iAxis].28)OTE(Axis[iAxis].StateMachineEnabled);
				N: XIC(RMC:I2.Data[iAxis].29)OTE(Axis[iAxis].zs29);
				N: XIC(RMC:I2.Data[iAxis].30)OTE(Axis[iAxis].zs30);
				N: XIC(RMC:I2.Data[iAxis].31)OTE(Axis[iAxis].CommandAcknowledged);
				N: XIC(RMC:I2.Data[3+iAxis].0)OTE(Axis[iAxis].Encoder_A_In);
				N: XIC(RMC:I2.Data[3+iAxis].1)OTE(Axis[iAxis].Encoder_A_WireBreak);
				N: XIC(RMC:I2.Data[3+iAxis].2)OTE(Axis[iAxis].Encoder_A_Fault);
				N: XIC(RMC:I2.Data[3+iAxis].3)OTE(Axis[iAxis].Encoder_B_In);
				N: XIC(RMC:I2.Data[3+iAxis].4)OTE(Axis[iAxis].Encoder_B_WireBreak);
				N: XIC(RMC:I2.Data[3+iAxis].5)OTE(Axis[iAxis].Encoder_B_Fault);
				N: XIC(RMC:I2.Data[3+iAxis].6)OTE(Axis[iAxis].Encoder_Z_In);
				N: XIC(RMC:I2.Data[3+iAxis].7)OTE(Axis[iAxis].Encoder_Z_WireBreak);
				N: XIC(RMC:I2.Data[3+iAxis].8)OTE(Axis[iAxis].Encoder_Z_Fault);
				N: XIC(RMC:I2.Data[3+iAxis].9)OTE(Axis[iAxis].Encoder_Z_Learning);
				N: XIC(RMC:I2.Data[3+iAxis].10)OTE(Axis[iAxis].HomeIn);
				N: XIC(RMC:I2.Data[3+iAxis].11)OTE(Axis[iAxis].HomeFault);
				N: XIC(RMC:I2.Data[3+iAxis].12)OTE(Axis[iAxis].HomeArmed);
				N: XIC(RMC:I2.Data[3+iAxis].13)OTE(Axis[iAxis].HomeLatched);
				N: XIC(RMC:I2.Data[3+iAxis].14)OTE(Axis[iAxis].RegistrationIn);
				N: XIC(RMC:I2.Data[3+iAxis].15)OTE(Axis[iAxis].Registration0_Armed);
				N: XIC(RMC:I2.Data[3+iAxis].16)OTE(Axis[iAxis].Registration0_Latched);
				N: XIC(RMC:I2.Data[3+iAxis].17)OTE(Axis[iAxis].Registration1_Armed);
				N: XIC(RMC:I2.Data[3+iAxis].18)OTE(Axis[iAxis].Registration1_Latched);
		END_ROUTINE

		CHILD_PROGRAMS
		END_CHILD_PROGRAMS

	END_PROGRAM

	PROGRAM MainProgram (MAIN := "Main",
	                     MODE := 0,
	                     DisableFlag := 0,
	                     UseAsFolder := 0)
		TAG
			AnyJogRise : BOOL (RADIX := Decimal) := 0;
			AnyJogStorage : BOOL (RADIX := Decimal) := 0;
			btHpuValvesOK : BOOL (RADIX := Decimal) := 1;
			GaugeJogInRise : BOOL (RADIX := Decimal) := 0;
			GaugeJogOutRise : BOOL (RADIX := Decimal) := 0;
			HydRunFall : BOOL (RADIX := Decimal) := 0;
			HydRunFallStorage : BOOL (RADIX := Decimal) := 1;
			HydRunRise : BOOL (RADIX := Decimal) := 0;
			HydRunRiseStorage : BOOL (RADIX := Decimal) := 1;
			iAxis : DINT (RADIX := Decimal) := 3;
			ManualSpinCCW : BOOL (RADIX := Decimal) := 0;
			ManualSpinCW : BOOL (RADIX := Decimal) := 0;
			RaiseLowerJogLowerRise : BOOL (RADIX := Decimal) := 0;
			RaiseLowerJogRaiseRise : BOOL (RADIX := Decimal) := 0;
			SafetyRelayAutoResetDelayStorage : BOOL (RADIX := Decimal) := 1;
			spinActive : BOOL (RADIX := Decimal) := 0;
			spinDemand : BOOL (RADIX := Decimal) := 0;
			tbGaugeJogInONS : BOOL (RADIX := Decimal) := 0;
			tbGaugeJogOutONS : BOOL (RADIX := Decimal) := 0;
			tbHydSShot : BOOL (RADIX := Decimal) := 0;
			tbHydSShotStorage : BOOL (RADIX := Decimal) := 0;
			tbRaiseLowerJogLowerONS : BOOL (RADIX := Decimal) := 0;
			tbRaiseLowerJogRaiseONS : BOOL (RADIX := Decimal) := 0;
			tbTraverseJogInONS : BOOL (RADIX := Decimal) := 0;
			tbTraversJogOutONS : BOOL (RADIX := Decimal) := 0;
			timerBladeMeasure10 : TIMER  := [1689503,100,0];
			timerBladeMeasure20 : TIMER  := [1700429,100,0];
			timerBladeMeasure30 : TIMER  := [1700529,100,0];
			timerBladeMeasure40 : TIMER  := [1704208,100,0];
			timerBladeMeasure50 : TIMER  := [1704368,100,0];
			timerBladeMeasure55 : TIMER  := [1722427,100,0];
			timerBladeMeasure60 : TIMER  := [1722528,100,0];
			timerBladeMeasure65 : TIMER  := [1731947,100,0];
			timerBladeMeasure70 : TIMER  := [1732048,100,0];
			timerBladeMeasure75 : TIMER  := [1732148,100,0];
			timerBladeMeasure80 : TIMER  := [-1608878146,100,100];
			timerSafetyRelayDelay : TIMER  := [-1608641904,1000,1001];
			timerSpinDownCCW : TIMER  := [1970832,2000,2000];
			timerSpinDownCW : TIMER  := [1970832,2000,2000];
			tmrHydLoopDelay : TIMER  := [-1608641893,2000,2000];
			TraverseJogInRise : BOOL (RADIX := Decimal) := 0;
			TraverseJogOutRise : BOOL (RADIX := Decimal) := 0;
		END_TAG

		ST_ROUTINE Calc 
			'if BladeRadius > 1 then
			'	RpmTarget := (SFPM / Pi) * 120.00 / (2 * BladeRadius);
			'else
			'	RpmTarget := 0.0;
			'end_if;
			'
			'SpindlePressureTarget := (HorsepowerTarget * 328.0 / 160.0 + 22.0) * 14.7;
			'if SpindlePressureTarget > 350.0 * 14.7 then
			'	SpindlePressureTarget := 350.0 * 14.7;
			'end_if;
			'
			'if State200Build then
			'	BuildCount := 0;
			'	RemainDepth := Thickness;
			'	
			'	if WetPasses > 1 then
			'		WetCutDepth := 0.00001 + (Thickness - (DryPasses * DryCutDepth) - LastCutDepth) / (WetPasses - 1);
			'	else
			'		WetCutDepth := 0;
			'	end_if;
			'	
			'	while BuildCount <= 20 do
			'		Pass[BuildCount].WetPass := 1;
			'		if DryPasses > BuildCount then
			'			Pass[BuildCount].WetPass := 0;
			'			Pass[BuildCount].FeedRate := DryCutSpeed;
			'			Pass[BuildCount].Depth := DryCutDepth;
			'		elsif (WetPasses - 1) + DryPasses > BuildCount then
			'			Pass[BuildCount].FeedRate := WetCutSpeed;
			'			Pass[BuildCount].Depth := WetCutDepth;
			'		elsif (WetPasses - 1) + DryPasses = BuildCount then
			'			Pass[BuildCount].FeedRate := LastCutSpeed;
			'			Pass[BuildCount].Depth := LastCutDepth;
			'		end_if;
			'		RemainDepth := RemainDepth - Pass[BuildCount].Depth;
			'		Pass[BuildCount].RemainDepth := RemainDepth;
			'		BuildCount := BuildCount + 1;
			'	end_while;
			'	
			'	BuildDone := 1;
			'end_if;
		END_ST_ROUTINE

		ROUTINE Conditions 
				N: XIO(BladeRadiusKnown)MOVE(0.0,BladeRadius);
				N: GT(SFPM,0)GT(Width,0)GT(Thickness,0)GT(LastCutDepth,0)GT(HorsepowerTarget,0)GE(WetPasses,1)OTE(ValidData);
				N: CPT(SpindleRPMError,SpindleRPM-RpmTarget)ABS(SpindleRPMError,SpindleRPMError)LT(SpindleRPMError,150.0)OTE(SpindleRPMAtTarget);
				N: XIC(tbAutoCut)ONS(tbAutoCutONS)[XIC(X_AutoCut) OTE(AutoCutCancel) ,XIO(X_AutoCut) OTE(AutoCutReq) ];
		END_ROUTINE

		ROUTINE Main 
				N: [XIC(X_AutoCut) ,XIC(X_BladeChange) ]OTE(Auto);
				N: JSR(P09_HPU,0);
				N: JSR(P10_Faults,0);
				N: JSR(Conditions,0);
				N: JSR(State,0);
				N: JSR(Calc,0);
				N: JSR(Spindle,0);
				N: JSR(RMC,0);
		END_ROUTINE

		ROUTINE P09_HPU 
				N: XIC(inPx01Pump1Inlet)XIC(inPx02Pump2Inlet)XIC(InPx03PumpAA4Inlet)XIC(inPx04LoopInlet)XIC(inPx05DrainValve)OTE(btHpuValvesOK);
				N: XIC(btHpuValvesOK)XIC(inFl02OilLevelShutdownAlarm)XIC(inTs02OilTempShutdownAlarm)OTE(HPUReadyToRun);
				N: XIC(inLs07BladeGuard)XIC(HPUReadyToRun)OTE(HydReady);
				N: XIC(tbMS1HydPump)OSR(tbHydSShotStorage,tbHydSShot);
				N: XIC(HydRun)[OSR(HydRunRiseStorage,HydRunRise) ,OSF(HydRunFallStorage,HydRunFall) ];
				N: [XIC(HydRunRise) ,XIC(HydRunFall) ]OTU(HydStart)OTU(HydStop);
				N: XIC(tbHydSShot)[XIO(HydRun) OTL(HydStart) ,XIC(HydRun) OTL(HydStop) ];
				N: XIC(HydRun)TON(tmrHydLoopDelay,?,?)XIC(tmrHydLoopDelay.DN)OTE(HydRunning);
		END_ROUTINE

		ROUTINE P10_Faults 
				N: XIO(inSR1SafetyRelay)OTU(tbMS1HydPump)OTU(tbMS2LoopPump)OTU(tbMS3HydCoolingFan)OTU(tbMS4CoolantPump)OTU(tbMS5SwarfPump)OTU(tbLaser);
				N: XIC(inSR1SafetyRelay)TON(timerSafetyRelayDelay,?,?)XIC(timerSafetyRelayDelay.DN)OSR(SafetyRelayAutoResetDelayStorage,SafetyRelayAutoReset);
				N: OTU(Fault);
				RC: "Data Entry Incomplete";
				N: XIO(ValidData)MOVE(32,hmiFaultMessageNumber);
				RC: "Blade Diameter Not Known";
				N: XIO(BladeRadiusKnown)MOVE(31,hmiFaultMessageNumber);
				RC: "Machine not Homed";
				N: [XIO(AxisX_Gauge.HomeLatched) ,XIO(AxisY_Traverse.HomeLatched) ,XIO(AxisZ_RaiseLower.HomeLatched) ]MOVE(30,hmiFaultMessageNumber);
				RC: "Raise/Lower Axis Plus OVERTRAVEL";
				N: XIO(AxisZ_RaiseLower.LimitPos)MOVE(29,hmiFaultMessageNumber);
				RC: "Raise/Lower  Axis Minus OVERTRAVEL";
				N: XIO(AxisZ_RaiseLower.LimitNeg)MOVE(28,hmiFaultMessageNumber);
				RC: "Raise/Lower Servo ERROR";
				N: XIC(AxisZ_RaiseLower.ServoFault)OTL(Fault)MOVE(27,hmiFaultMessageNumber);
				RC: "Raise/Lower Feedback LOSS";
				N: XIO(AxisZ_RaiseLower.FeedbackOK)OTL(Fault)MOVE(26,hmiFaultMessageNumber);
				RC: "Raise/Lower Axis Following ERROR";
				N: XIC(AxisZ_RaiseLower.FollowingError)OTL(Fault)MOVE(25,hmiFaultMessageNumber);
				RC: "Traverse Axis Plus OVERTRAVEL";
				N: XIO(AxisY_Traverse.LimitPos)MOVE(24,hmiFaultMessageNumber);
				RC: "Traverse Axis Minus OVERTRAVEL";
				N: XIO(AxisY_Traverse.LimitNeg)MOVE(23,hmiFaultMessageNumber);
				RC: "Traverse Axis Servo ERROR";
				N: XIC(AxisY_Traverse.ServoFault)OTL(Fault)MOVE(22,hmiFaultMessageNumber);
				RC: "Traverse Axis Feedback LOSS";
				N: XIO(AxisY_Traverse.FeedbackOK)OTL(Fault)MOVE(21,hmiFaultMessageNumber);
				RC: "Traverse Axis Following ERROR";
				N: XIC(AxisY_Traverse.FollowingError)OTL(Fault)MOVE(20,hmiFaultMessageNumber);
				RC: "Gauge Axis Plus OVERTRAVEL";
				N: XIO(AxisX_Gauge.LimitPos)MOVE(19,hmiFaultMessageNumber);
				RC: "Gauge Axis Minus OVERTRAVEL";
				N: XIO(AxisX_Gauge.LimitNeg)MOVE(18,hmiFaultMessageNumber);
				RC: "Gauge Axis Servo ERROR";
				N: XIC(AxisX_Gauge.ServoFault)OTL(Fault)MOVE(17,hmiFaultMessageNumber);
				RC: "Gauge Axis Feedback LOSS";
				N: XIO(AxisX_Gauge.FeedbackOK)OTL(Fault)MOVE(16,hmiFaultMessageNumber);
				RC: "Gauge Axis Following ERROR";
				N: XIC(AxisX_Gauge.FollowingError)OTL(Fault)MOVE(15,hmiFaultMessageNumber);
				RC: "Swarf Filter is BLOCKED";
				N: XIO(inPs04SwarfFilterDirty)MOVE(14,hmiFaultMessageNumber);
				RC: "Spindle Case Line is BLOCKED";
				N: XIO(inPs03MotorCaseDrain)MOVE(13,hmiFaultMessageNumber);
				RC: "Pressure Line Hydraulic Filter is DIRTY";
				N: XIO(inPs02PressureFilterDirty)MOVE(12,hmiFaultMessageNumber);
				RC: "Loop Hydraulic Filter is DIRTY";
				N: XIO(inPs01LoopFilterDirty)MOVE(11,hmiFaultMessageNumber);
				RC: "Drain Valve is OPEN";
				N: XIO(inPx05DrainValve)MOVE(10,hmiFaultMessageNumber);
				RC: "Pump2 Inlet Valve is OFF";
				N: XIO(inPx02Pump2Inlet)MOVE(9,hmiFaultMessageNumber);
				RC: "Pump1 Inlet Valve is OFF";
				N: XIO(inPx01Pump1Inlet)MOVE(8,hmiFaultMessageNumber);
				RC: "Spindle Pump Inlet Valve is OFF";
				N: XIO(InPx03PumpAA4Inlet)MOVE(7,hmiFaultMessageNumber);
				RC: "Blade Guard is OPEN";
				N: XIO(inLs07BladeGuard)OTU(BladeRadiusKnown)MOVE(6,hmiFaultMessageNumber);
				RC: "Hydraulic Oil is LOW - Shutdown";
				N: XIO(inFl02OilLevelShutdownAlarm)OTL(Fault)MOVE(5,hmiFaultMessageNumber);
				RC: "Hydraulic Oil is LOW - Warning";
				N: XIO(inFl01OilLevelWarning)MOVE(4,hmiFaultMessageNumber);
				RC: "Hydraulic Oil is HOT - Shutdown";
				N: XIO(inTs02OilTempShutdownAlarm)OTL(Fault)MOVE(3,hmiFaultMessageNumber);
				RC: "Hydraulic Oil is HOT - Warning";
				N: XIO(inTs01OilTempWarning)OTE(OilWarm)MOVE(2,hmiFaultMessageNumber);
				RC: "Main Power is OFF";
				N: XIO(inSR1SafetyRelay)MOVE(1,hmiFaultMessageNumber);
				N: XIO(Fault)GT(hmiFaultMessageNumber,0)OTE(Warning);
		END_ROUTINE

		ROUTINE RMC 
				N: [XIC(tbA1JogIn) ,XIC(tbA1JogOut) ,XIC(tbA2JogMinus) ,XIC(tbA2JogPlus) ,XIC(tbA3JogMinus) ,XIC(tbA3JogPlus) ]OSR(AnyJogStorage,AnyJogRise);
				N: [XIC(SafetyRelayAutoReset) ,XIC(X_Fault) XIC(AnyJogRise) ]OTE(MC_Reset);
				N: [XIC(tbOutRef) ,XIC(OutZero) ]XIO(tbInRef)XIO(X_AutoCut)OTE(OutZero);
				N: MOVE(AxisX_Gauge.PositionActual,AxisX_Gauge.PositionDisplay);
				N: [XIO(OutZero) MOVE(AxisY_Traverse.PositionActual,AxisY_Traverse.PositionDisplay) ,XIC(OutZero) SUB(TraverseRange,AxisY_Traverse.PositionActual,AxisY_Traverse.PositionDisplay) ];
				N: SUB(AxisZ_RaiseLower.PositionActual,BladeRadius,AxisZ_RaiseLower.PositionDisplay);
				N: FOR(S_RMC_Axis,iAxis,0,2,1);
		END_ROUTINE

		ROUTINE Spindle 
				N: GT(SpindlePressure,SpindleStallPressure)LT(SpindleRPM,SpindleStallRPM)TON(timerSpindleStall,?,?)XIC(timerSpindleStall.DN)OTE(SpindleStall);
				N: [XIC(tbCCW) XIO(ManualSpinCCW) ,XIO(tbCCW) XIC(ManualSpinCCW) ]XIO(tbCW)[XIO(ManualSpinCW) ,XIC(tbCCW) ]XIC(HydReady)XIO(X_AutoCut)XIO(SpindleStall)OTE(ManualSpinCCW);
				N: [XIC(tbCW) XIO(ManualSpinCW) ,XIO(tbCW) XIC(ManualSpinCW) ]XIO(tbCCW)[XIO(ManualSpinCCW) ,XIC(tbCW) ]XIC(HydReady)XIO(X_AutoCut)XIO(SpindleStall)OTE(ManualSpinCW);
				N: OTU(tbCW)OTU(tbCCW);
				N: [XIC(ManualSpinCCW) ,XIC(AutoSpinCCW) ]XIO(SpinCWActive)OTE(SpinCCWDemand)TOF(timerSpinDownCCW,?,?);
				N: XIC(timerSpinDownCCW.DN)OTE(SpinCCWActive);
				N: [XIC(ManualSpinCW) ,XIC(AutoSpinCW) ]XIO(SpinCCWActive)OTE(SpinCWDemand)TOF(timerSpinDownCW,?,?);
				N: XIC(timerSpinDownCW.DN)OTE(SpinCWActive);
				N: [XIC(SpinCCWDemand) ,XIC(SpinCWDemand) ]OSF(spinDemand,SpinDemandFall);
				N: [XIC(SpinCCWActive) ,XIC(SpinCWActive) ]OTE(spinActive);
				N: MUL(RpmTarget,1.05,RpmTarget105Pct)LT(RpmTarget105Pct,875.0)MOVE(875.0,RpmTarget105Pct);
		END_ROUTINE

		ROUTINE State 
				N: XIC(inSR1SafetyRelay)XIC(Fault)[OTE(X_Fault) MOVE(8,X_State) ,OSR(FaultOSR,FaultRise) ];
				N: XIO(inSR1SafetyRelay)XIO(X_AutoCut)XIO(X_BladeMeasure)XIO(X_BladeChange)XIO(X_Homing)OTE(X_Off)MOVE(1,X_State);
				N: XIC(inSR1SafetyRelay)XIO(X_AutoCut)XIO(X_BladeMeasure)XIO(X_BladeChange)XIO(X_Homing)XIO(X_Fault)[OTE(X_Manual) MOVE(2,X_State) ,JSR(X_Manual,0) ];
				N: XIO(X_Manual)OTU(GaugeJogIn)OTU(GaugeJogOut)OTU(TraverseJogIn)OTU(TraverseJogOut)OTU(RaiseLowerJogLower)OTU(RaiseLowerJogRaise);
				N: [[XIC(AutoCutCancel) ,XIC(FaultRise) ] [FOR(S_Stop_Axis,iAxis,0,2,1) ,OSF(AutoCutCancelOSF,AutoCutCancelFall) ] ,XIC(AutoCutCancelFall) OTU(AxisX_Gauge.CommandStop) OTU(AxisY_Traverse.CommandStop) OTU(AxisZ_RaiseLower.CommandStop) ];
				N: [XIC(AutoCutReq) XIC(X_Manual) XIC(ValidData) ,XIC(X_AutoCut) XIO(AutoCutCancel) XIO(State299) XIO(X_Fault) ][OTE(X_AutoCut) MOVE(6,X_State) ,ONS(AutoCutStartONS) OTL(State200Build) ,JSR(X_AutoCut,0) ];
				N: XIO(X_AutoCut)[OTU(State200ONS) OTU(State200Build) OTU(State205) OTU(State207TraverseInitial) OTU(State210Direction) OTU(State220TraverseToStart) OTU(State230StartSaw) ,OTU(State240) OTU(State250CheckRPM) OTU(State260Cut) OTU(State280) OTU(State285BladeMeasure) OTU(State290RaiseBlade) OTU(State299) ];
				N: [XIC(tbBladeChange) XIC(X_Manual) ,XIC(X_BladeChange) ]XIC(AxisX_Gauge.HomeLatched)XIC(AxisY_Traverse.HomeLatched)XIC(AxisZ_RaiseLower.HomeLatched)[OTE(X_BladeChange) MOVE(5,X_State) ,ONS(BladeChangeStartONS) OTL(BladeChange10) ,JSR(X_BladeChange,0) ];
				N: XIO(X_BladeChange)OTU(BladeChange10ONS)OTU(BladeChange10)OTU(BladeChange20);
				N: XIC(tbBladeMeasure)ONS(tbBladeMeasureONS)XIC(X_BladeMeasure)OTL(BladeMeasureAbort);
				N: [XIC(tbBladeMeasure) XIC(X_Manual) ,XIC(X_BladeMeasure) XIO(X_Fault) ]XIO(X_Off)[XIC(AxisX_Gauge.HomeLatched) XIC(AxisY_Traverse.HomeLatched) XIC(AxisZ_RaiseLower.HomeLatched) ,][OTE(X_BladeMeasure) MOVE(4,X_State) ,ONS(BladeMeasureStartONS) OTL(BladeMeasure10StopAll) ,JSR(X_BladeMeasure,0) ];
				N: XIO(X_BladeMeasure)[XIO(X_AutoCut) ,XIO(State285BladeMeasure) ][OTU(BladeMeasure10ONS) OTU(BladeMeasure10StopAll) OTU(BladeMeasure15ClearZero) OTU(BladeMeasure20Retract) ,OTU(BladeMeasure30Traverse) OTU(BladeMeasure40Lower) OTU(BladeMeasure50Stop) ,OTU(BladeMeasure55Raise) OTU(BladeMeasure60Stop) OTU(BladeMeasure65Measure) ,OTU(BladeMeasure70Calc) OTU(BladeMeasure75PartRef) OTU(BladeMeasure80Return) ];
				N: [XIC(tbHome) XIC(X_Manual) ,XIC(X_Homing) [XIO(AxisX_Gauge.HomeLatched) ,XIO(AxisY_Traverse.HomeLatched) ,XIO(AxisZ_RaiseLower.HomeLatched) ] XIO(Fault) ][OTE(X_Homing) MOVE(3,X_State) ,JSR(X_Homing,0) ];
		END_ROUTINE

		ROUTINE S_RMC_Axis 
				N: XIC(Axis[iAxis].InPosition)OTE(Axis[iAxis].MoveComplete);
				N: XIO(Axis[iAxis].HomeLatched)MOVE(0.0,Axis[iAxis].PositionDisplay);
				N: [XIC(Axis[iAxis].CommandMove) ,XIC(Axis[iAxis].CommandJog) ,XIC(Axis[iAxis].CommandHome) ,XIC(Axis[iAxis].CommandMoveRelative) ]OTE(Axis[iAxis].CommandAny);
		END_ROUTINE

		ROUTINE S_Stop_Axis 
				N: OTL(Axis[iAxis].CommandStop)[OTU(Axis[iAxis].CommandMove) OTU(Axis[iAxis].CommandMoveRelative) ,OTU(Axis[iAxis].CommandJog) OTU(Axis[iAxis].CommandHome) ,OTU(Axis[iAxis].CommandZero) OTU(Axis[iAxis].CommandClearZero) ];
		END_ROUTINE

		ROUTINE X_AutoCut 
				N: XIC(State200Build)MOVE(200,State)[ONS(State200ONS) OTU(BuildDone) OTE(AutoCutStateChange) ,MOVE(0,StepCount) OTU(CutOnReturn) OTU(CutForward) ,XIC(BuildDone) OTL(State205) OTU(State200Build) ];
				N: XIC(State205)MOVE(205,State)[ONS(State205ONS) OTE(AutoCutStateChange) ,OTL(AxisZ_RaiseLower.CommandMove) MOVE(5.5,AxisZ_RaiseLower.PositionTarget) MOVE(RaiseLowerVelocityMax,AxisZ_RaiseLower.VelocityTarget) ,XIO(AutoCutStateChange) XIC(AxisZ_RaiseLower.MoveComplete) OTL(State207TraverseInitial) OTU(State205) OTU(AxisZ_RaiseLower.CommandMove) ];
				N: XIC(State207TraverseInitial)MOVE(207,State)[ONS(State207ONS) OTL(AxisY_Traverse.CommandMove) OTE(AutoCutStateChange) ,MOVE(0.0,AxisY_Traverse.PositionTarget) MOVE(TraverseVelocityMax,AxisY_Traverse.VelocityTarget) ,XIO(AutoCutStateChange) XIC(AxisY_Traverse.MoveComplete) OTL(State210Direction) OTU(State207TraverseInitial) OTU(AxisY_Traverse.CommandMove) ];
				N: XIC(State210Direction)MOVE(210,State)[ONS(State210ONS) [CPT(CutStartPosition,AxisY_Traverse.PositionActual+PastPart-1.0) OTE(AutoCutStateChange) ,GT(CutStartPosition,Width) OTU(CutForward) OTL(CutOnReturn) ,LT(AxisY_Traverse.PositionActual,2.0) MOVE(0.0,CutStartPosition) OTL(CutForward) OTU(CutOnReturn) ,XIO(CutForward) XIO(CutOnReturn) [OTL(AxisZ_RaiseLower.CommandMove) ,MOVE(5.5,AxisZ_RaiseLower.PositionTarget) MOVE(RaiseLowerVelocityMax,AxisZ_RaiseLower.VelocityTarget) ] ,[XIC(CutForward) ,XIC(CutOnReturn) ] OTL(State230StartSaw) OTU(State210Direction) ] ,XIO(AutoCutStateChange) OTU(AxisZ_RaiseLower.CommandMove) ];
				N: XIC(State220TraverseToStart)MOVE(220,State)[ONS(State220ONS) OTL(AxisY_Traverse.CommandMove) OTE(AutoCutStateChange) ,MOVE(CutStartPosition,AxisY_Traverse.PositionTarget) MOVE(TraverseVelocityMax,AxisY_Traverse.VelocityTarget) ,XIO(AutoCutStateChange) XIC(AxisY_Traverse.MoveComplete) OTL(State210Direction) OTU(State207TraverseInitial) OTU(AxisY_Traverse.CommandMove) ];
				N: XIC(State230StartSaw)MOVE(230,State)[[XIO(Pass[StepCount].WetPass) XIC(CutOnReturn) ,XIC(Pass[StepCount].WetPass) XIC(CutForward) ] OTL(AutoSpinCW) OTU(AutoSpinCCW) ,[XIO(Pass[StepCount].WetPass) XIC(CutForward) ,XIC(Pass[StepCount].WetPass) XIC(CutOnReturn) ] OTU(AutoSpinCW) OTL(AutoSpinCCW) ,OTL(State240) OTU(State230StartSaw) ];
				N: XIC(State240)MOVE(240,State)[ONS(State240ONS) [OTL(AxisZ_RaiseLower.CommandMove) ,XIC(Pass[0].WetPass) OTL(tbCoolant) ] OTE(AutoCutStateChange) ,MOVE(Pass[StepCount].RemainDepth,AxisZ_RaiseLower.PositionTarget) MOVE(0.833,AxisZ_RaiseLower.VelocityTarget) ,XIO(AutoCutStateChange) XIC(AxisZ_RaiseLower.MoveComplete) OTL(State250CheckRPM) OTU(State240) OTU(AxisZ_RaiseLower.CommandMove) ];
				N: XIC(State250CheckRPM)MOVE(250,State)[ONS(State250ONS) OTE(AutoCutStateChange) ,XIO(AutoCutStateChange) [XIC(SpindleRPMAtTarget) ,XIO(SpindleRPMAtTarget) ] TON(timerState250CheckRPM,?,?) ,XIC(timerState250CheckRPM.DN) OTL(State260Cut) OTU(State250CheckRPM) ];
				N: XIC(State260Cut)MOVE(260,State)[ONS(State260ONS) OTL(AxisY_Traverse.CommandMove) OTE(AutoCutStateChange) ,XIC(CutForward) ADD(Width,PastPart,CutEndPosition) ,XIC(CutOnReturn) MOVE(0.0,CutEndPosition) ,MOVE(CutEndPosition,AxisY_Traverse.PositionTarget) DIV(Pass[StepCount].FeedRate,60.0,AxisY_Traverse.VelocityTarget) ,XIO(AutoCutStateChange) XIC(AxisY_Traverse.MoveComplete) OTL(State280) OTU(State260Cut) OTU(AxisY_Traverse.CommandMove) ];
				N: XIC(State280)[ONS(State280ONS) OTE(AutoCutStateChange) MOVE(280,State) LE(Pass[StepCount].RemainDepth,0.0) OTL(State290RaiseBlade) ,XIO(AutoCutStateChange) [XIC(Pass[StepCount].Measure) OTL(BladeMeasure10StopAll) OTU(BladeRadiusKnown) OTL(State285BladeMeasure) ,XIO(Pass[StepCount].Measure) OTL(State210Direction) ] ]ADD(StepCount,1,StepCount)OTU(State280);
				N: XIC(State285BladeMeasure)JSR(X_BladeMeasure,0)XIC(BladeRadiusKnown)OTL(State205)OTU(State285BladeMeasure);
				N: XIC(State290RaiseBlade)MOVE(290,State)[ONS(State290ONS) OTE(AutoCutStateChange) ,OTL(AxisZ_RaiseLower.CommandMove) MOVE(5.5,AxisZ_RaiseLower.PositionTarget) MOVE(RaiseLowerVelocityMax,AxisZ_RaiseLower.VelocityTarget) ,XIO(AutoCutStateChange) XIC(AxisZ_RaiseLower.MoveComplete) OTL(State299) OTU(State290RaiseBlade) OTU(AxisZ_RaiseLower.CommandMove) ];
		END_ROUTINE

		ROUTINE X_BladeChange 
				N: XIC(BladeChange10)[ONS(BladeChange10ONS) OTL(AxisY_Traverse.CommandMove) OTE(BladeChangeStateChange) ,MOVE(130.0,AxisY_Traverse.PositionTarget) MOVE(TraverseVelocityHome,AxisY_Traverse.VelocityTarget) ,XIO(BladeChangeStateChange) XIC(AxisY_Traverse.MoveComplete) OTU(AxisY_Traverse.CommandMove) OTL(BladeChange20) OTU(BladeChange10) ];
				N: XIC(BladeChange20)[ONS(BladeChange20ONS) OTL(AxisZ_RaiseLower.CommandMove) OTE(BladeChangeStateChange) ,MOVE(1.51,AxisZ_RaiseLower.PositionTarget) MOVE(RaiseLowerVelocityHome,AxisZ_RaiseLower.VelocityTarget) ,XIO(BladeChangeStateChange) XIC(AxisZ_RaiseLower.MoveComplete) OTU(AxisZ_RaiseLower.CommandMove) OTL(BladeChangeDone) OTU(X_BladeChange) OTU(BladeChange20) ];
		END_ROUTINE

		ROUTINE X_BladeMeasure 
				N: XIC(BladeMeasureAbort)[OTL(AxisZ_RaiseLower.CommandStop) OTL(AxisY_Traverse.CommandStop) ,ONS(BladeMeasureAbortONS) OTE(BladeMeasureStateChange) ,OTU(AxisZ_RaiseLower.CommandZero) OTU(AxisZ_RaiseLower.CommandClearZero) ,OTU(AxisY_Traverse.CommandMove) OTU(AxisZ_RaiseLower.CommandMove) ,OTU(BladeMeasure10StopAll) OTU(BladeMeasure15ClearZero) OTU(BladeMeasure20Retract) OTU(BladeMeasure30Traverse) OTU(BladeMeasure40Lower) OTU(BladeMeasure50Stop) ,OTU(BladeMeasure55Raise) OTU(BladeMeasure60Stop) OTU(BladeMeasure65Measure) OTU(BladeMeasure70Calc) OTU(BladeMeasure75PartRef) OTU(BladeMeasure80Return) ,XIO(BladeMeasureStateChange) XIC(AxisZ_RaiseLower.Stopped) XIC(AxisY_Traverse.Stopped) OTU(BladeMeasureAbort) OTU(X_BladeMeasure) ];
				N: XIC(BladeMeasure10StopAll)MOVE(310,State)[TON(timerBladeMeasure10,?,?) OTU(tbCoolant) OTU(tbA1JogIn) OTU(tbA1JogOut) OTU(tbA2JogMinus) OTU(tbA2JogPlus) OTU(tbA3JogMinus) OTU(tbA3JogPlus) ,OTL(AxisX_Gauge.CommandStop) OTL(AxisY_Traverse.CommandStop) OTL(AxisZ_RaiseLower.CommandStop) ,XIC(timerBladeMeasure10.DN) XIC(AxisX_Gauge.Stopped) XIC(AxisY_Traverse.Stopped) XIC(AxisZ_RaiseLower.Stopped) [OTL(BladeMeasure15ClearZero) OTU(BladeMeasure10StopAll) ,OTU(AxisX_Gauge.CommandStop) OTU(AxisY_Traverse.CommandStop) OTU(AxisZ_RaiseLower.CommandStop) ] ];
				N: XIC(BladeMeasure15ClearZero)MOVE(315,State)[OTL(AxisZ_RaiseLower.CommandClearZero) TON(timerBladeMeasure15,?,?) ,XIC(timerBladeMeasure15.DN) OTU(AxisZ_RaiseLower.CommandClearZero) OTL(BladeMeasure20Retract) OTU(BladeMeasure15ClearZero) ];
				N: XIC(BladeMeasure20Retract)MOVE(320,State)[TON(timerBladeMeasure20,?,?) ,OTL(AxisZ_RaiseLower.CommandMove) MOVE(1.667,AxisZ_RaiseLower.VelocityTarget) MOVE(16.0,AxisZ_RaiseLower.PositionTarget) ,XIC(timerBladeMeasure20.DN) XIC(AxisZ_RaiseLower.MoveComplete) [OTL(BladeMeasure30Traverse) OTU(BladeMeasure20Retract) ,OTU(AxisZ_RaiseLower.CommandMove) ] ];
				N: XIC(BladeMeasure30Traverse)MOVE(330,State)[TON(timerBladeMeasure30,?,?) ,OTL(AxisY_Traverse.CommandMove) MOVE(5.0,AxisY_Traverse.VelocityTarget) MOVE(1.3,AxisY_Traverse.PositionTarget) ,XIC(timerBladeMeasure30.DN) XIC(AxisY_Traverse.MoveComplete) [OTL(BladeMeasure40Lower) OTU(BladeMeasure30Traverse) ,OTU(AxisY_Traverse.CommandMove) ] ];
				N: XIC(BladeMeasure40Lower)MOVE(340,State)[TON(timerBladeMeasure40,?,?) ,OTL(AxisZ_RaiseLower.CommandMove) MOVE(0.833,AxisZ_RaiseLower.VelocityTarget) MOVE(5.0,AxisZ_RaiseLower.PositionTarget) ,XIC(timerBladeMeasure40.DN) XIC(inPe01BladeDetect) [OTL(BladeMeasure50Stop) OTU(BladeMeasure40Lower) ,OTU(AxisZ_RaiseLower.CommandMove) ] ];
				N: XIC(BladeMeasure50Stop)MOVE(350,State)[OTL(AxisZ_RaiseLower.CommandStop) TON(timerBladeMeasure50,?,?) ,XIC(timerBladeMeasure50.DN) XIC(AxisZ_RaiseLower.Stopped) [OTL(BladeMeasure55Raise) OTU(BladeMeasure50Stop) ,OTU(AxisZ_RaiseLower.CommandStop) ] ];
				N: XIC(BladeMeasure55Raise)MOVE(355,State)[TON(timerBladeMeasure55,?,?) ,OTL(AxisZ_RaiseLower.CommandMove) MOVE(0.333,AxisZ_RaiseLower.VelocityTarget) MOVE(12.5,AxisZ_RaiseLower.PositionTarget) ,XIC(timerBladeMeasure55.DN) XIO(inPe01BladeDetect) [OTL(BladeMeasure60Stop) OTU(BladeMeasure55Raise) ,OTU(AxisZ_RaiseLower.CommandMove) ] ];
				N: XIC(BladeMeasure60Stop)MOVE(360,State)[OTL(AxisZ_RaiseLower.CommandStop) TON(timerBladeMeasure60,?,?) ,XIC(timerBladeMeasure60.DN) XIC(AxisZ_RaiseLower.Stopped) [OTL(BladeMeasure65Measure) OTU(BladeMeasure60Stop) ,OTU(AxisZ_RaiseLower.CommandStop) ] ];
				N: XIC(BladeMeasure65Measure)MOVE(365,State)[TON(timerBladeMeasure65,?,?) ,OTL(AxisZ_RaiseLower.CommandMove) MOVE(0.033,AxisZ_RaiseLower.VelocityTarget) MOVE(5,AxisZ_RaiseLower.PositionTarget) ,XIC(timerBladeMeasure65.DN) XIC(inPe01BladeDetect) [OTL(BladeMeasure70Calc) OTU(BladeMeasure65Measure) ,OTU(AxisZ_RaiseLower.CommandMove) ] ];
				N: XIC(BladeMeasure70Calc)MOVE(370,State)[TON(timerBladeMeasure70,?,?) ,CPT(BladeRadius,AxisZ_RaiseLower.PositionActual-0.5) OTL(BladeRadiusKnown) OTL(AxisZ_RaiseLower.CommandStop) ,XIC(timerBladeMeasure70.DN) XIC(AxisZ_RaiseLower.Stopped) [OTL(BladeMeasure75PartRef) OTU(BladeMeasure70Calc) ,OTU(AxisZ_RaiseLower.CommandStop) ] ];
				N: XIC(BladeMeasure75PartRef)MOVE(375,State)[TON(timerBladeMeasure75,?,?) ,MOVE(-0.776,AxisZ_RaiseLower.PositionTarget) OTL(AxisZ_RaiseLower.CommandZero) ,XIC(timerBladeMeasure75.DN) [OTL(BladeMeasure80Return) OTU(BladeMeasure75PartRef) ,OTU(AxisZ_RaiseLower.CommandZero) ] ];
				N: XIC(BladeMeasure80Return)MOVE(380,State)[TON(timerBladeMeasure80,?,?) ,OTL(AxisZ_RaiseLower.CommandMove) MOVE(0.333,AxisZ_RaiseLower.VelocityTarget) MOVE(0,AxisZ_RaiseLower.PositionTarget) ,XIC(timerBladeMeasure80.DN) XIC(AxisZ_RaiseLower.MoveComplete) [OTU(X_BladeMeasure) OTU(BladeMeasure80Return) ,OTL(BladeRadiusKnown) OTU(AxisZ_RaiseLower.CommandMove) ] ];
		END_ROUTINE

		ROUTINE X_Homing 
				N: XIO(AxisZ_RaiseLower.HomeLatched)OTE(AxisZ_RaiseLower.CommandHome);
				N: XIC(AxisZ_RaiseLower.HomeLatched)[XIO(AxisX_Gauge.HomeLatched) OTE(AxisX_Gauge.CommandHome) ,XIO(AxisY_Traverse.HomeLatched) OTE(AxisY_Traverse.CommandHome) ];
				N: MOVE(GaugeVelocityHome,AxisX_Gauge.VelocityTarget);
				N: MOVE(TraverseVelocityHome,AxisY_Traverse.VelocityTarget);
				N: MOVE(RaiseLowerVelocityHome,AxisZ_RaiseLower.VelocityTarget);
		END_ROUTINE

		ROUTINE X_Manual 
				N: XIC(tbZeroGauge)MOVE(0.0,AxisX_Gauge.PositionTarget)OTE(AxisX_Gauge.CommandZero);
				N: CPT(GaugeVelocityJog,InAnPotGauge*GaugeVelocityJogMax*GaugePotScale);
				N: CPT(TraverseVelocityJog,inAnPotTraverse*TraverseVelocityJogMax*TraversePotScale);
				N: CPT(RaiseLowerVelocityJog,inAnPotRaiseLower*RaiseLowerVelocityJogMax*RaiseLowerPotScale);
				N: [XIC(tbA1JogIn) OSR(tbGaugeJogInONS,GaugeJogInRise) ,XIC(tbA1JogOut) OSR(tbGaugeJogOutONS,GaugeJogOutRise) ,XIC(tbA2JogMinus) OSR(tbTraverseJogInONS,TraverseJogInRise) ,XIC(tbA2JogPlus) OSR(tbTraversJogOutONS,TraverseJogOutRise) ,XIC(tbA3JogMinus) OSR(tbRaiseLowerJogLowerONS,RaiseLowerJogLowerRise) ,XIC(tbA3JogPlus) OSR(tbRaiseLowerJogRaiseONS,RaiseLowerJogRaiseRise) ];
				N: XIC(HydRunning)[XIO(outCr04ClampAdvance) [[XIO(GaugeJogIn) XIC(GaugeJogInRise) ,XIC(GaugeJogIn) XIO(GaugeJogInRise) XIO(GaugeJogOutRise) ] XIC(AxisX_Gauge.LimitNeg) XIO(tbA1JogOut) OTE(GaugeJogIn) ,[XIO(GaugeJogOut) XIC(GaugeJogOutRise) ,XIC(GaugeJogOut) XIO(GaugeJogOutRise) XIO(GaugeJogInRise) ] XIC(AxisX_Gauge.LimitPos) XIO(tbA1JogIn) OTE(GaugeJogOut) ] ,[[XIO(TraverseJogIn) XIC(TraverseJogInRise) ,XIC(TraverseJogIn) XIO(TraverseJogInRise) XIO(TraverseJogOutRise) ] XIC(AxisY_Traverse.LimitNeg) XIO(tbA2JogPlus) OTE(TraverseJogIn) ,[XIO(TraverseJogOut) XIC(TraverseJogOutRise) ,XIC(TraverseJogOut) XIO(TraverseJogInRise) XIO(TraverseJogOutRise) ] XIC(AxisY_Traverse.LimitPos) XIO(tbA2JogMinus) OTE(TraverseJogOut) ] ,[[XIO(RaiseLowerJogLower) XIC(RaiseLowerJogLowerRise) ,XIC(RaiseLowerJogLower) XIO(RaiseLowerJogLowerRise) XIO(RaiseLowerJogRaiseRise) ] XIC(AxisZ_RaiseLower.LimitNeg) XIO(tbA3JogPlus) OTE(RaiseLowerJogLower) ,[XIO(RaiseLowerJogRaise) XIC(RaiseLowerJogRaiseRise) ,XIC(RaiseLowerJogRaise) XIO(RaiseLowerJogLowerRise) XIO(RaiseLowerJogRaiseRise) ] XIC(AxisZ_RaiseLower.LimitPos) XIO(tbA3JogMinus) OTE(RaiseLowerJogRaise) ] ];
				N: [XIC(GaugeJogIn) NEG(GaugeVelocityJog,AxisX_Gauge.VelocityTarget) ,XIC(GaugeJogOut) MOVE(GaugeVelocityJog,AxisX_Gauge.VelocityTarget) ]OTE(AxisX_Gauge.CommandJog);
				N: XIO(GaugeJogIn)XIO(GaugeJogOut)MOVE(0,AxisX_Gauge.VelocityTarget);
				N: [XIC(TraverseJogIn) NEG(TraverseVelocityJog,AxisY_Traverse.VelocityTarget) ,XIC(TraverseJogOut) MOVE(TraverseVelocityJog,AxisY_Traverse.VelocityTarget) ]OTE(AxisY_Traverse.CommandJog);
				N: XIO(TraverseJogIn)XIO(TraverseJogOut)MOVE(0,AxisY_Traverse.VelocityTarget);
				N: [XIC(RaiseLowerJogLower) NEG(RaiseLowerVelocityJog,AxisZ_RaiseLower.VelocityTarget) ,XIC(RaiseLowerJogRaise) MOVE(RaiseLowerVelocityJog,AxisZ_RaiseLower.VelocityTarget) ]OTE(AxisZ_RaiseLower.CommandJog);
				N: XIO(RaiseLowerJogLower)XIO(RaiseLowerJogRaise)MOVE(0,AxisZ_RaiseLower.VelocityTarget);
				N: [XIC(tbDryBump) NEG(BumpDistanceDry,AxisZ_RaiseLower.PositionTarget) ,XIC(tbWetBump) NEG(BumpDistanceWet,AxisZ_RaiseLower.PositionTarget) ]OTE(AxisZ_RaiseLower.CommandMoveRelative);
		END_ROUTINE

		CHILD_PROGRAMS
		END_CHILD_PROGRAMS

	END_PROGRAM

	PROGRAM Outputs (MAIN := "Outputs",
	                 MODE := 0,
	                 DisableFlag := 0,
	                 UseAsFolder := 0)
		TAG
			iAxis : DINT (RADIX := Decimal) := 3;
			timerSwarfDelay : TIMER  := [-1608641887,1000,1000];
		END_TAG

		ROUTINE Brakes 
				N: XIO(Fault)XIC(AxisX_Gauge.CommandAny)TOF(timerGaugeBrakeDelay,?,?);
				N: XIC(timerGaugeBrakeDelay.DN)OTE(outCr02BrakeGauge);
				N: XIO(Fault)XIC(AxisY_Traverse.CommandAny)TOF(timerTraverseBrakeDelay,?,?);
				N: XIC(timerTraverseBrakeDelay.DN)OTE(outCr01BrakeTraverse);
				N: XIO(Fault)XIC(AxisZ_RaiseLower.CommandAny)TOF(timerRaiseLowerBrakeDelay,?,?);
				N: XIC(timerRaiseLowerBrakeDelay.DN)OTE(outCr03BrakeRaiseLower);
		END_ROUTINE

		ROUTINE Clamps 
				N: [XIC(tbGaugeClamp) ,XIC(outCr06GaugeGripperAdvance) XIO(tbGaugeUnclamp) ]OTE(outCr06GaugeGripperAdvance)OTL(GaugeGripping);
				N: [XIC(tbGaugeUnclamp) ,XIC(outCr07GaugeGripperRetract) XIO(tbGaugeClamp) ]OTE(outCr07GaugeGripperRetract)OTU(GaugeGripping);
				N: [XIC(X_AutoCut) XIO(AxisX_Gauge.InPosition) ,[XIC(tbWorkClamp) ,XIC(outCr04ClampAdvance) ] XIO(tbWorkUnclamp) XIO(X_Homing) XIC(AxisX_Gauge.Stopped) XIO(X_AutoCut) ]OTE(outCr04ClampAdvance)OTL(WorkClamping);
				N: [XIC(tbWorkUnclamp) ,XIC(outCr05ClampRetract) XIO(tbWorkClamp) ]XIO(X_AutoCut)OTE(outCr05ClampRetract)OTU(WorkClamping);
		END_ROUTINE

		ROUTINE Coolant 
				N: XIC(tbMS4CoolantPump)OTE(outMs4Coolant);
				N: XIC(inMS4CoolantPump)TON(timerSwarfDelay,?,?);
				N: [XIC(tbMS5SwarfPump) ,XIC(timerSwarfDelay.DN) ]OTE(outMs5SwarfPump);
				N: XIC(inSR1SafetyRelay)OTE(outMs6SwarfConveyor);
		END_ROUTINE

		ROUTINE Hydraulics 
				N: XIO(HydStop)XIC(HydReady)XIO(BladeChangeDone)[XIC(HydStart) ,XIC(HydRun) ]OTE(HydRun)OTE(outMs1HydrulicPump);
				N: [XIC(tbMS2LoopPump) ,XIC(OilWarm) ,XIC(HydRunning) ]OTE(outMs2LoopPump);
				N: [XIC(tbMS3HydCoolingFan) ,XIC(OilWarm) ]OTE(outMs3HydraulicCoolFan);
		END_ROUTINE

		ROUTINE Outputs 
				RC: "Values from the PLC are passed to the RMC motion controller";
				N: FOR(RMC_Axis,iAxis,0,2,1);
				N: XIC(inGaugeHomeSwitch)OTE(outGaugeHomeSwitch);
				N: XIC(inTraverseHomeSwitch)OTE(outTraverseHomeSwitch);
				N: XIC(inRaiseLowerHomeSwitch)OTE(outRaiseLowerHomeSwitch);
				N: XIC(inLs01OvertravelMnsGauge)OTE(outGaugeOvertravelMinus);
				N: XIC(inLs02OvertravelPlsGauge)OTE(outGaugeOvertravelPlus);
				N: XIC(inLs03OvertravelMnsTraverse)OTE(outTraverseOvertravelMinus);
				N: XIC(inLs04OvertravelPlsTraverse)OTE(outTraverseOvertravelPlus);
				N: XIC(inLs05OvertravelMnsRaiseLower)OTE(outRaiseLowerOvertravelMinus);
				N: XIC(inLs06OvertravelPlsRaiseLower)OTE(outRaiseLowerOvertravelPlus);
				N: JSR(Hydraulics,0);
				N: JSR(Coolant,0);
				N: JSR(Clamps,0);
				N: JSR(Brakes,0);
				N: JSR(Spindle,0);
				N: XIC(tbLaser)OTE(outCrlLaserLight);
				N: JSR(StackLights,0);
		END_ROUTINE

		ROUTINE RMC_Axis 
				N: MOVE(Axis[iAxis].PositionTarget,RMC:O1.Data[iAxis])MOVE(Axis[iAxis].VelocityTarget,RMC:O1.Data[3+iAxis]);
				N: XIC(Axis[iAxis].CommandMove)OTE(RMC:O2.Data[iAxis].0);
				N: XIC(Axis[iAxis].CommandJog)OTE(RMC:O2.Data[iAxis].1);
				N: XIC(Axis[iAxis].CommandStop)OTE(RMC:O2.Data[iAxis].2);
				N: XIC(Axis[iAxis].CommandHome)OTE(RMC:O2.Data[iAxis].3);
				N: XIC(Axis[iAxis].CommandZero)OTE(RMC:O2.Data[iAxis].4);
				N: XIC(Axis[iAxis].CommandClearZero)OTE(RMC:O2.Data[iAxis].5);
				N: XIC(Axis[iAxis].CommandMoveRelative)OTE(RMC:O2.Data[iAxis].6);
		END_ROUTINE

		ROUTINE Spindle 
				N: [XIC(SpinCCWDemand) MOVE(-10000,outAnSpindlePump) ,XIC(SpinCWDemand) MOVE(10000,outAnSpindlePump) ]MUL(RpmTarget,SpindleMotorOutputScale,outAnSpindleMotor);
				N: XIC(SpinDemandFall)[MOVE(0,outAnSpindleMotor) ,MOVE(0,outAnSpindlePump) ];
		END_ROUTINE

		ROUTINE StackLights 
				N: XIC(Auto)OTE(outLtgStackLtGreen);
				N: XIC(inSR1SafetyRelay)OTE(outLtaStackLtAmber);
				N: [XIC(AxisX_Gauge.Enabled) XIO(AxisX_Gauge.InPosition) ,XIC(AxisY_Traverse.Enabled) XIO(AxisY_Traverse.InPosition) ,XIC(AxisZ_RaiseLower.Enabled) XIO(AxisZ_RaiseLower.InPosition) ]OTE(outLtrStackLtRed);
		END_ROUTINE

		CHILD_PROGRAMS
		END_CHILD_PROGRAMS

	END_PROGRAM

	TASK MainTask (Type := CONTINUOUS,
	               Rate := 10,
	               Priority := 10,
	               Watchdog := 500,
	               DisableUpdateOutputs := No,
	               InhibitTask := No)
			Init;
			Inputs;
			MainProgram;
			Outputs;
	END_TASK

CONFIG CST(SystemTimeMasterID := 0) END_CONFIG

CONFIG EthernetNetwork(SupervisorModeEnabled := 0,
	                                 SupervisorPrecedence := 0,
	                                 BeaconInterval := 400,
	                                 BeaconTimeout := 1960,
	                                 VLANID := 0) END_CONFIG

CONFIG EthernetPort1(Label := "1",
	                             PortEnabled := 1) END_CONFIG

CONFIG EthernetPort2(Label := "2",
	                             PortEnabled := 1) END_CONFIG

CONFIG TimeSynchronize(Priority1 := 128,
	                                 Priority2 := 128,
	                                 PTPEnable := 0) END_CONFIG

CONFIG WallClockTime(LocalTimeAdjustment := 0,
	                     TimeZone := 0) END_CONFIG

END_CONTROLLER

