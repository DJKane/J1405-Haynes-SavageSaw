(*********************************************

  Import-Export
  Version   := RSLogix 5000 v37.01
  Owner     := , 
  Exported  := Thu Sep 25 16:51:52 2025

  Note:  File encoded in UTF-8.  Only edit file in a program 
         which supports UTF-8 (like Notepad, not Wordpad).

**********************************************)
IE_VER := 2.28;

CONTROLLER Savage_Saw (ProcessorType := "1769-L19ER-BB1B",
                       Major := 37,
                       TimeSlice := 20,
                       ShareUnusedTimeSlice := 1,
                       CommPath := "AB_ETHIP-1\192.168.3.10",
                       RedundancyEnabled := 0,
                       KeepTestEditsOnSwitchOver := 0,
                       DataTablePadPercentage := 50,
                       SecurityCode := 0,
                       ChangesToDetect := 16#ffff_ffff_ffff_ffff,
                       SFCExecutionControl := "CurrentActive",
                       SFCRestartPosition := "MostRecent",
                       SFCLastScan := "DontScan",
                       SerialNumber := 16#60ff_308e,
                       MatchProjectToController := No,
                       CanUseRPIFromProducer := No,
                       InhibitAutomaticFirmwareUpdate := 0,
                       PassThroughConfiguration := EnabledWithAppend,
                       DownloadProjectDocumentationAndExtendedProperties := Yes,
                       ReportMinorOverflow := 0,
                       DataExchangeId := {A25F4E3F-DFA8-4AF6-9FD5-88C1404291ED})
	DATATYPE AxisData (FamilyType := NoFamily)
		REAL PositionActual;
		REAL PositionTarget;
		REAL VelocityTarget;
		SINT ZZZZZZZZZZAxisData3 (Hidden := 1);
		BIT InPosition ZZZZZZZZZZAxisData3 : 0;
		BIT AtVelocity ZZZZZZZZZZAxisData3 : 1;
		BIT OpenLoop ZZZZZZZZZZAxisData3 : 2;
		BIT FaultInput ZZZZZZZZZZAxisData3 : 3;
		BIT LimitPos ZZZZZZZZZZAxisData3 : 4;
		BIT LimitNeg ZZZZZZZZZZAxisData3 : 5;
		BIT Stopped ZZZZZZZZZZAxisData3 : 6;
		BIT InputEstimated ZZZZZZZZZZAxisData3 : 7;
		SINT ZZZZZZZZZZAxisData12 (Hidden := 1);
		BIT OutputEnabled ZZZZZZZZZZAxisData12 : 0;
		BIT TargetGeneratorDone ZZZZZZZZZZAxisData12 : 1;
		BIT TargetGeneratorStateA ZZZZZZZZZZAxisData12 : 2;
		BIT TargetGeneratorStateB ZZZZZZZZZZAxisData12 : 3;
		BIT DirectOutput ZZZZZZZZZZAxisData12 : 4;
		BIT Enabled ZZZZZZZZZZAxisData12 : 5;
		BIT ExternalHalt ZZZZZZZZZZAxisData12 : 6;
		BIT Halted ZZZZZZZZZZAxisData12 : 7;
		SINT ZZZZZZZZZZAxisData21 (Hidden := 1);
		BIT ForceControlled ZZZZZZZZZZAxisData21 : 0;
		BIT ForceLimitEnabled ZZZZZZZZZZAxisData21 : 1;
		BIT ForceLimited ZZZZZZZZZZAxisData21 : 2;
		BIT AtForce ZZZZZZZZZZAxisData21 : 3;
		BIT ForceInputEstimated ZZZZZZZZZZAxisData21 : 4;
		BIT ForceTargetGeneratorDone ZZZZZZZZZZAxisData21 : 5;
		BIT ForceTargetGeneratorStateA ZZZZZZZZZZAxisData21 : 6;
		BIT ForceTargetGeneratorStateB ZZZZZZZZZZAxisData21 : 7;
		SINT ZZZZZZZZZZAxisData30 (Hidden := 1);
		BIT TargetGeneratorBusy ZZZZZZZZZZAxisData30 : 0;
		BIT ForceTargetGeneratorBusy ZZZZZZZZZZAxisData30 : 1;
		BIT FeedbackOK ZZZZZZZZZZAxisData30 : 2;
		BIT FeedbackOkSecondary ZZZZZZZZZZAxisData30 : 3;
		BIT StateMachineEnabled ZZZZZZZZZZAxisData30 : 4;
		BIT zs29 ZZZZZZZZZZAxisData30 : 5;
		BIT zs30 ZZZZZZZZZZAxisData30 : 6;
		BIT CommandAcknowledged ZZZZZZZZZZAxisData30 : 7;
		SINT ZZZZZZZZZZAxisData39 (Hidden := 1);
		BIT CommandMove ZZZZZZZZZZAxisData39 : 0;
		BIT CommandJog ZZZZZZZZZZAxisData39 : 1;
		BIT Reverse ZZZZZZZZZZAxisData39 : 2;
		BIT CommandStop ZZZZZZZZZZAxisData39 : 3;
		BIT CommandZero ZZZZZZZZZZAxisData39 : 4;
		BIT CommandHome ZZZZZZZZZZAxisData39 : 5;
		BIT CommandMoveRelative ZZZZZZZZZZAxisData39 : 6;
		BIT z07 ZZZZZZZZZZAxisData39 : 7;
		SINT ZZZZZZZZZZAxisData48 (Hidden := 1);
		BIT z08 ZZZZZZZZZZAxisData48 : 0;
		BIT z09 ZZZZZZZZZZAxisData48 : 1;
		BIT z10 ZZZZZZZZZZAxisData48 : 2;
		BIT z11 ZZZZZZZZZZAxisData48 : 3;
		BIT z12 ZZZZZZZZZZAxisData48 : 4;
		BIT z13 ZZZZZZZZZZAxisData48 : 5;
		BIT z14 ZZZZZZZZZZAxisData48 : 6;
		BIT z15 ZZZZZZZZZZAxisData48 : 7;
		SINT ZZZZZZZZZZAxisData57 (Hidden := 1);
		BIT z16 ZZZZZZZZZZAxisData57 : 0;
		BIT z17 ZZZZZZZZZZAxisData57 : 1;
		BIT z18 ZZZZZZZZZZAxisData57 : 2;
		BIT z19 ZZZZZZZZZZAxisData57 : 3;
		BIT z20 ZZZZZZZZZZAxisData57 : 4;
		BIT z21 ZZZZZZZZZZAxisData57 : 5;
		BIT z22 ZZZZZZZZZZAxisData57 : 6;
		BIT z23 ZZZZZZZZZZAxisData57 : 7;
		SINT ZZZZZZZZZZAxisData66 (Hidden := 1);
		BIT z24 ZZZZZZZZZZAxisData66 : 0;
		BIT z25 ZZZZZZZZZZAxisData66 : 1;
		BIT z26 ZZZZZZZZZZAxisData66 : 2;
		BIT z27 ZZZZZZZZZZAxisData66 : 3;
		BIT z28 ZZZZZZZZZZAxisData66 : 4;
		BIT z29 ZZZZZZZZZZAxisData66 : 5;
		BIT z30 ZZZZZZZZZZAxisData66 : 6;
		BIT z31 ZZZZZZZZZZAxisData66 : 7;
		SINT ZZZZZZZZZZAxisData75 (Hidden := 1);
		BIT Homed ZZZZZZZZZZAxisData75 : 0;
		REAL PositionDisplay;
		SINT ZZZZZZZZZZAxisData78 (Hidden := 1);
		BIT MoveComplete ZZZZZZZZZZAxisData78 : 0;
		BIT ClearZero ZZZZZZZZZZAxisData78 : 1;
	END_DATATYPE

	DATATYPE Pass (FamilyType := NoFamily)
		SINT ZZZZZZZZZZPass0 (Hidden := 1);
		BIT WetPass ZZZZZZZZZZPass0 : 0;
		BIT DryPass ZZZZZZZZZZPass0 : 1;
		BIT Measure ZZZZZZZZZZPass0 : 2;
		REAL FeedRate;
		REAL Depth;
		REAL RemainDepth;
		REAL EstimatedDiameter;
		REAL MeasuredDiameter;
		REAL FeedRateActual;
	END_DATATYPE

	MODULE Local (Parent := "Local",
	              ParentModPortId := 1,
	              CatalogNumber := "1769-L19ER-BB1B",
	              Vendor := 1,
	              ProductType := 14,
	              ProductCode := 152,
	              Major := 37,
	              Minor := 11,
	              ChassisSize := 9,
	              Slot := 0,
	              Mode := 2#0000_0000_0000_0001,
	              CompatibleModule := 0,
	              KeyMask := 2#0000_0000_0001_1111)
	END_MODULE

	MODULE Discrete_IO (Parent := "Local",
	                    ParentModPortId := 1,
	                    CatalogNumber := "Embedded",
	                    Vendor := 1,
	                    ProductType := 7,
	                    ProductCode := 1140,
	                    Major := 37,
	                    Minor := 11,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 1,
	                    Mode := 2#0000_0000_0000_0001,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111,
	                    DataExchangeId := {CF7C4065-E2A1-427D-BCF9-D7C207528A94})
			ExtendedProp := [[[___<public><ConfigID>100</ConfigID><CatNum>Embedded</CatNum></public>___]]]
			ConfigData  := [84,113,1,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000
		,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,0,0,0,0,0,0];
			CONNECTION Data (Rate := 20000,
			                 EventID := 0,
			                 Unicast := No)
					InputData  := [0,0];
					OutputData  := [0];
			END_CONNECTION

	END_MODULE

	MODULE Analog0_1 (Parent := "Local",
	                  ParentModPortId := 1,
	                  CatalogNumber := "1734-IE2V/C",
	                  Vendor := 1,
	                  ProductType := 115,
	                  ProductCode := 55,
	                  Major := 3,
	                  Minor := 5,
	                  PortLabel := "RxBACKPLANE",
	                  Slot := 2,
	                  CommMethod := 536870913,
	                  ConfigMethod := 8388609,
	                  Mode := 2#0000_0000_0000_0000,
	                  CompatibleModule := 1,
	                  KeyMask := 2#0000_0000_0001_1111,
	                  DataExchangeId := {2C27A8FF-B2DF-4E28-994D-E539E896B1BD})
			ExtendedProp := [[[___<public><ConfigID>102</ConfigID><CatNum>1734-IE2V</CatNum></public>___]]]
			ConfigData  := [46,123,1,0,10000,0,500,9500,200,9800,2,0,0,0,0,10000,0,500,9500,200,9800,2,0,0,2,100];
			CONNECTION InputData (Rate := 80000,
			                      EventID := 0,
			                      Unicast := No)
					InputData  := [0,0,0,1,1];
			END_CONNECTION

	END_MODULE

	MODULE Analog2_3 (Parent := "Local",
	                  ParentModPortId := 1,
	                  CatalogNumber := "1734-IE2V/C",
	                  Vendor := 1,
	                  ProductType := 115,
	                  ProductCode := 55,
	                  Major := 3,
	                  Minor := 4,
	                  PortLabel := "RxBACKPLANE",
	                  Slot := 3,
	                  CommMethod := 536870913,
	                  ConfigMethod := 8388609,
	                  Mode := 2#0000_0000_0000_0000,
	                  CompatibleModule := 1,
	                  KeyMask := 2#0000_0000_0001_1111,
	                  DataExchangeId := {9F26FB98-27F3-4567-8DB5-91F497A6F565})
			ExtendedProp := [[[___<public><ConfigID>102</ConfigID><CatNum>1734-IE2V</CatNum></public>___]]]
			ConfigData  := [46,123,1,0,10000,0,500,9500,200,9800,2,0,0,0,0,10000,0,500,9500,200,9800,2,0,0,2,100];
			CONNECTION InputData (Rate := 80000,
			                      EventID := 0,
			                      Unicast := No)
					InputData  := [0,0,0,21,21];
			END_CONNECTION

	END_MODULE

	MODULE Analog4_5 (Parent := "Local",
	                  ParentModPortId := 1,
	                  CatalogNumber := "1734-IE2V/C",
	                  Vendor := 1,
	                  ProductType := 115,
	                  ProductCode := 55,
	                  Major := 3,
	                  Minor := 1,
	                  PortLabel := "RxBACKPLANE",
	                  Slot := 4,
	                  CommMethod := 536870913,
	                  ConfigMethod := 8388609,
	                  Mode := 2#0000_0000_0000_0000,
	                  CompatibleModule := 1,
	                  KeyMask := 2#0000_0000_0001_1111,
	                  DataExchangeId := {E1E9289A-316B-4060-B299-2F043344D2A0})
			ExtendedProp := [[[___<public><ConfigID>102</ConfigID><CatNum>1734-IE2V</CatNum></public>___]]]
			ConfigData  := [46,123,1,0,10000,0,500,9500,200,9800,2,0,0,0,0,10000,0,500,9500,200,9800,2,0,0,2,100];
			CONNECTION InputData (Rate := 80000,
			                      EventID := 0,
			                      Unicast := No)
					InputData  := [0,0,0,1,1];
			END_CONNECTION

	END_MODULE

	MODULE SpindleSpeed (Parent := "Local",
	                     ParentModPortId := 1,
	                     CatalogNumber := "1734-OE2V/C",
	                     Vendor := 1,
	                     ProductType := 115,
	                     ProductCode := 56,
	                     Major := 3,
	                     Minor := 5,
	                     PortLabel := "RxBACKPLANE",
	                     Slot := 5,
	                     CommMethod := 536870913,
	                     ConfigMethod := 8388609,
	                     Mode := 2#0000_0000_0000_0000,
	                     CompatibleModule := 1,
	                     KeyMask := 2#0000_0000_0001_1111,
	                     DataExchangeId := {1163C1D6-52A3-40D4-B44A-EE8058645F4F})
			ExtendedProp := [[[___<public><ConfigID>402</ConfigID><CatNum>1734-OE2V</CatNum></public>___]]]
			ConfigData  := [44,123,1,0,0,0,10000,-32768,32767,1,1,1,0,0,0,0,0,0,10000,-32768,32767,1,1,1,0,0,0];
			CONNECTION OutputData (Rate := 50000,
			                       EventID := 0,
			                       Unicast := No)
					InputData  := [0,1,1];
					OutputData  := [0,0];
			END_CONNECTION

	END_MODULE

	MODULE HPU_Outputs (Parent := "Local",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1734-OA4/C",
	                    Vendor := 1,
	                    ProductType := 7,
	                    ProductCode := 290,
	                    Major := 3,
	                    Minor := 22,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 6,
	                    CommMethod := 536870913,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111,
	                    DataExchangeId := {0D1234AA-9D86-42E0-BA90-999F515030A1})
			ExtendedProp := [[[___<public><ConfigID>500</ConfigID><CatNum>1734-OA4</CatNum></public>___]]]
			ConfigData  := [12,103,1,0,0,0,0];
			CONNECTION OutputData (Rate := 20000,
			                       EventID := 0,
			                       Unicast := No)
					InputData  := [0];
					OutputData  := [0];
			END_CONNECTION

	END_MODULE

	MODULE Swarf_Outputs (Parent := "Local",
	                      ParentModPortId := 1,
	                      CatalogNumber := "1734-OA4/C",
	                      Vendor := 1,
	                      ProductType := 7,
	                      ProductCode := 290,
	                      Major := 3,
	                      Minor := 22,
	                      PortLabel := "RxBACKPLANE",
	                      Slot := 7,
	                      CommMethod := 536870913,
	                      Mode := 2#0000_0000_0000_0000,
	                      CompatibleModule := 1,
	                      KeyMask := 2#0000_0000_0001_1111,
	                      DataExchangeId := {A2435AD4-C45D-4F24-A04B-01E899257323})
			ExtendedProp := [[[___<public><ConfigID>500</ConfigID><CatNum>1734-OA4</CatNum></public>___]]]
			ConfigData  := [12,103,1,0,0,0,0];
			CONNECTION OutputData (Rate := 20000,
			                       EventID := 0,
			                       Unicast := No)
					InputData  := [0];
					OutputData  := [0];
			END_CONNECTION

	END_MODULE

	MODULE Light_Outputs (Parent := "Local",
	                      ParentModPortId := 1,
	                      CatalogNumber := "1734-OA4/C",
	                      Vendor := 1,
	                      ProductType := 7,
	                      ProductCode := 290,
	                      Major := 3,
	                      Minor := 22,
	                      PortLabel := "RxBACKPLANE",
	                      Slot := 8,
	                      CommMethod := 536870913,
	                      Mode := 2#0000_0000_0000_0000,
	                      CompatibleModule := 1,
	                      KeyMask := 2#0000_0000_0001_1111,
	                      DataExchangeId := {AEB8AB29-342A-4894-9EB0-CE7481348062})
			ExtendedProp := [[[___<public><ConfigID>500</ConfigID><CatNum>1734-OA4</CatNum></public>___]]]
			ConfigData  := [12,103,1,0,0,0,0];
			CONNECTION OutputData (Rate := 20000,
			                       EventID := 0,
			                       Unicast := No)
					InputData  := [0];
					OutputData  := [0];
			END_CONNECTION

	END_MODULE

	MODULE RemoteHPU (Parent := "Local",
	                  ParentModPortId := 2,
	                  CatalogNumber := "1734-AENTR/C",
	                  Vendor := 1,
	                  ProductType := 12,
	                  ProductCode := 196,
	                  Major := 7,
	                  Minor := 13,
	                  PortLabel := "ENet",
	                  ChassisSize := 6,
	                  Slot := 0,
	                  NodeAddress := "192.168.3.11",
	                  CommMethod := 805306369,
	                  Mode := 2#0000_0000_0000_0000,
	                  CompatibleModule := 1,
	                  KeyMask := 2#0000_0000_0001_1111,
	                  DataExchangeId := {4B119CA4-9A7E-4214-91AD-D48FD9F09E4A})
			ExtendedProp := [[[___<public><ConfigID>262145</ConfigID><CatNum>1734-AENTR</CatNum></public>___]]]
			CONNECTION Output (Rate := 20000,
			                   EventID := 0,
			                   Unicast := Yes)
					InputData  := [-61,-1,[0,0,0,0,15,15]];
					OutputData  := [-61,-1,[0,0,0,0,0,0]];
			END_CONNECTION

	END_MODULE

	MODULE AnalogIn5_6 (Parent := "RemoteHPU",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1734-IE2V/C",
	                    Vendor := 1,
	                    ProductType := 115,
	                    ProductCode := 55,
	                    Major := 3,
	                    Minor := 5,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 1,
	                    CommMethod := 536870913,
	                    ConfigMethod := 8388609,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111,
	                    DataExchangeId := {E4CD1004-C626-4742-8423-90797921D565})
			ExtendedProp := [[[___<public><ConfigID>102</ConfigID><CatNum>1734-IE2V</CatNum></public>___]]]
			ConfigData  := [46,123,1,0,10000,0,500,9500,200,9800,2,0,0,0,0,10000,0,500,9500,200,9800,2,0,0,2,100];
			CONNECTION InputData (Rate := 80000,
			                      EventID := 0,
			                      Unicast := Yes)
					InputData  := [0,10562,10562,-87,-87];
			END_CONNECTION

	END_MODULE

	MODULE InputDC0_8 (Parent := "RemoteHPU",
	                   ParentModPortId := 1,
	                   CatalogNumber := "1734-IB8/C",
	                   Vendor := 1,
	                   ProductType := 7,
	                   ProductCode := 216,
	                   Major := 3,
	                   Minor := 22,
	                   PortLabel := "RxBACKPLANE",
	                   Slot := 2,
	                   CommMethod := 1073741824,
	                   Mode := 2#0000_0000_0000_0000,
	                   CompatibleModule := 1,
	                   KeyMask := 2#0000_0000_0001_1111,
	                   DataExchangeId := {AA5323F8-D4E5-4570-91D8-7B83125B5CCC})
			ExtendedProp := [[[___<public><ConfigID>262147</ConfigID><CatNum>1734-IB8</CatNum></public>___]]]
			ConfigData  := [40,103,1,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000];
			InputAliasComments (RADIX := Binary,
			            DataExchangeId := {38A5D103-83BD-4C64-99D5-FC03F8B82C23});
	END_MODULE

	MODULE InputDC9_15 (Parent := "RemoteHPU",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1734-IB8/C",
	                    Vendor := 1,
	                    ProductType := 7,
	                    ProductCode := 216,
	                    Major := 3,
	                    Minor := 22,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 3,
	                    CommMethod := 1073741824,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111,
	                    DataExchangeId := {EA9B29C5-9551-43F7-817E-55B5B4887432})
			ExtendedProp := [[[___<public><ConfigID>262147</ConfigID><CatNum>1734-IB8</CatNum></public>___]]]
			ConfigData  := [40,103,1,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000,1000];
			InputAliasComments (RADIX := Binary,
			            DataExchangeId := {BE06067D-789E-48A3-AA80-A6C931062639});
	END_MODULE

	MODULE OutputDC0_3 (Parent := "RemoteHPU",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1734-OB4E/C",
	                    Vendor := 1,
	                    ProductType := 7,
	                    ProductCode := 134,
	                    Major := 3,
	                    Minor := 2,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 4,
	                    CommMethod := 1073741824,
	                    ConfigMethod := 8388611,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111,
	                    DataExchangeId := {8F99B989-18A9-4430-99A5-BD8A62FE2AE8})
			ExtendedProp := [[[___<public><ConfigID>262156</ConfigID><CatNum>1734-OB4E</CatNum></public>___]]]
			ConfigData  := [16,123,1,0,0,0,0,15,0,0,0];
			InputAliasComments (RADIX := Binary,
			            DataExchangeId := {81983F69-E514-4BAC-9A9B-795FAEFE1734});
			OutputAliasComments (RADIX := Binary,
			            DataExchangeId := {4EE456A0-64B6-487D-ABF4-3F0C5113AAE6});
	END_MODULE

	MODULE OutputDC4_7 (Parent := "RemoteHPU",
	                    ParentModPortId := 1,
	                    CatalogNumber := "1734-OB4E/C",
	                    Vendor := 1,
	                    ProductType := 7,
	                    ProductCode := 134,
	                    Major := 3,
	                    Minor := 2,
	                    PortLabel := "RxBACKPLANE",
	                    Slot := 5,
	                    CommMethod := 1073741824,
	                    ConfigMethod := 8388611,
	                    Mode := 2#0000_0000_0000_0000,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111,
	                    DataExchangeId := {32FD6558-7441-4C63-9EE8-60F50D927A2F})
			ExtendedProp := [[[___<public><ConfigID>262156</ConfigID><CatNum>1734-OB4E</CatNum></public>___]]]
			ConfigData  := [16,123,1,0,0,0,0,15,0,0,0];
			InputAliasComments (RADIX := Binary,
			            DataExchangeId := {D6939142-04C0-4D56-A564-2FA9066436B4});
			OutputAliasComments (RADIX := Binary,
			            DataExchangeId := {DB11E4A4-AA75-4F14-AA77-A276678CEB35});
	END_MODULE

	MODULE RMC (Parent := "Local",
	            ParentModPortId := 2,
	            CatalogNumber := "R200-CPU20L",
	            Vendor := 590,
	            ProductType := 43,
	            ProductCode := 5,
	            Major := 1,
	            Minor := 1,
	            PortLabel := "ENet",
	            NodeAddress := "192.168.3.12",
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 1,
	            KeyMask := 2#0000_0000_0001_1111,
	            SafetyEnabled := 0,
	            DataExchangeId := {93105D03-E833-4416-87C2-29B876ABE3D4})
			ExtendedProp := [[[___<public><PL>01<Version Name=$Q1.1$Q/><Connection Name=$Q_200424042C022C01$Q Format=$Q4$Q/><Connection Name=$Q_200424042C062C05$Q Format=$Q2$Q/></PL><CatNum>R200-CPU20L</CatNum><DataTypeFormats><DataTypeFormat InstanceApplicationPath=$Q20 04 2c 01 30 03$Q Format=$Q1$Q Type=$QInput$Q/><DataTypeFormat InstanceApplicationPath=$Q20 04 2c 02 30 03$Q Format=$Q1$Q Type=$QOutput$Q/><DataTypeFormat InstanceApplicationPath=$Q20 04 2c 05 30 03$Q Format=$Q1$Q Type=$QInput$Q/><DataTypeFormat InstanceApplicationPath=$Q20 04 2c 06 30 03$Q Format=$Q1$Q Type=$QOutput$Q/></DataTypeFormats></public>___]]]
			CONNECTION _200424042C022C01 (Rate := 20000,
			                              InputSize := 16,
			                              OutputSize := 24,
			                              EventID := 0,
			                              Priority := Scheduled,
			                              InputConnectionType := Unicast,
			                              InputProductionTrigger := Cyclic,
			                              ConnectionPath := "20 04 24 04 2c 02 2c 01",
			                              InputTagSuffix := "I1",
			                              OutputTagSuffix := "O1")
					InputData  := [0,[0.00000000e+000,0.00000000e+000,0.00000000e+000]];
					OutputData  := [[6.95999756e+001,6.95999756e+001,6.95999756e+001,6.95999756e+001,6.95999756e+001,6.95999756e+001
		]];
			END_CONNECTION

			CONNECTION _200424042C062C05 (Rate := 20000,
			                              InputSize := 16,
			                              OutputSize := 16,
			                              EventID := 0,
			                              Priority := Scheduled,
			                              InputConnectionType := Unicast,
			                              InputProductionTrigger := Cyclic,
			                              ConnectionPath := "20 04 24 04 2c 06 2c 05",
			                              InputTagSuffix := "I2",
			                              OutputTagSuffix := "O2")
					InputData  := [0,[0,0,0]];
					OutputData  := [[1116418864,1116418864,1116418864,1116418864]];
			END_CONNECTION

	END_MODULE

	TAG
		Auto : BOOL (RADIX := Decimal) := 0;
		AutoCutCancel : BOOL (RADIX := Decimal) := 0;
		AutoCutCancelFall : BOOL (RADIX := Decimal) := 0;
		AutoCutCancelOSF : BOOL (RADIX := Decimal) := 0;
		AutoCutReq : BOOL (RADIX := Decimal) := 0;
		AutoCutStartONS : BOOL (RADIX := Decimal) := 0;
		AutoCutStateChange : BOOL (RADIX := Decimal) := 0;
		AutoSpinCCW : BOOL (RADIX := Decimal) := 0;
		AutoSpinCW : BOOL (RADIX := Decimal) := 0;
		Axis : AxisData[3]  := [[0.00000000e+000,0.00000000e+000,0.00000000e+000,48,51,-117,66,0,0,0,0,0,0.00000000e+000,0],[1.50547149e-036
				,0.00000000e+000,0.00000000e+000,-116,108,23,66,0,0,0,0,0,0.00000000e+000,0],[1.50547149e-036,0.00000000e+000
				,0.00000000e+000,0,0,0,-128,0,0,0,0,0,0.00000000e+000,0]];
		AxisX_Gauge OF Axis[0] ;
		AxisY_Traverse OF Axis[1] ;
		AxisZ_RaiseLower OF Axis[2] ;
		BladeChange10 : BOOL (RADIX := Decimal) := 0;
		BladeChange10s : BOOL (RADIX := Decimal) := 0;
		BladeChange20 : BOOL (RADIX := Decimal) := 0;
		BladeChangeDone : BOOL (RADIX := Decimal) := 0;
		BladeChangeStartONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure10ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure10StopAll : BOOL (RADIX := Decimal) := 0;
		BladeMeasure15ClearZero : BOOL (RADIX := Decimal) := 0;
		BladeMeasure20ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure20Retract : BOOL (RADIX := Decimal) := 0;
		BladeMeasure30ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure30Traverse : BOOL (RADIX := Decimal) := 0;
		BladeMeasure40Lower : BOOL (RADIX := Decimal) := 0;
		BladeMeasure40ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure50ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure50Stop : BOOL (RADIX := Decimal) := 0;
		BladeMeasure55ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure55Raise : BOOL (RADIX := Decimal) := 0;
		BladeMeasure60ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure60Stop : BOOL (RADIX := Decimal) := 0;
		BladeMeasure65Measure : BOOL (RADIX := Decimal) := 0;
		BladeMeasure65ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure70Calc : BOOL (RADIX := Decimal) := 0;
		BladeMeasure70ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure75ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure75PartRef : BOOL (RADIX := Decimal) := 0;
		BladeMeasure80ONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasure80Return : BOOL (RADIX := Decimal) := 0;
		BladeMeasureStartONS : BOOL (RADIX := Decimal) := 0;
		BladeMeasureStateChange : BOOL (RADIX := Decimal) := 0;
		BladeRadius : REAL (RADIX := Float) := 0.00000000e+000;
		BladeRadiusKnown : BOOL (RADIX := Decimal) := 0;
		BuildCount : DINT (RADIX := Decimal) := 0;
		BuildDone : BOOL (RADIX := Decimal) := 0;
		BumpDistance : REAL (RADIX := Float) := 0.00000000e+000;
		BumpDistanceDry : REAL (RADIX := Float) := 0.00000000e+000;
		BumpDistanceWet : REAL (RADIX := Float) := 0.00000000e+000;
		ClampPressure : REAL (RADIX := Float) := 0.00000000e+000;
		CutEndPosition : REAL (RADIX := Float) := 0.00000000e+000;
		CutForward : BOOL (RADIX := Decimal) := 0;
		CutOnReturn : BOOL (RADIX := Decimal) := 0;
		CutStartPosition : REAL (RADIX := Float) := 0.00000000e+000;
		DryCutDepth : REAL (RADIX := Float) := 0.00000000e+000;
		DryCutSpeed : REAL (RADIX := Float) := 0.00000000e+000;
		DryPasses : DINT (RADIX := Decimal) := 0;
		Fault : BOOL (RADIX := Decimal) := 0;
		FaultOSR : BOOL (RADIX := Decimal) := 0;
		FaultRise : BOOL (RADIX := Decimal) := 0;
		GaugePotScale : REAL (RADIX := Float) := 0.00000000e+000;
		GaugeVelocityHome : REAL (RADIX := Float) := 0.00000000e+000;
		GaugeVelocityJogMax : REAL (RADIX := Float) := 0.00000000e+000;
		GaugeVelocityMax : REAL (RADIX := Float) := 0.00000000e+000;
		hmiFaultMessageNumber : DINT (RADIX := Decimal) := 0;
		HorsepowerActual : REAL (RADIX := Float) := 0.00000000e+000;
		HorsepowerScale : REAL (RADIX := Float) := 0.00000000e+000;
		HorsepowerTarget : REAL (RADIX := Float) := 0.00000000e+000;
		HPUReadyToRun : BOOL (RADIX := Decimal) := 0;
		HydReady : BOOL (RADIX := Decimal) := 0;
		HydRun : BOOL (RADIX := Decimal) := 0;
		HydRunning : BOOL (RADIX := Decimal) := 0;
		HydStart : BOOL (RADIX := Decimal) := 0;
		HydStop : BOOL (RADIX := Decimal) := 0;
		inAnClampPressure OF RemoteHPU:1:I.Ch0Data (RADIX := Decimal,
		            DataExchangeId := {003C239D-FB89-4659-947A-C4F082A6B254});
		InAnPotGauge OF Local:3:I.Ch1Data (RADIX := Decimal,
		            DataExchangeId := {6483E1D4-B5F7-4793-9AC9-A8D6B481AC99});
		inAnPotRaiseLower OF Local:2:I.Ch1Data (RADIX := Decimal,
		            DataExchangeId := {D2C70B29-7D70-4834-BDCD-499B5E8B2B3B});
		inAnPotTraverse OF Local:3:I.Ch0Data (RADIX := Decimal,
		            DataExchangeId := {0ED68D47-1F63-40A5-A1CA-B9DEA14FA815});
		inAnServoPressure OF RemoteHPU:1:I.Ch1Data (RADIX := Decimal,
		            DataExchangeId := {B453AD23-D99C-4863-9341-037902C2D0F9});
		inAnSpindleSideA OF Local:4:I.Ch0Data (RADIX := Decimal,
		            DataExchangeId := {940C8831-7972-4A50-92AA-F2C60168B413});
		inAnSpindlesideB OF Local:4:I.Ch1Data (RADIX := Decimal,
		            DataExchangeId := {F1646682-5521-4D4D-964A-7D9F351AAD51});
		inAnSpindleSpeed OF Local:2:I.Ch0Data (RADIX := Decimal,
		            DataExchangeId := {8E33B023-33CA-48B6-A82E-C4F1E161756C});
		inFl01OilLevelWarning OF RemoteHPU:3:I.0 (RADIX := Decimal,
		            DataExchangeId := {D119FB35-0A9F-4FC6-8D38-F3BBEE64CD23});
		inFl02OilLevelShutdownAlarm OF RemoteHPU:3:I.2 (RADIX := Decimal,
		            DataExchangeId := {8AED894B-25A5-41C0-BDF7-88F9A90A57DF});
		inLs01OvertravelMnsGauge OF Local:1:I.Data.8 (RADIX := Decimal,
		            DataExchangeId := {23DB750C-2834-49A4-9007-D6E6B58F994E});
		inLs02OvertravelPlsGauge OF Local:1:I.Data.9 (RADIX := Decimal,
		            DataExchangeId := {BD338B61-9C84-419D-B5B7-B84A88205D2C});
		inLs03OvertravelMnsTraverse OF Local:1:I.Data.10 (RADIX := Decimal,
		            DataExchangeId := {2AA226E4-8B73-4380-9CD0-E61EB37BE104});
		inLs04OvertravelPlsTraverse OF Local:1:I.Data.11 (RADIX := Decimal,
		            DataExchangeId := {50F7320B-121C-4E7F-B5A9-9F78B57F92CE});
		inLs05OvertravelMnsRaiseLower OF Local:1:I.Data.12 (RADIX := Decimal,
		            DataExchangeId := {092BD230-6C92-4440-9A71-A50537BFF3F5});
		inLs06OvertravelPlsRaiseLower OF Local:1:I.Data.13 (RADIX := Decimal,
		            DataExchangeId := {8A24222D-FF7B-4295-85A5-923DADC7B362});
		inLs07BladeGuard OF Local:1:I.Data.14 (RADIX := Decimal,
		            DataExchangeId := {5A40C5D3-6B39-45E9-83B5-657FE718E71C});
		inMS1HydraulicPump OF Local:1:I.Data.1 (RADIX := Decimal,
		            DataExchangeId := {6C86BD59-F781-43D9-B727-371529CBF264});
		inMS2HydraulicLoopPump OF Local:1:I.Data.2 (RADIX := Decimal,
		            DataExchangeId := {67F39228-C630-459B-83B1-B389AE83581C});
		inMS3HydCoolingFan OF Local:1:I.Data.3 (RADIX := Decimal,
		            DataExchangeId := {B2D90655-5078-4DEE-9571-3726ADEAACB8});
		inMS4CoolantPump OF Local:1:I.Data.4 (RADIX := Decimal,
		            DataExchangeId := {BD7DDFB4-0BFD-4C85-B77F-03612D4C66E6});
		inMS5SwarfPump OF Local:1:I.Data.5 (RADIX := Decimal,
		            DataExchangeId := {29918BC3-0C07-4EE1-A1EA-F3FB6B37A62B});
		inMS6SwarfConveyor OF Local:1:I.Data.6 (RADIX := Decimal,
		            DataExchangeId := {1EECB47E-CD47-4098-99A4-899DB001DE68});
		inPe01BladeDetect OF Local:1:I.Data.7 (RADIX := Decimal,
		            DataExchangeId := {EC5E05B8-5C7A-4153-971A-DB2574EC8DD7});
		inPs01LoopFilterDirty OF RemoteHPU:2:I.5 (RADIX := Decimal,
		            DataExchangeId := {CFD7002E-253B-4E6F-B64B-0340319CED41});
		inPs02PressureFilterDirty OF RemoteHPU:2:I.6 (RADIX := Decimal,
		            DataExchangeId := {4D6DA4B0-7727-40A3-A6BE-EDB1EA84E601});
		inPs03MotorCaseDrain OF RemoteHPU:2:I.7 (RADIX := Decimal,
		            DataExchangeId := {8F6924E2-F441-4510-B763-1967247CB8DE});
		inPs04SwarfFilterDirty OF Local:1:I.Data.15 (RADIX := Decimal,
		            DataExchangeId := {095BF4DB-E430-498A-A41C-9D828FC328F0});
		inPx01Pump1Inlet OF RemoteHPU:2:I.0 (RADIX := Decimal,
		            DataExchangeId := {1883E068-E3EC-4E9E-A781-416F524A6211});
		inPx02Pump2Inlet OF RemoteHPU:2:I.1 (RADIX := Decimal,
		            DataExchangeId := {B16F5428-5144-426C-96CE-9660B1E67441});
		InPx03PumpAA4Inlet OF RemoteHPU:2:I.2 (RADIX := Decimal,
		            DataExchangeId := {7122D2A6-37B2-4F4E-B889-96EBC2BA52FC});
		inPx04LoopInlet OF RemoteHPU:2:I.3 (RADIX := Decimal,
		            DataExchangeId := {78E2A389-010A-4782-B58F-9B91C8B35177});
		inPx05DrainValve OF RemoteHPU:2:I.4 (RADIX := Decimal,
		            DataExchangeId := {8D82C4AF-945F-49B4-91FD-520427DFA1EA});
		inSpare746 OF RemoteHPU:3:I.4 (RADIX := Decimal,
		            DataExchangeId := {058BAC4A-B391-4D87-933D-6CBA7311FD83});
		inSpare747 OF RemoteHPU:3:I.5 (RADIX := Decimal,
		            DataExchangeId := {4CAF891C-DF48-45BF-8E21-74A5A5315BF6});
		inSR1SafetyRelay OF Local:1:I.Data.0 (RADIX := Decimal,
		            DataExchangeId := {366AB894-C128-431F-852B-63397D83BF32});
		inTs01OilTempWarning OF RemoteHPU:3:I.1 (RADIX := Decimal,
		            DataExchangeId := {B6D1767F-39E7-44B6-9ABB-A618F4C4FD12});
		inTs02OilTempShutdownAlarm OF RemoteHPU:3:I.3 (RADIX := Decimal,
		            DataExchangeId := {75474803-0AE0-4D3F-917E-2EFDCC08AD1B});
		LastCutDepth : REAL (RADIX := Float) := 0.00000000e+000;
		LastCutSpeed : REAL (RADIX := Float) := 0.00000000e+000;
		MC_Enable : BOOL (RADIX := Decimal) := 0;
		MC_Reset : BOOL (RADIX := Decimal) := 0;
		NorthZero : BOOL (RADIX := Decimal) := 0;
		OilWarm : BOOL (RADIX := Decimal) := 0;
		outAnSpindleMotor OF Local:5:O.Ch0Data (RADIX := Decimal,
		            DataExchangeId := {2845F938-5F59-4D05-8D91-5DADBDA4E89B});
		outAnSpindlePump OF Local:5:O.Ch0Data (RADIX := Decimal,
		            DataExchangeId := {207287F1-9CCB-4AF0-A890-574CFB0AAAE9});
		outCr01BrakeTraverse OF RemoteHPU:4:O.0 (RADIX := Decimal,
		            DataExchangeId := {954ACF84-7630-486C-B48A-07B4F1A0F9CC});
		outCr02BrakeGauge OF RemoteHPU:4:O.1 (RADIX := Decimal,
		            DataExchangeId := {9EBD6815-9069-456C-91B3-36D2D4E0879F});
		outCr03BrakeRaiseLower OF RemoteHPU:4:O.2 (RADIX := Decimal,
		            DataExchangeId := {0B4838BA-DDDB-4401-A9CF-17FA78FE5A9F});
		outCr04ClampAdvance OF RemoteHPU:5:O.0 (RADIX := Decimal,
		            DataExchangeId := {7CE4C5F9-6D0F-46AD-AF54-6791AC7E9FD9});
		outCr05GageGripperAdvance OF RemoteHPU:5:O.1 (RADIX := Decimal,
		            DataExchangeId := {93B80833-BC00-4B4D-8A95-171FE9DD01FF});
		outCrlLaserLight OF Local:8:O.Data.0 (RADIX := Decimal,
		            DataExchangeId := {1343B655-DEEE-4B02-A49B-CDC8C3B3FF9C});
		outLtaStackLtAmber OF Local:8:O.Data.2 (RADIX := Decimal,
		            DataExchangeId := {CB102B36-860B-4692-8A90-30AE4E190843});
		outLtgStackLtGreen OF Local:8:O.Data.1 (RADIX := Decimal,
		            DataExchangeId := {76E1D6C9-3CF3-43B3-AFAE-ED875DFF164C});
		outLtrStackLtRed OF Local:8:O.Data.3 (RADIX := Decimal,
		            DataExchangeId := {793F0E93-6D4E-48EF-9CB6-6EE3B6CA2AB4});
		outMs1HydrulicPump OF Local:6:O.Data.0 (RADIX := Decimal,
		            DataExchangeId := {CFB4B123-0744-41EF-A043-AACE8C3111B1});
		outMs2LoopPump OF Local:6:O.Data.1 (RADIX := Decimal,
		            DataExchangeId := {90A40B14-CC38-4E57-AF7E-458FBFB9D564});
		outMs3HydraulicCoolFan OF Local:6:O.Data.2 (RADIX := Decimal,
		            DataExchangeId := {30A373A6-1724-432B-8077-068E35BE4351});
		outMs4Coolant OF Local:6:O.Data.3 (RADIX := Decimal,
		            DataExchangeId := {73CD2312-D22A-4844-9987-5797BDE3B028});
		outMs5SwarfPump OF Local:7:O.Data.0 (RADIX := Decimal,
		            DataExchangeId := {E7B61F77-7192-4CCD-8C97-4BE54925138C});
		outMs6SwarfConveyor OF Local:6:O.Data.1 (RADIX := Decimal,
		            DataExchangeId := {5351B322-DCDD-4212-915C-230121D4CAE7});
		outSpare632 OF Local:7:O.Data.2 (RADIX := Decimal,
		            DataExchangeId := {6D7A1941-DDC6-42E2-9730-2F6EF5F56725});
		outSpare633 OF Local:7:O.Data.3 (RADIX := Decimal,
		            DataExchangeId := {09CFCA69-26F8-4BF5-BD93-79ACF54D0289});
		outSpare806 OF RemoteHPU:4:O.3 (RADIX := Decimal,
		            DataExchangeId := {66EF03AC-9884-43DA-8224-63043E054007});
		outSpare817 OF RemoteHPU:5:O.2 (RADIX := Decimal,
		            DataExchangeId := {FEF8EE23-6EB6-4153-9D4E-8F57D1F5E072});
		outSpare818 OF RemoteHPU:5:O.3 (RADIX := Decimal,
		            DataExchangeId := {28F1C8AB-49A7-4B2B-A89C-7E913EC12602});
		Pass : Pass[21]  := [[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				],[0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				]];
		PastPart : REAL (RADIX := Float) := 0.00000000e+000;
		Pi : REAL (RADIX := Float,
		            Constant := Yes) := 3.14159274e+000;
		RaiseLowerPotScale : REAL (RADIX := Float) := 0.00000000e+000;
		RaiseLowerVelocityHome : REAL (RADIX := Float) := 0.00000000e+000;
		RaiseLowerVelocityJogMax : REAL (RADIX := Float) := 0.00000000e+000;
		RaiseLowerVelocityMax : REAL (RADIX := Float) := 0.00000000e+000;
		RemainDepth : REAL (RADIX := Float) := 0.00000000e+000;
		RpmTarget : REAL (RADIX := Float) := 0.00000000e+000;
		RpmTarget105Pct : REAL (RADIX := Float) := 0.00000000e+000;
		SafetyRelayAutoReset : BOOL (RADIX := Decimal) := 0;
		ServoPressure : REAL (RADIX := Float) := 0.00000000e+000;
		SFPM : REAL (RADIX := Float) := 0.00000000e+000;
		SpinCCWActive : BOOL (RADIX := Decimal) := 0;
		SpinCCWDemand : BOOL (RADIX := Decimal) := 0;
		SpinCWActive : BOOL (RADIX := Decimal) := 0;
		SpinCWDemand : BOOL (RADIX := Decimal) := 0;
		SpinDemandFall : BOOL (RADIX := Decimal) := 0;
		SpindleMotorOutputScale : REAL (RADIX := Float) := 0.00000000e+000;
		SpindlePressure : REAL (RADIX := Float) := 0.00000000e+000;
		SpindlePressureCCW : REAL (RADIX := Float) := 0.00000000e+000;
		SpindlePressureCW : REAL (RADIX := Float) := 0.00000000e+000;
		SpindlePressureDisplay : REAL (RADIX := Float) := 0.00000000e+000;
		SpindlePressureScale : REAL (RADIX := Float) := 0.00000000e+000;
		SpindlePressureTarget : REAL (RADIX := Float) := 0.00000000e+000;
		SpindleRPM : REAL (RADIX := Float) := 0.00000000e+000;
		SpindleRPMAtTarget : BOOL (RADIX := Decimal) := 0;
		SpindleRPMError : REAL (RADIX := Float) := 0.00000000e+000;
		SpindleRPMGate : REAL (RADIX := Float) := 0.00000000e+000;
		SpindleStall : BOOL (RADIX := Decimal) := 0;
		SpindleStallPressure : REAL (RADIX := Float) := 0.00000000e+000;
		SpindleStallRPM : REAL (RADIX := Float) := 0.00000000e+000;
		State : DINT (RADIX := Decimal) := 0;
		State200Build : BOOL (RADIX := Decimal) := 0;
		State200ONS : BOOL (RADIX := Decimal) := 0;
		State205 : BOOL (RADIX := Decimal) := 0;
		State205ONS : BOOL (RADIX := Decimal) := 0;
		State207ONS : BOOL (RADIX := Decimal) := 0;
		State207TraverseInitial : BOOL (RADIX := Decimal) := 0;
		State210Direction : BOOL (RADIX := Decimal) := 0;
		State210ONS : BOOL (RADIX := Decimal) := 0;
		State220ONS : BOOL (RADIX := Decimal) := 0;
		State220TraverseToStart : BOOL (RADIX := Decimal) := 0;
		State230StartSaw : BOOL (RADIX := Decimal) := 0;
		State240 : BOOL (RADIX := Decimal) := 0;
		State240ONS : BOOL (RADIX := Decimal) := 0;
		State250CheckRPM : BOOL (RADIX := Decimal) := 0;
		State250ONS : BOOL (RADIX := Decimal) := 0;
		State260Cut : BOOL (RADIX := Decimal) := 0;
		State260ONS : BOOL (RADIX := Decimal) := 0;
		State280 : BOOL (RADIX := Decimal) := 0;
		State280ONS : BOOL (RADIX := Decimal) := 0;
		State285BladeMeasure : BOOL (RADIX := Decimal) := 0;
		State290ONS : BOOL (RADIX := Decimal) := 0;
		State290RaiseBlade : BOOL (RADIX := Decimal) := 0;
		State299 : BOOL (RADIX := Decimal) := 0;
		StepCount : DINT (RADIX := Decimal) := 0;
		tbA1JogIn : BOOL (RADIX := Decimal) := 0;
		tbA1JogOut : BOOL (RADIX := Decimal) := 0;
		tbA2JogMinus : BOOL (RADIX := Decimal) := 0;
		tbA2JogPlus : BOOL (RADIX := Decimal) := 0;
		tbA3JogMinus : BOOL (RADIX := Decimal) := 0;
		tbA3JogPlus : BOOL (RADIX := Decimal) := 0;
		tbAutoCut : BOOL (RADIX := Decimal) := 0;
		tbAutoCutONS : BOOL (RADIX := Decimal) := 0;
		tbAutoGauge : BOOL (RADIX := Decimal) := 0;
		tbAutoWet : BOOL (RADIX := Decimal) := 0;
		tbBladeChange : BOOL (RADIX := Decimal) := 0;
		tbBladeCompensation : BOOL (RADIX := Decimal) := 0;
		tbBladeMeasure : BOOL (RADIX := Decimal) := 0;
		tbCCW : BOOL (RADIX := Decimal) := 0;
		tbCoolant : BOOL (RADIX := Decimal) := 0;
		tbCW : BOOL (RADIX := Decimal) := 0;
		tbDryBump : BOOL (RADIX := Decimal) := 0;
		tbGaugeClamp : BOOL (RADIX := Decimal) := 0;
		tbGaugeUnclamp : BOOL (RADIX := Decimal) := 0;
		tbHome : BOOL (RADIX := Decimal) := 0;
		tbLaser : BOOL (RADIX := Decimal) := 0;
		tbMS1HydPump : BOOL (RADIX := Decimal) := 0;
		tbMS2LoopPump : BOOL (RADIX := Decimal) := 0;
		tbMS3HydCoolingFan : BOOL (RADIX := Decimal) := 0;
		tbMS4CoolantPump : BOOL (RADIX := Decimal) := 0;
		tbMS5SwarfPump : BOOL (RADIX := Decimal) := 0;
		tbMS6SwarfConveyor : BOOL (RADIX := Decimal) := 0;
		tbNorthRef : BOOL (RADIX := Decimal) := 0;
		tbOnOff : BOOL (RADIX := Decimal) := 0;
		tbPlateMeasure : BOOL (RADIX := Decimal) := 0;
		tbSouthRef : BOOL (RADIX := Decimal) := 0;
		tbWetBump : BOOL (RADIX := Decimal) := 0;
		tbWorkClamp : BOOL (RADIX := Decimal) := 0;
		tbWorkUnclamp : BOOL (RADIX := Decimal) := 0;
		tbZeroGauge : BOOL (RADIX := Decimal) := 0;
		Thickness : REAL (RADIX := Float) := 0.00000000e+000;
		timerAxisZ_RaiseLowerClearZero : TIMER  := [0,1000,0];
		timerGaugeBrakeDelay : TIMER  := [0,2000,0];
		timerRaiseLowerBrakeDelay : TIMER  := [0,2000,0];
		timerSpindleStall : TIMER  := [0,3000,0];
		timerState250CheckRPM : TIMER  := [0,0,0];
		timerTraverseBrakeDelay : TIMER  := [0,2000,0];
		TraversePotScale : REAL (RADIX := Float) := 0.00000000e+000;
		TraverseRange : REAL (RADIX := Float) := 0.00000000e+000;
		TraverseVelocityHome : REAL (RADIX := Float) := 0.00000000e+000;
		TraverseVelocityJogMax : REAL (RADIX := Float) := 0.00000000e+000;
		TraverseVelocityMax : REAL (RADIX := Float) := 0.00000000e+000;
		ValidData : BOOL (RADIX := Decimal) := 0;
		WetCutDepth : REAL (RADIX := Float) := 0.00000000e+000;
		WetCutSpeed : REAL (RADIX := Float) := 0.00000000e+000;
		WetPasses : DINT (RADIX := Decimal) := 0;
		Width : REAL (RADIX := Float) := 0.00000000e+000;
		X_AutoCut : BOOL (RADIX := Decimal) := 0;
		X_BladeChange : BOOL (RADIX := Decimal) := 0;
		X_BladeMeasure : BOOL (RADIX := Decimal) := 0;
		X_Fault : BOOL (RADIX := Decimal) := 0;
		X_Homing : BOOL (RADIX := Decimal) := 0;
		X_Manual : BOOL (RADIX := Decimal) := 0;
		X_Off : BOOL (RADIX := Decimal) := 0;
		X_State : DINT (RADIX := Decimal) := 0;
	END_TAG

	PROGRAM Init (MAIN := "Init",
	              MODE := 0,
	              DisableFlag := 0,
	              UseAsFolder := 0)
		TAG
			Initialized : BOOL (RADIX := Decimal) := 0;
		END_TAG

		ROUTINE Init 
				N: XIO(Initialized)[MOVE(128.0,TraverseRange) MOVE(6.0,PastPart) ,DIV(14.7,2,SpindlePressureScale) CPT(HorsepowerScale,2 * (160.0 / 328.0) / 14.7) ,CPT(SpindleStallPressure,200.0 / 14.7) CPT(SpindleStallRPM,100.0) MOVE(100.0,SpindleRPMGate) ,MOVE(16.667,GaugeVelocityMax) MOVE(16.667,TraverseVelocityMax) MOVE(1.0,RaiseLowerVelocityMax) ,MOVE(1.667,GaugeVelocityHome) MOVE(0.8333,TraverseVelocityHome) MOVE(0.333,RaiseLowerVelocityHome) ,MOVE(8.333,GaugeVelocityJogMax) MOVE(8.333,TraverseVelocityJogMax) MOVE(0.5,RaiseLowerVelocityJogMax) ,CPT(GaugePotScale,1.0 / 4095.0) CPT(TraversePotScale,1.0 / 4095.0) CPT(RaiseLowerPotScale,1.0 / 4095.0) ,MOVE(200.0,DryCutSpeed) MOVE(0.030,DryCutDepth) ]OTL(Initialized);
		END_ROUTINE

		CHILD_PROGRAMS
		END_CHILD_PROGRAMS

	END_PROGRAM

	PROGRAM Inputs (MAIN := "Inputs",
	                MODE := 0,
	                DisableFlag := 0,
	                UseAsFolder := 0)
		TAG
			iAxis : DINT (RADIX := Decimal) := 0;
		END_TAG

		ROUTINE Inputs 
				N: JSR(Spindle,0);
				N: JSR(RMC,0);
				N: CPT(ServoPressure,(inAnServoPressure - 205) * 2000.0 / 4095.0)LT(ServoPressure,0.0)MOVE(0,ServoPressure);
				N: CPT(ClampPressure,(inAnClampPressure - 205) * 2000.0 / 4095.0)LT(ClampPressure,0.0)MOVE(0,ClampPressure);
		END_ROUTINE

		ROUTINE RMC 
				N: FOR(S_RMC_Axis,iAxis,0,2,1);
				N: XIC(inLs01OvertravelMnsGauge)OTE(AxisX_Gauge.LimitNeg);
				N: XIC(inLs02OvertravelPlsGauge)OTE(AxisX_Gauge.LimitPos);
				N: XIC(inLs03OvertravelMnsTraverse)OTE(AxisY_Traverse.LimitNeg);
				N: XIC(inLs04OvertravelPlsTraverse)OTE(AxisY_Traverse.LimitPos);
				N: XIC(inLs05OvertravelMnsRaiseLower)OTE(AxisZ_RaiseLower.LimitNeg);
				N: XIC(inLs06OvertravelPlsRaiseLower)OTE(AxisZ_RaiseLower.LimitPos);
		END_ROUTINE

		ROUTINE Spindle 
				N: CPT(SpindlePressureCW,(inAnSpindleSideA - 205) * 510.0 / 4095.0)LT(SpindlePressureCW,0.0)MOVE(0,SpindlePressureCW);
				N: CPT(SpindlePressureCCW,(inAnSpindlesideB - 205) * 510.0 / 4095.0)LT(SpindlePressureCCW,0.0)MOVE(0,SpindlePressureCCW);
				N: [XIC(SpinCWActive) MOVE(SpindlePressureCW,SpindlePressure) ,XIC(SpinCCWActive) MOVE(SpindlePressureCCW,SpindlePressure) ,XIO(SpinCWActive) XIO(SpinCCWActive) MOVE(0,SpindlePressure) ];
				N: MUL(SpindlePressure,SpindlePressureScale,SpindlePressureDisplay);
				RC: "Shouldn$'t Horsepower calculation need to take RPM into account?";
				N: CPT(HorsepowerActual,(SpindlePressureCW - SpindlePressureCCW) * HorsepowerScale)ABS(HorsepowerActual,HorsepowerActual);
				N: CPT(SpindleRPM,inAnSpindleSpeed * 2100.0 / 4096.0)LT(SpindleRPM,SpindleRPMGate)MOVE(0,SpindleRPM);
		END_ROUTINE

		ROUTINE S_RMC_Axis 
				N: MOVE(RMC:I1.Data[iAxis],Axis[iAxis].PositionActual);
				N: XIC(RMC:I2.Data[iAxis].0)OTE(Axis[iAxis].InPosition);
				N: XIC(RMC:I2.Data[iAxis].1)OTE(Axis[iAxis].AtVelocity);
				N: XIC(RMC:I2.Data[iAxis].2)OTE(Axis[iAxis].OpenLoop);
				N: XIC(RMC:I2.Data[iAxis].3)OTE(Axis[iAxis].FaultInput);
				N: XIC(RMC:I2.Data[iAxis].4)OTE(Axis[iAxis].LimitPos);
				N: XIC(RMC:I2.Data[iAxis].5)OTE(Axis[iAxis].LimitNeg);
				N: XIC(RMC:I2.Data[iAxis].6)OTE(Axis[iAxis].Stopped);
				N: XIC(RMC:I2.Data[iAxis].7)OTE(Axis[iAxis].InputEstimated);
				N: XIC(RMC:I2.Data[iAxis].8)OTE(Axis[iAxis].OutputEnabled);
				N: XIC(RMC:I2.Data[iAxis].9)OTE(Axis[iAxis].TargetGeneratorDone);
				N: XIC(RMC:I2.Data[iAxis].10)OTE(Axis[iAxis].TargetGeneratorStateA);
				N: XIC(RMC:I2.Data[iAxis].11)OTE(Axis[iAxis].TargetGeneratorStateB);
				N: XIC(RMC:I2.Data[iAxis].12)OTE(Axis[iAxis].DirectOutput);
				N: XIC(RMC:I2.Data[iAxis].13)OTE(Axis[iAxis].Enabled);
				N: XIC(RMC:I2.Data[iAxis].14)OTE(Axis[iAxis].ExternalHalt);
				N: XIC(RMC:I2.Data[iAxis].15)OTE(Axis[iAxis].Halted);
				N: XIC(RMC:I2.Data[iAxis].16)OTE(Axis[iAxis].ForceControlled);
				N: XIC(RMC:I2.Data[iAxis].17)OTE(Axis[iAxis].ForceLimitEnabled);
				N: XIC(RMC:I2.Data[iAxis].18)OTE(Axis[iAxis].ForceLimited);
				N: XIC(RMC:I2.Data[iAxis].19)OTE(Axis[iAxis].AtForce);
				N: XIC(RMC:I2.Data[iAxis].20)OTE(Axis[iAxis].ForceInputEstimated);
				N: XIC(RMC:I2.Data[iAxis].21)OTE(Axis[iAxis].ForceTargetGeneratorDone);
				N: XIC(RMC:I2.Data[iAxis].22)OTE(Axis[iAxis].ForceTargetGeneratorStateA);
				N: XIC(RMC:I2.Data[iAxis].23)OTE(Axis[iAxis].ForceTargetGeneratorStateB);
				N: XIC(RMC:I2.Data[iAxis].24)OTE(Axis[iAxis].TargetGeneratorBusy);
				N: XIC(RMC:I2.Data[iAxis].25)OTE(Axis[iAxis].ForceTargetGeneratorBusy);
				N: XIC(RMC:I2.Data[iAxis].26)OTE(Axis[iAxis].FeedbackOK);
				N: XIC(RMC:I2.Data[iAxis].27)OTE(Axis[iAxis].FeedbackOkSecondary);
				N: XIC(RMC:I2.Data[iAxis].28)OTE(Axis[iAxis].StateMachineEnabled);
				N: XIC(RMC:I2.Data[iAxis].29)OTE(Axis[iAxis].zs29);
				N: XIC(RMC:I2.Data[iAxis].30)OTE(Axis[iAxis].zs30);
				N: XIC(RMC:I2.Data[iAxis].31)OTE(Axis[iAxis].CommandAcknowledged);
		END_ROUTINE

		CHILD_PROGRAMS
		END_CHILD_PROGRAMS

	END_PROGRAM

	PROGRAM MainProgram (MAIN := "Main",
	                     MODE := 0,
	                     DisableFlag := 0,
	                     UseAsFolder := 0)
		TAG
			AnyJogRise : BOOL (RADIX := Decimal) := 0;
			AnyJogStorage : BOOL (RADIX := Decimal) := 0;
			btHpuValvesOK : BOOL (RADIX := Decimal) := 0;
			HydRunFall : BOOL (RADIX := Decimal) := 0;
			HydRunFallStorage : BOOL (RADIX := Decimal) := 0;
			HydRunRise : BOOL (RADIX := Decimal) := 0;
			HydRunRiseStorage : BOOL (RADIX := Decimal) := 0;
			iAxis : DINT (RADIX := Decimal) := 2;
			ManualSpinCCW : BOOL (RADIX := Decimal) := 0;
			ManualSpinCW : BOOL (RADIX := Decimal) := 0;
			SafetyRelayAutoResetDelayStorage : BOOL (RADIX := Decimal) := 0;
			spinActive : BOOL (RADIX := Decimal) := 0;
			spinDemand : BOOL (RADIX := Decimal) := 0;
			tbHydSShot : BOOL (RADIX := Decimal) := 0;
			tbHydSShotStorage : BOOL (RADIX := Decimal) := 0;
			timerSafetyRelayDelay : TIMER  := [0,1000,0];
			timerSpinDownCCW : TIMER  := [0,2000,0];
			timerSpinDownCW : TIMER  := [0,2000,0];
			tmrHydLoopDelay : TIMER  := [0,2000,0];
		END_TAG

		ROUTINE Conditions 
				N: XIO(BladeRadiusKnown)MOVE(0.0,BladeRadius);
				N: JSR(S_Calc,0);
				N: GT(SFPM,0)GT(Width,0)GT(Thickness,0)GT(LastCutDepth,0)GT(HorsepowerTarget,0)OTE(ValidData);
				N: CPT(SpindleRPMError,SpindleRPM - RpmTarget)ABS(SpindleRPMError,SpindleRPMError)LT(SpindleRPMError,150.0)OTE(SpindleRPMAtTarget);
				N: XIC(tbAutoCut)ONS(tbAutoCutONS)[XIC(X_AutoCut) OTE(AutoCutCancel) ,XIO(X_AutoCut) OTE(AutoCutReq) ];
		END_ROUTINE

		ROUTINE Main 
				N: [XIC(X_AutoCut) ,XIC(X_BladeChange) ]OTE(Auto);
				N: JSR(P09_HPU,0);
				N: JSR(P10_Faults,0);
				N: JSR(RMC,0);
		END_ROUTINE

		ROUTINE P09_HPU 
				N: XIC(inPx01Pump1Inlet)XIC(inPx02Pump2Inlet)XIC(InPx03PumpAA4Inlet)XIC(inPx04LoopInlet)XIC(inPx05DrainValve)OTE(btHpuValvesOK);
				N: XIC(btHpuValvesOK)XIC(inFl02OilLevelShutdownAlarm)XIC(inTs02OilTempShutdownAlarm)OTE(HPUReadyToRun);
				N: XIC(inLs07BladeGuard)XIC(HPUReadyToRun)OTE(HydReady);
				N: XIC(tbMS1HydPump)OSR(tbHydSShotStorage,tbHydSShot);
				N: XIC(HydRun)[OSR(HydRunRiseStorage,HydRunRise) ,OSF(HydRunFallStorage,HydRunFall) ];
				N: [XIC(HydRunRise) ,XIC(HydRunFall) ]OTU(HydStart)OTU(HydStop);
				N: XIC(tbHydSShot)[XIO(HydRun) OTL(HydStart) ,XIC(HydRun) OTL(HydStop) ];
				N: XIC(HydRun)TON(tmrHydLoopDelay,?,?)XIC(tmrHydLoopDelay.DN)OTE(HydRunning);
		END_ROUTINE

		ROUTINE P10_Faults 
				N: XIO(inSR1SafetyRelay)OTU(tbMS1HydPump)OTU(tbMS2LoopPump)OTU(tbMS3HydCoolingFan)OTU(tbMS4CoolantPump)OTU(tbMS5SwarfPump)OTU(tbLaser);
				N: XIC(inSR1SafetyRelay)TON(timerSafetyRelayDelay,?,?)XIC(timerSafetyRelayDelay.DN)OSR(SafetyRelayAutoResetDelayStorage,SafetyRelayAutoReset);
				N: OTU(Fault);
				RC: "Main Power is OFF";
				N: XIO(inSR1SafetyRelay)MOVE(1,hmiFaultMessageNumber);
				RC: "Hydraulic Oil is HOT - Warning";
				N: XIO(inTs01OilTempWarning)OTE(OilWarm)MOVE(2,hmiFaultMessageNumber);
				RC: "Hydraulic Oil is HOT - Shutdown";
				N: XIO(inTs02OilTempShutdownAlarm)OTL(Fault)MOVE(3,hmiFaultMessageNumber);
				RC: "Hydraulic Oil is LOW - Warning";
				N: XIO(inFl01OilLevelWarning)MOVE(4,hmiFaultMessageNumber);
				RC: "Hydraulic Oil is LOW - Shutdown";
				N: XIO(inFl02OilLevelShutdownAlarm)OTL(Fault)MOVE(5,hmiFaultMessageNumber);
				RC: "Blade Guard is OPEN";
				N: XIO(inLs07BladeGuard)OTU(BladeRadiusKnown)MOVE(6,hmiFaultMessageNumber);
				RC: "Spindle Pump Inlet Valve is OFF";
				N: XIO(InPx03PumpAA4Inlet)MOVE(7,hmiFaultMessageNumber);
				RC: "Pump1 Inlet Valve is OFF";
				N: XIO(inPx01Pump1Inlet)MOVE(8,hmiFaultMessageNumber);
				RC: "Pump2 Inlet Valve is OFF";
				N: XIO(inPx02Pump2Inlet)MOVE(9,hmiFaultMessageNumber);
				RC: "Drain Valve is OPEN";
				N: XIO(inPx05DrainValve)MOVE(10,hmiFaultMessageNumber);
				RC: "Loop Hydraulic Filter is DIRTY";
				N: XIC(inPs01LoopFilterDirty)MOVE(11,hmiFaultMessageNumber);
				RC: "Pressure Line Hydraulic Filter is DIRTY";
				N: XIC(inPs02PressureFilterDirty)MOVE(12,hmiFaultMessageNumber);
				RC: "Spindle Case Line is BLOCKED";
				N: XIC(inPs03MotorCaseDrain)MOVE(13,hmiFaultMessageNumber);
				RC: "Swarf Filter is BLOCKED";
				N: XIC(inPs04SwarfFilterDirty)MOVE(14,hmiFaultMessageNumber);
				RC: "Gauge Axis Following ERROR";
				N: XIC(?)OTL(Fault)MOVE(15,hmiFaultMessageNumber);
				RC: "Gauge Axis Feedback LOSS";
				N: XIO(AxisX_Gauge.FeedbackOK)OTL(Fault)MOVE(16,hmiFaultMessageNumber);
				RC: "Gauge Axis Servo ERROR";
				N: XIC(?)OTL(Fault)MOVE(17,hmiFaultMessageNumber);
				RC: "Gauge Axis Minus OVERTRAVEL";
				N: XIO(AxisX_Gauge.LimitNeg)MOVE(18,hmiFaultMessageNumber);
				RC: "Gauge Axis Plus OVERTRAVEL";
				N: XIO(AxisX_Gauge.LimitPos)MOVE(19,hmiFaultMessageNumber);
				RC: "Traverse Axis Following ERROR";
				N: XIC(?)OTL(Fault)MOVE(20,hmiFaultMessageNumber);
				RC: "Traverse Axis Feedback LOSS";
				N: XIO(AxisY_Traverse.FeedbackOK)OTL(Fault)MOVE(21,hmiFaultMessageNumber);
				RC: "Traverse Axis Servo ERROR";
				N: XIC(?)OTL(Fault)MOVE(22,hmiFaultMessageNumber);
				RC: "Traverse Axis Minus OVERTRAVEL";
				N: XIO(AxisY_Traverse.LimitNeg)MOVE(23,hmiFaultMessageNumber);
		END_ROUTINE

		ROUTINE RMC 
				N: XIC(HydRun)OTE(MC_Enable);
				N: [XIC(tbA1JogIn) ,XIC(tbA1JogOut) ,XIC(tbA2JogMinus) ,XIC(tbA2JogPlus) ,XIC(tbA3JogMinus) ,XIC(tbA3JogPlus) ]OSR(AnyJogStorage,AnyJogRise);
				N: [XIC(SafetyRelayAutoReset) ,XIC(X_Fault) XIC(AnyJogRise) ]OTE(MC_Reset);
				N: [XIC(tbNorthRef) ,XIC(NorthZero) ]XIO(tbSouthRef)XIO(X_AutoCut)OTE(NorthZero);
				N: MOVE(AxisX_Gauge.PositionActual,AxisX_Gauge.PositionDisplay);
				N: [XIO(NorthZero) MOVE(AxisY_Traverse.PositionActual,AxisY_Traverse.PositionDisplay) ,XIC(NorthZero) SUB(TraverseRange,AxisY_Traverse.PositionActual,AxisY_Traverse.PositionDisplay) ];
				N: SUB(AxisZ_RaiseLower.PositionActual,BladeRadius,AxisZ_RaiseLower.PositionDisplay);
				N: FOR(S_RMC_Axis,iAxis,0,2,1);
		END_ROUTINE

		ROUTINE Spindle 
				N: GT(SpindlePressure,SpindleStallPressure)LT(SpindleRPM,SpindleStallRPM)TON(timerSpindleStall,?,?)XIC(timerSpindleStall.DN)OTE(SpindleStall);
				N: [XIC(tbCCW) XIO(ManualSpinCCW) ,XIO(tbCCW) XIC(ManualSpinCCW) ]XIO(tbCW)[XIO(ManualSpinCW) ,XIC(tbCCW) ]XIC(HydReady)XIO(X_AutoCut)XIO(SpindleStall)OTE(ManualSpinCCW);
				N: [XIC(tbCW) XIO(ManualSpinCW) ,XIO(tbCW) XIC(ManualSpinCW) ]XIO(tbCCW)[XIO(ManualSpinCCW) ,XIC(tbCW) ]XIC(HydReady)XIO(X_AutoCut)XIO(SpindleStall)OTE(ManualSpinCW);
				N: OTU(tbCW)OTU(tbCCW);
				N: [XIC(ManualSpinCCW) ,XIC(AutoSpinCCW) ]XIO(SpinCWActive)OTE(SpinCCWDemand)TOF(timerSpinDownCCW,?,?);
				N: XIC(timerSpinDownCCW.DN)OTE(SpinCCWActive);
				N: [XIC(ManualSpinCW) ,XIC(AutoSpinCW) ]XIO(SpinCCWActive)OTE(SpinCWDemand)TOF(timerSpinDownCW,?,?);
				N: XIC(timerSpinDownCW.DN)OTE(SpinCWActive);
				N: [XIC(SpinCCWDemand) ,XIC(SpinCWDemand) ]OSF(spinDemand,SpinDemandFall);
				N: [XIC(SpinCCWActive) ,XIC(SpinCWActive) ]OTE(spinActive);
				N: MUL(RpmTarget,1.05,RpmTarget105Pct)LT(RpmTarget105Pct,875.0)MOVE(875.0,RpmTarget105Pct);
		END_ROUTINE

		ROUTINE State 
				N: XIC(inSR1SafetyRelay)XIC(Fault)[OTE(X_Fault) MOVE(8,X_State) ,OSR(FaultOSR,FaultRise) ];
				N: XIO(inSR1SafetyRelay)XIO(X_AutoCut)XIO(X_BladeMeasure)XIO(X_BladeChange)XIO(X_Homing)OTE(X_Off)MOVE(1,X_State);
				N: XIC(inSR1SafetyRelay)XIO(X_AutoCut)XIO(X_BladeMeasure)XIO(X_BladeChange)XIO(X_Homing)XIO(X_Fault)[OTE(X_Manual) MOVE(2,X_State) ,JSR(X_Manual,0) ];
				N: [[XIC(AutoCutCancel) ,XIC(FaultRise) ] [OTL(AxisX_Gauge.CommandStop) OTU(AxisX_Gauge.CommandMove) OTU(AxisX_Gauge.CommandJog) ,OTL(AxisY_Traverse.CommandStop) OTU(AxisY_Traverse.CommandMove) OTU(AxisY_Traverse.CommandJog) ,OTL(AxisZ_RaiseLower.CommandStop) OTU(AxisZ_RaiseLower.CommandMove) OTU(AxisZ_RaiseLower.CommandJog) ,OSF(AutoCutCancelOSF,AutoCutCancelFall) ] ,XIC(AutoCutCancelFall) OTU(AxisX_Gauge.CommandStop) OTU(AxisY_Traverse.CommandStop) OTU(AxisZ_RaiseLower.CommandStop) ];
				N: [XIC(AutoCutReq) XIC(X_Manual) ,XIC(X_AutoCut) XIO(AutoCutCancel) XIO(State299) XIO(X_Fault) ][OTE(X_AutoCut) MOVE(6,X_State) ,ONS(AutoCutStartONS) OTL(AutoCutStateChange) OTL(State200Build) ,JSR(X_AutoCut,0) ];
				N: XIO(X_AutoCut)[OTU(State200Build) OTU(State205) OTU(State207TraverseInitial) OTU(State210Direction) OTU(State220TraverseToStart) OTU(State230StartSaw) OTU(State240) ,OTU(State250CheckRPM) OTU(State260Cut) OTU(State280) OTU(State285BladeMeasure) OTU(State290RaiseBlade) OTU(State299) ];
				N: [XIC(tbBladeChange) XIC(X_Manual) ,XIC(X_BladeChange) ]XIC(AxisX_Gauge.Homed)XIC(AxisY_Traverse.Homed)XIC(AxisZ_RaiseLower.Homed)[OTE(X_BladeChange) MOVE(5,X_State) ,ONS(BladeChangeStartONS) OTE(BladeChange10s) OTL(BladeChange10) ,JSR(X_BladeChange,0) ];
				N: XIO(X_BladeChange)OTU(BladeChange10)OTU(BladeChange20);
				N: [XIC(tbBladeMeasure) XIC(X_Manual) ,XIC(X_BladeMeasure) XIO(X_Fault) ]XIO(X_Off)XIC(AxisX_Gauge.Homed)XIC(AxisY_Traverse.Homed)XIC(AxisZ_RaiseLower.Homed)[OTE(X_BladeMeasure) MOVE(4,X_State) ,ONS(BladeMeasureStartONS) OTL(BladeMeasure10StopAll) ,JSR(X_BladeMeasure,0) ];
				N: XIO(X_BladeMeasure)[XIO(X_AutoCut) ,XIO(State285BladeMeasure) ][OTU(BladeMeasure10StopAll) OTU(BladeMeasure15ClearZero) OTU(BladeMeasure20Retract) ,OTU(BladeMeasure30Traverse) OTU(BladeMeasure40Lower) OTU(BladeMeasure50Stop) ,OTU(BladeMeasure55Raise) OTU(BladeMeasure60Stop) OTU(BladeMeasure65Measure) ,OTU(BladeMeasure70Calc) OTU(BladeMeasure75PartRef) OTU(BladeMeasure80Return) ];
				N: [XIC(tbHome) XIC(X_Manual) ,XIC(X_Homing) [XIO(AxisX_Gauge.Homed) ,XIO(AxisY_Traverse.Homed) ,XIO(AxisZ_RaiseLower.Homed) ] XIO(Fault) ][OTE(X_Homing) MOVE(3,X_State) ,JSR(X_Homing,0) ];
		END_ROUTINE

		ST_ROUTINE S_Calc 
			'if BladeRadius > 1 then
			'	RpmTarget := (SFPM / Pi) * 120.00 / (2 * BladeRadius);
			'else
			'	RpmTarget := 0.0;
			'end_if;
			'
			'SpindlePressureTarget := (HorsepowerTarget * 328.0 / 160.0 + 22.0) * 14.7;
			'if SpindlePressureTarget > 350.0 * 14.7 then
			'	SpindlePressureTarget := 350.0 * 14.7;
			'end_if;
			'
			'if State200Build then
			'	BuildCount := 0;
			'	RemainDepth := Thickness;
			'	
			'	DryCutSpeed := 200.0;
			'	DryCutDepth := 0.030;
			'	WetCutDepth := (Thickness - (DryPasses * 0.030) - LastCutDepth) / (WetPasses - 1);
			'	
			'	while BuildCount < 20 do
			'		Pass[BuildCount].WetPass := 1;
			'		if DryPasses >= BuildCount then
			'			Pass[BuildCount].WetPass := 0;
			'			Pass[BuildCount].FeedRate := DryCutSpeed;
			'			Pass[BuildCount].Depth := DryCutDepth;
			'		elsif WetPasses + DryPasses > BuildCount then
			'			Pass[BuildCount].FeedRate := WetCutSpeed;
			'			Pass[BuildCount].Depth := WetCutDepth;
			'		elsif WetPasses + DryPasses = BuildCount then
			'			Pass[BuildCount].FeedRate := LastCutSpeed;
			'			Pass[BuildCount].Depth := LastCutDepth;
			'		end_if;
			'		Pass[BuildCount].DryPass := NOT Pass[BuildCount].WetPass;
			'		RemainDepth := RemainDepth - Pass[BuildCount].Depth;
			'		Pass[BuildCount].RemainDepth := RemainDepth;
			'		BuildCount := BuildCount + 1;
			'	end_while;
			'	
			'	BuildDone := 1;
			'end_if;
		END_ST_ROUTINE

		ROUTINE S_RMC_Axis 
				N: [XIO(Axis[iAxis].LimitPos) [XIC(Auto) ,XIC(X_Manual) XIC(Axis[iAxis].CommandJog) XIO(Axis[iAxis].Reverse) ] ,XIO(Axis[iAxis].LimitNeg) [XIC(Auto) ,XIC(X_Manual) XIC(Axis[iAxis].CommandJog) XIC(Axis[iAxis].Reverse) ] ]OTE(Axis[iAxis].CommandStop);
				N: XIC(Axis[iAxis].InPosition)OTE(Axis[iAxis].MoveComplete);
				N: XIO(Axis[iAxis].Homed)MOVE(0.0,Axis[iAxis].PositionDisplay);
		END_ROUTINE

		ROUTINE X_AutoCut 
				N: XIC(State200Build)MOVE(200,State)[ONS(State200ONS) OTU(BuildDone) ,MOVE(0,StepCount) OTU(CutOnReturn) OTU(CutForward) ,XIC(BuildDone) OTL(State205) OTU(State200Build) ];
				N: XIC(State205)MOVE(205,State)[ONS(State205ONS) OTE(AutoCutStateChange) ,OTL(AxisZ_RaiseLower.CommandMove) MOVE(5.5,AxisZ_RaiseLower.PositionTarget) MOVE(RaiseLowerVelocityMax,AxisZ_RaiseLower.VelocityTarget) ,XIO(AutoCutStateChange) XIC(AxisZ_RaiseLower.MoveComplete) OTL(State207TraverseInitial) OTU(State205) OTU(AxisZ_RaiseLower.CommandMove) ];
				N: XIC(State207TraverseInitial)MOVE(207,State)[ONS(State207ONS) OTL(AxisY_Traverse.CommandMove) OTE(AutoCutStateChange) ,MOVE(0.0,AxisY_Traverse.PositionTarget) MOVE(TraverseVelocityMax,AxisY_Traverse.VelocityTarget) ,XIO(AutoCutStateChange) XIC(AxisY_Traverse.MoveComplete) OTL(State210Direction) OTU(State207TraverseInitial) OTU(AxisY_Traverse.CommandMove) ];
				N: XIC(State210Direction)MOVE(210,State)[ONS(State210ONS) [CPT(CutStartPosition,AxisY_Traverse.PositionActual + PastPart - 1.0) OTE(AutoCutStateChange) ,GT(CutStartPosition,Width) OTU(CutForward) OTL(CutOnReturn) ,LT(AxisY_Traverse.PositionActual,2.0) MOVE(0.0,CutStartPosition) OTL(CutForward) OTU(CutOnReturn) ,XIO(CutForward) XIO(CutOnReturn) [OTL(AxisZ_RaiseLower.CommandMove) ,MOVE(5.5,AxisZ_RaiseLower.PositionTarget) MOVE(RaiseLowerVelocityMax,AxisZ_RaiseLower.VelocityTarget) ] ,[XIC(CutForward) ,XIC(CutOnReturn) ] OTL(State230StartSaw) OTU(State210Direction) OTL(AutoCutStateChange) ] ,XIO(AutoCutStateChange) OTU(AxisZ_RaiseLower.CommandMove) ];
				N: XIC(State220TraverseToStart)MOVE(220,State)[ONS(State220ONS) OTL(AxisY_Traverse.CommandMove) OTE(AutoCutStateChange) ,MOVE(CutStartPosition,AxisY_Traverse.PositionTarget) MOVE(TraverseVelocityMax,AxisY_Traverse.VelocityTarget) ,XIO(AutoCutStateChange) XIC(AxisY_Traverse.MoveComplete) OTL(State210Direction) OTU(State207TraverseInitial) OTU(AxisY_Traverse.CommandMove) ];
				N: XIC(State230StartSaw)MOVE(230,State)[[XIC(Pass[StepCount].DryPass) XIC(CutOnReturn) ,XIC(Pass[StepCount].WetPass) XIC(CutForward) ] OTL(AutoSpinCW) OTU(AutoSpinCCW) ,[XIC(Pass[StepCount].DryPass) XIC(CutForward) ,XIC(Pass[StepCount].WetPass) XIC(CutOnReturn) ] OTU(AutoSpinCW) OTL(AutoSpinCCW) ,OTL(State240) OTU(State230StartSaw) ];
				N: XIC(State240)MOVE(240,State)[ONS(State240ONS) OTU(AutoCutStateChange) [OTL(AxisZ_RaiseLower.CommandMove) ,XIC(Pass[0].WetPass) OTL(tbCoolant) ] OTE(AutoCutStateChange) ,MOVE(Pass[StepCount].RemainDepth,AxisZ_RaiseLower.PositionTarget) MOVE(0.833,AxisZ_RaiseLower.VelocityTarget) ,XIO(AutoCutStateChange) XIC(AxisZ_RaiseLower.MoveComplete) OTL(State250CheckRPM) OTU(State240) OTU(AxisZ_RaiseLower.CommandMove) ];
				N: XIC(State250CheckRPM)MOVE(250,State)[ONS(State250ONS) OTE(AutoCutStateChange) ,XIO(AutoCutStateChange) [XIC(SpindleRPMAtTarget) ,XIO(SpindleRPMAtTarget) ] TON(timerState250CheckRPM,?,?) ,XIC(timerState250CheckRPM.DN) OTL(State260Cut) OTU(State250CheckRPM) ];
				N: XIC(State260Cut)MOVE(260,State)[ONS(State260ONS) OTL(AxisY_Traverse.CommandMove) OTE(AutoCutStateChange) ,XIC(CutForward) ADD(Width,PastPart,CutEndPosition) ,XIC(CutOnReturn) MOVE(0.0,CutEndPosition) ,MOVE(CutEndPosition,AxisY_Traverse.PositionTarget) DIV(Pass[StepCount].FeedRate,60.0,AxisY_Traverse.VelocityTarget) ,XIO(AutoCutStateChange) XIC(AxisY_Traverse.MoveComplete) OTL(State280) OTU(State260Cut) OTU(AxisY_Traverse.CommandMove) ];
				N: XIC(State280)[ONS(State280ONS) OTE(AutoCutStateChange) MOVE(280,State) LE(Pass[StepCount].RemainDepth,0.0) OTL(State290RaiseBlade) ,XIO(AutoCutStateChange) [XIC(Pass[StepCount].Measure) OTL(BladeMeasure10StopAll) OTL(BladeMeasureStateChange) OTU(BladeRadiusKnown) OTL(State285BladeMeasure) ,XIO(Pass[StepCount].Measure) OTL(State210Direction) ] ]ADD(StepCount,1,StepCount)OTU(State280);
				N: XIC(State285BladeMeasure)JSR(X_BladeMeasure,0)XIC(BladeRadiusKnown)OTL(State205)OTU(State285BladeMeasure);
				N: XIC(State290RaiseBlade)MOVE(290,State)[ONS(State290ONS) OTE(AutoCutStateChange) ,OTL(AxisZ_RaiseLower.CommandMove) MOVE(5.5,AxisZ_RaiseLower.PositionTarget) MOVE(RaiseLowerVelocityMax,AxisZ_RaiseLower.VelocityTarget) ,XIO(AutoCutStateChange) XIC(AxisZ_RaiseLower.MoveComplete) OTL(State299) OTU(State290RaiseBlade) OTU(AxisZ_RaiseLower.CommandMove) ];
		END_ROUTINE

		ROUTINE X_BladeChange 
				N: XIC(BladeChange10)[OTE(AxisY_Traverse.CommandMove) ,MOVE(130.0,AxisY_Traverse.PositionTarget) MOVE(TraverseVelocityHome,AxisY_Traverse.VelocityTarget) ,XIO(BladeChange10s) XIC(AxisY_Traverse.MoveComplete) OTL(BladeChange20) OTU(BladeChange10) ];
				N: XIC(BladeChange20)[OTE(AxisZ_RaiseLower.CommandMove) ,MOVE(1.51,AxisZ_RaiseLower.PositionTarget) MOVE(RaiseLowerVelocityHome,AxisZ_RaiseLower.VelocityTarget) ,XIO(AxisY_Traverse.CommandMove) XIC(AxisZ_RaiseLower.MoveComplete) OTL(BladeChangeDone) OTU(X_BladeChange) OTU(BladeChange20) ];
		END_ROUTINE

		ROUTINE X_BladeMeasure 
				N: XIC(BladeMeasure10StopAll)MOVE(310,State)[ONS(BladeMeasure10ONS) OTU(tbCoolant) OTU(tbA1JogIn) OTU(tbA1JogOut) OTU(tbA2JogMinus) OTU(tbA2JogPlus) OTU(tbA3JogMinus) OTU(tbA3JogPlus) OTE(BladeMeasureStateChange) ,OTL(AxisX_Gauge.CommandStop) OTL(AxisY_Traverse.CommandStop) OTL(AxisZ_RaiseLower.CommandStop) ,XIO(BladeMeasureStateChange) XIC(AxisX_Gauge.Stopped) XIC(AxisY_Traverse.Stopped) XIC(AxisZ_RaiseLower.Stopped) [OTL(BladeMeasure15ClearZero) OTU(BladeMeasure10StopAll) ,OTU(AxisX_Gauge.CommandStop) OTU(AxisY_Traverse.CommandStop) OTU(AxisZ_RaiseLower.CommandStop) ] ];
				N: XIC(BladeMeasure15ClearZero)MOVE(315,State)[OTL(AxisZ_RaiseLower.ClearZero) TON(timerAxisZ_RaiseLowerClearZero,?,?) ,XIC(timerAxisZ_RaiseLowerClearZero.DN) OTU(AxisZ_RaiseLower.ClearZero) OTL(BladeMeasure20Retract) OTU(BladeMeasure15ClearZero) ];
				N: XIC(BladeMeasure20Retract)MOVE(320,State)[ONS(BladeMeasure20ONS) OTE(BladeMeasureStateChange) ,OTL(AxisZ_RaiseLower.CommandMove) MOVE(1.667,AxisZ_RaiseLower.VelocityTarget) MOVE(16.0,AxisZ_RaiseLower.PositionTarget) ,XIO(BladeMeasureStateChange) XIC(AxisZ_RaiseLower.MoveComplete) [OTL(BladeMeasure30Traverse) OTU(BladeMeasure20Retract) ,OTU(AxisZ_RaiseLower.CommandMove) ] ];
				N: XIC(BladeMeasure30Traverse)MOVE(330,State)[ONS(BladeMeasure30ONS) OTE(BladeMeasureStateChange) ,OTL(AxisY_Traverse.CommandMove) MOVE(5.0,AxisY_Traverse.VelocityTarget) MOVE(1.3,AxisY_Traverse.PositionTarget) ,XIO(BladeMeasureStateChange) XIC(AxisY_Traverse.MoveComplete) [OTL(BladeMeasure40Lower) OTU(BladeMeasure30Traverse) ,OTU(AxisY_Traverse.CommandMove) ] ];
				N: XIC(BladeMeasure40Lower)MOVE(340,State)[ONS(BladeMeasure40ONS) OTE(BladeMeasureStateChange) ,OTL(AxisZ_RaiseLower.CommandMove) MOVE(0.833,AxisZ_RaiseLower.VelocityTarget) MOVE(5.0,AxisZ_RaiseLower.PositionTarget) ,XIO(BladeMeasureStateChange) XIC(inPe01BladeDetect) [OTL(BladeMeasure50Stop) OTU(BladeMeasure40Lower) ,OTU(AxisZ_RaiseLower.CommandMove) ] ];
				N: XIC(BladeMeasure50Stop)MOVE(350,State)[ONS(BladeMeasure50ONS) OTE(BladeMeasureStateChange) ,OTL(AxisZ_RaiseLower.CommandStop) ,XIO(BladeMeasureStateChange) XIC(AxisZ_RaiseLower.Stopped) [OTL(BladeMeasure55Raise) OTU(BladeMeasure50Stop) ,OTU(AxisZ_RaiseLower.CommandStop) ] ];
				N: XIC(BladeMeasure55Raise)MOVE(355,State)[ONS(BladeMeasure55ONS) OTE(BladeMeasureStateChange) ,OTL(AxisZ_RaiseLower.CommandMove) MOVE(0.333,AxisZ_RaiseLower.VelocityTarget) MOVE(12.5,AxisZ_RaiseLower.PositionTarget) ,XIO(BladeMeasureStateChange) XIO(inPe01BladeDetect) [OTL(BladeMeasure60Stop) OTU(BladeMeasure55Raise) ,OTU(AxisZ_RaiseLower.CommandMove) ] ];
				N: XIC(BladeMeasure60Stop)MOVE(360,State)[ONS(BladeMeasure60ONS) OTE(BladeMeasureStateChange) ,OTL(AxisZ_RaiseLower.CommandStop) ,XIO(BladeMeasureStateChange) XIC(AxisZ_RaiseLower.Stopped) [OTL(BladeMeasure65Measure) OTU(BladeMeasure60Stop) ,OTU(AxisZ_RaiseLower.CommandStop) ] ];
				N: XIC(BladeMeasure65Measure)MOVE(365,State)[ONS(BladeMeasure65ONS) OTE(BladeMeasureStateChange) ,OTL(AxisZ_RaiseLower.CommandMove) MOVE(0.033,AxisZ_RaiseLower.VelocityTarget) MOVE(33.640,AxisZ_RaiseLower.PositionTarget) ,XIO(BladeMeasureStateChange) XIC(inPe01BladeDetect) [OTL(BladeMeasure70Calc) OTU(BladeMeasure65Measure) ,OTU(AxisZ_RaiseLower.CommandMove) ] ];
				N: XIC(BladeMeasure70Calc)MOVE(370,State)[ONS(BladeMeasure70ONS) OTE(BladeMeasureStateChange) ,CPT(BladeRadius,AxisZ_RaiseLower.PositionActual - 0.5) OTL(BladeRadiusKnown) OTL(AxisZ_RaiseLower.CommandStop) ,XIO(BladeMeasureStateChange) XIC(AxisZ_RaiseLower.Stopped) [OTL(BladeMeasure75PartRef) OTU(BladeMeasure70Calc) ,OTU(AxisZ_RaiseLower.CommandStop) ] ];
				N: XIC(BladeMeasure75PartRef)MOVE(375,State)[ONS(BladeMeasure75ONS) OTE(BladeMeasureStateChange) ,MOVE(-0.776,AxisZ_RaiseLower.PositionTarget) OTL(AxisZ_RaiseLower.CommandZero) ,XIO(BladeMeasureStateChange) [OTL(BladeMeasure80Return) OTU(BladeMeasure75PartRef) ,OTU(AxisZ_RaiseLower.CommandZero) ] ];
				N: XIC(BladeMeasure80Return)MOVE(380,State)[ONS(BladeMeasure80ONS) OTE(BladeMeasureStateChange) ,OTL(AxisZ_RaiseLower.CommandMove) MOVE(0.333,AxisZ_RaiseLower.VelocityTarget) MOVE(0,AxisZ_RaiseLower.PositionTarget) ,XIO(BladeMeasureStateChange) XIC(AxisZ_RaiseLower.MoveComplete) [OTU(X_BladeMeasure) OTU(BladeMeasure80Return) ,OTL(BladeRadiusKnown) OTU(AxisZ_RaiseLower.CommandMove) ] ];
		END_ROUTINE

		ROUTINE X_Homing 
				N: XIO(AxisZ_RaiseLower.Homed)OTE(AxisZ_RaiseLower.CommandHome);
				N: XIC(AxisZ_RaiseLower.Homed)[XIO(AxisX_Gauge.Homed) OTE(AxisX_Gauge.CommandHome) ,XIO(AxisY_Traverse.Homed) OTE(AxisY_Traverse.CommandHome) ];
				N: MOVE(GaugeVelocityHome,AxisX_Gauge.VelocityTarget);
				N: MOVE(TraverseVelocityHome,AxisY_Traverse.VelocityTarget);
				N: MOVE(RaiseLowerVelocityHome,AxisZ_RaiseLower.VelocityTarget);
		END_ROUTINE

		ROUTINE X_Manual 
				N: XIC(tbZeroGauge)OTE(AxisX_Gauge.CommandZero);
				N: XIO(outCr04ClampAdvance)[XIC(tbA1JogIn) XIC(AxisX_Gauge.LimitNeg) OTE(AxisX_Gauge.Reverse) ,XIC(tbA1JogOut) XIC(AxisX_Gauge.LimitPos) ]OTE(AxisX_Gauge.CommandJog);
				N: [XIC(tbA2JogMinus) XIC(AxisY_Traverse.LimitNeg) OTE(AxisY_Traverse.Reverse) ,XIC(tbA2JogPlus) XIC(AxisY_Traverse.LimitPos) ]OTE(AxisY_Traverse.CommandJog);
				N: [XIC(tbA3JogMinus) XIC(AxisZ_RaiseLower.LimitNeg) OTE(AxisZ_RaiseLower.Reverse) ,XIC(tbA3JogPlus) XIC(AxisZ_RaiseLower.LimitPos) ]OTE(AxisZ_RaiseLower.CommandJog);
				N: CPT(AxisX_Gauge.VelocityTarget,InAnPotGauge * GaugeVelocityJogMax * GaugePotScale);
				N: CPT(AxisY_Traverse.VelocityTarget,inAnPotTraverse * TraverseVelocityJogMax * TraversePotScale);
				N: CPT(AxisZ_RaiseLower.VelocityTarget,inAnPotRaiseLower * RaiseLowerVelocityJogMax * RaiseLowerPotScale);
				N: [XIC(tbDryBump) NEG(BumpDistanceDry,AxisZ_RaiseLower.PositionTarget) ,XIC(tbWetBump) NEG(BumpDistanceWet,AxisZ_RaiseLower.PositionTarget) ]OTE(AxisZ_RaiseLower.CommandMoveRelative);
		END_ROUTINE

		CHILD_PROGRAMS
		END_CHILD_PROGRAMS

	END_PROGRAM

	PROGRAM Outputs (MAIN := "Outputs",
	                 MODE := 0,
	                 DisableFlag := 0,
	                 UseAsFolder := 0)
		TAG
			iAxis : DINT (RADIX := Decimal) := 0;
			timerSwarfDelay : TIMER  := [0,1000,0];
		END_TAG

		ROUTINE Brakes 
				N: XIO(Fault)[XIC(AxisX_Gauge.CommandMove) ,XIC(AxisX_Gauge.CommandJog) ]TOF(timerGaugeBrakeDelay,?,?);
				N: XIC(timerGaugeBrakeDelay.DN)OTE(outCr02BrakeGauge);
				N: XIO(Fault)[XIC(AxisY_Traverse.CommandMove) ,XIC(AxisY_Traverse.CommandJog) ]TOF(timerTraverseBrakeDelay,?,?);
				N: XIC(timerTraverseBrakeDelay.DN)OTE(outCr01BrakeTraverse);
				N: XIO(Fault)[XIC(AxisZ_RaiseLower.CommandMove) ,XIC(AxisZ_RaiseLower.CommandJog) ]TOF(timerRaiseLowerBrakeDelay,?,?);
				N: XIC(timerRaiseLowerBrakeDelay.DN)OTE(outCr03BrakeRaiseLower);
				N: OTE(outCr04ClampAdvance);
		END_ROUTINE

		ROUTINE Clamps 
				N: [XIC(tbGaugeClamp) XIC(HydRunning) ,XIC(outCr05GageGripperAdvance) ]XIO(tbGaugeUnclamp)OTE(outCr05GageGripperAdvance);
				N: [XIC(X_AutoCut) XIO(AxisX_Gauge.InPosition) ,[XIC(tbWorkClamp) XIC(HydRunning) ,XIC(outCr04ClampAdvance) ] XIO(tbWorkUnclamp) XIO(X_Homing) XIC(AxisX_Gauge.InPosition) XIO(X_AutoCut) ][OTE(outCr04ClampAdvance) ,OTU(AxisX_Gauge.CommandJog) ];
		END_ROUTINE

		ROUTINE Coolant 
				N: XIC(tbMS4CoolantPump)OTE(outMs4Coolant);
				N: XIC(inMS4CoolantPump)TON(timerSwarfDelay,?,?);
				N: [XIC(tbMS5SwarfPump) ,XIC(timerSwarfDelay.DN) ]OTE(outMs5SwarfPump);
				N: XIC(inSR1SafetyRelay)OTE(outMs6SwarfConveyor);
		END_ROUTINE

		ROUTINE Hydraulics 
				N: [XIC(HydStart) ,XIC(HydRun) ]XIO(HydStop)XIC(HydReady)XIO(BladeChangeDone)OTE(outMs1HydrulicPump);
				N: [XIC(tbMS2LoopPump) ,XIC(OilWarm) ,XIC(HydRunning) ]OTE(outMs2LoopPump);
				N: [XIC(tbMS3HydCoolingFan) ,XIC(OilWarm) ]OTE(outMs3HydraulicCoolFan);
		END_ROUTINE

		ROUTINE Outputs 
				N: FOR(RMC_Axis,iAxis,0,2,1);
				N: JSR(Hydraulics,0);
				N: JSR(Coolant,0);
				N: JSR(Clamps,0);
				N: XIC(tbLaser)OTE(outCrlLaserLight);
				N: JSR(StackLights,0);
		END_ROUTINE

		ROUTINE RMC_Axis 
				N: MOVE(Axis[iAxis].PositionTarget,RMC:O1.Data[iAxis*2])MOVE(Axis[iAxis].VelocityTarget,RMC:O1.Data[iAxis*2+1]);
				N: XIC(Axis[iAxis].CommandMove)OTE(RMC:O2.Data[iAxis].0);
				N: XIC(Axis[iAxis].CommandJog)OTE(RMC:O2.Data[iAxis].1);
				N: XIC(Axis[iAxis].Reverse)OTE(RMC:O2.Data[iAxis].2);
				N: XIC(Axis[iAxis].CommandStop)OTE(RMC:O2.Data[iAxis].3);
				N: XIC(MC_Enable)OTE(RMC:O2.Data[3].0);
				N: XIC(MC_Reset)OTE(RMC:O2.Data[3].1);
		END_ROUTINE

		ROUTINE Spindle 
				N: [XIC(SpinCCWDemand) MOVE(-29790,outAnSpindleMotor) ,XIC(SpinCWDemand) MOVE(29790,outAnSpindleMotor) ]MUL(RpmTarget,SpindleMotorOutputScale,outAnSpindleMotor);
				N: XIC(SpinDemandFall)[MOVE(0,outAnSpindleMotor) ,MOVE(0,outAnSpindlePump) ];
		END_ROUTINE

		ROUTINE StackLights 
				N: OTE(outLtgStackLtGreen);
				N: XIC(inSR1SafetyRelay)OTE(outLtaStackLtAmber);
				N: [XIC(AxisX_Gauge.Enabled) XIO(AxisX_Gauge.InPosition) ,XIC(AxisY_Traverse.Enabled) XIO(AxisY_Traverse.InPosition) ,XIC(AxisZ_RaiseLower.Enabled) XIO(AxisZ_RaiseLower.InPosition) ]OTE(outLtrStackLtRed);
		END_ROUTINE

		CHILD_PROGRAMS
		END_CHILD_PROGRAMS

	END_PROGRAM

	TASK MainTask (Type := CONTINUOUS,
	               Rate := 10,
	               Priority := 10,
	               Watchdog := 500,
	               DisableUpdateOutputs := No,
	               InhibitTask := No)
			Init;
			Inputs;
			MainProgram;
			Outputs;
	END_TASK

CONFIG CST(SystemTimeMasterID := 0) END_CONFIG

CONFIG EthernetNetwork(SupervisorModeEnabled := 0,
	                                 SupervisorPrecedence := 0,
	                                 BeaconInterval := 400,
	                                 BeaconTimeout := 1960,
	                                 VLANID := 0) END_CONFIG

CONFIG EthernetPort1(Label := "1",
	                             PortEnabled := 1) END_CONFIG

CONFIG EthernetPort2(Label := "2",
	                             PortEnabled := 1) END_CONFIG

CONFIG TimeSynchronize(Priority1 := 128,
	                                 Priority2 := 128,
	                                 PTPEnable := 0) END_CONFIG

CONFIG WallClockTime(LocalTimeAdjustment := 0,
	                     TimeZone := 0) END_CONFIG

END_CONTROLLER

